com.volmit.wormholes.Info -> com.volmit.wormholes.src.Lorem:
    java.lang.String TAG -> Lorem
    java.lang.String PERM_RELOAD -> ipsum
    java.lang.String PERM_LIST -> dolor
    java.lang.String PERM_CREATE -> sit
    java.lang.String PERM_DESTROY -> amet
    java.lang.String PERM_BUILD -> consectetur
    java.lang.String PERM_CONFIGURE -> adipiscing
    java.lang.String PERM_USE -> elit
    java.lang.String HR -> Morbi
    java.lang.String HRN -> pulvinar
    com.volmit.wormholes.util.TextMap r -> vulputate
    12:12:void <init>() -> <init>
    29:29:java.lang.String hr() -> Lorem
    34:34:java.lang.String hrn(java.lang.String) -> Lorem
    39:56:java.lang.String[] mv(java.lang.String,com.volmit.wormholes.util.C[]) -> Lorem
    61:92:java.lang.String mk(java.lang.String,com.volmit.wormholes.util.C[]) -> ipsum
    97:108:void splash() -> ipsum
    112:113:void m(java.lang.String) -> ipsum
    117:1017:void buildBlocks() -> dolor
    14:25:void <clinit>() -> <clinit>
com.volmit.wormholes.Settings -> com.volmit.wormholes.src.ipsum:
    boolean BUNGEECORD_SEND_ONLY -> dictum
    java.util.ArrayList ALLOW_ENTITIY_TYPES -> Vestibulum
    java.util.ArrayList APERTURE_ENTITIY_TYPES -> in
    boolean ENABLE_PROJECTIONS -> purus
    boolean ALLOW_ENTITIES -> non
    boolean SPLASH -> mi
    boolean ENABLE_APERTURE -> euismod
    int MAX_VELOCITY_CAPTURE_RANGE -> Pellentesque
    int MAX_PORTAL_SIZE -> at
    int APERTURE_MAX_SPEED -> iaculis
    int WORMHOLE_WORKER_THREADS -> urna
    int WORMHOLE_POWER_THREADS -> Proin
    int WORMHOLE_SKIN_FLUSH -> ac
    int PROJECTION_CHANGE_THROTTLE -> enim
    int PROJECTION_SAMPLE_RADIUS -> posuere
    int PROJECTION_MAX_SPEED -> molestie
    int CHUNK_SEND_RATE -> odio
    int CHUNK_SEND_MAX -> a
    int CHUNK_MAX_CHANGE -> facilisis
    int NETWORK_POPULATE_MAPPING_INTERVAL -> In
    int NETWORK_MAX_PACKET_SIZE -> hac
    int NETWORK_COMPRESSION_LEVEL -> habitasse
    int NETWORK_PUSH_THRESHOLD -> platea
    int NETWORK_FLUSH_THRESHOLD -> dictumst
    int NETWORK_POLL_THRESHOLD -> Nam
    14:14:void <init>() -> <init>
    170:196:com.volmit.wormholes.util.DataCluster getConfig() -> sit
    201:213:void chkConfig() -> amet
    217:274:void chkField(java.lang.reflect.Field) -> Lorem
    278:304:void setConfig(com.volmit.wormholes.util.DataCluster) -> Lorem
    323:350:com.volmit.wormholes.util.DataCluster getExperimentalConfig() -> consectetur
    355:380:void setExperimentalConfig(com.volmit.wormholes.util.DataCluster) -> ipsum
    18:319:void <clinit>() -> <clinit>
com.volmit.wormholes.Status -> com.volmit.wormholes.src.dolor:
    int packetBytesPerSecond -> metus
    double projectionTime -> nisl
    int permutationsPerSecond -> magna
    int pps -> tortor
    boolean fdq -> tempus
    com.volmit.wormholes.util.Average avgBPS -> sem
    com.volmit.wormholes.util.Average avgPower -> sed
    com.volmit.wormholes.util.Average avgWrk -> volutpat
    java.lang.String inf -> rhoncus
    int lightFault -> sapien
    int lightFaulted -> orci
    7:7:void <init>() -> <init>
    24:31:void sample() -> adipiscing
    9:20:void <clinit>() -> <clinit>
com.volmit.wormholes.WAPI -> com.volmit.wormholes.src.sit:
    15:15:void <init>() -> <init>
    19:19:java.util.List getPortals() -> elit
    24:24:java.util.List getLocalPortals() -> Morbi
    29:39:java.util.List getRemotePortals() -> pulvinar
    44:44:com.volmit.wormholes.util.ThreadInformation getWorkerPoolInfo() -> vulputate
    49:49:com.volmit.wormholes.util.ThreadInformation getPowerPoolInfo() -> dictum
    54:54:com.volmit.wormholes.util.ParallelPoolManager getWorkerPool() -> Vestibulum
    59:59:com.volmit.wormholes.util.ParallelPoolManager getPowerPool() -> in
    64:72:com.volmit.wormholes.portal.Portal getPortalAt(org.bukkit.Location) -> Lorem
    77:77:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
    82:82:java.util.List getPortalAreasAt(org.bukkit.Location) -> ipsum
    87:87:java.util.List getPortalCloseAreaAt(org.bukkit.Location) -> dolor
    92:100:com.volmit.wormholes.portal.Portal getPortalByKey(com.volmit.wormholes.portal.PortalKey) -> Lorem
    105:105:boolean hasBungeecordConnection() -> purus
    110:110:java.lang.String getServerName() -> getServerName
    115:116:void fxShockPortal(com.volmit.wormholes.portal.LocalPortal) -> Lorem
    120:121:void fxShockAllPortal(com.volmit.wormholes.portal.LocalPortal) -> ipsum
com.volmit.wormholes.Wormholes -> com.volmit.wormholes.src.amet:
    com.volmit.wormholes.Wormholes instance -> ligula
    com.volmit.wormholes.network.VortexBus bus -> Sed
    com.volmit.wormholes.service.MutexService host -> ultrices
    com.volmit.wormholes.provider.PortalProvider provider -> imperdiet
    com.volmit.wormholes.service.PortalRegistry registry -> turpis
    com.volmit.wormholes.service.ApertureService aperture -> Nullam
    com.volmit.wormholes.service.ProjectionService projector -> vehicula
    com.volmit.wormholes.service.TimingsService timings -> porta
    com.volmit.wormholes.service.EntityService entity -> ultricies
    com.volmit.wormholes.service.SkinService skin -> vestibulum
    com.volmit.wormholes.service.IOService io -> felis
    com.volmit.wormholes.service.EffectService fx -> nec
    com.volmit.wormholes.util.ParallelPoolManager pool -> tristique
    com.volmit.wormholes.util.SubGroup sub -> lacinia
    com.volmit.wormholes.util.D dispatcher -> Duis
    47:47:void <init>() -> <init>
    68:90:void onStart() -> onStart
    95:104:void onStop() -> non
    111:149:void onTick() -> mi
    153:163:void doReload() -> euismod
    167:431:void buildSubs() -> Pellentesque
    437:437:void onConstruct() -> at
    442:449:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    454:454:com.volmit.wormholes.Wormholes getInstance() -> iaculis
    459:459:com.volmit.wormholes.network.VortexBus getBus() -> urna
    464:464:com.volmit.wormholes.service.MutexService getHost() -> Proin
    469:469:com.volmit.wormholes.provider.PortalProvider getProvider() -> ac
    474:474:com.volmit.wormholes.service.PortalRegistry getRegistry() -> enim
    479:479:com.volmit.wormholes.service.ApertureService getAperture() -> posuere
    484:484:com.volmit.wormholes.service.ProjectionService getProjector() -> molestie
    489:489:com.volmit.wormholes.service.TimingsService getTimings() -> odio
    494:494:com.volmit.wormholes.service.EntityService getEntity() -> a
    499:499:com.volmit.wormholes.service.SkinService getSkin() -> facilisis
    504:504:com.volmit.wormholes.service.IOService getIo() -> In
    509:509:com.volmit.wormholes.service.EffectService getFx() -> hac
    514:514:com.volmit.wormholes.util.ParallelPoolManager getPool() -> habitasse
    519:519:com.volmit.wormholes.util.SubGroup getSub() -> platea
    524:524:com.volmit.wormholes.util.D getDispatcher() -> dictumst
com.volmit.wormholes.Wormholes$1 -> com.volmit.wormholes.src.amet$1:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    168:168:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    171:244:void list(org.bukkit.command.CommandSender,java.lang.String[]) -> Lorem
    249:253:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    258:259:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$2 -> com.volmit.wormholes.src.amet$2:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    263:263:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    266:299:void list(org.bukkit.command.CommandSender) -> Lorem
    304:305:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    310:311:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$3 -> com.volmit.wormholes.src.amet$3:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    315:315:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    318:327:void v(org.bukkit.command.CommandSender) -> ipsum
    332:333:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    338:339:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$4 -> com.volmit.wormholes.src.amet$4:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    343:343:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    346:357:void v(org.bukkit.command.CommandSender) -> ipsum
    362:363:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    368:369:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$5 -> com.volmit.wormholes.src.amet$5:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    373:373:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    377:378:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    383:400:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$6 -> com.volmit.wormholes.src.amet$6:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    404:404:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    407:417:void go(org.bukkit.command.CommandSender) -> dolor
    422:423:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    428:429:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.WormholesBungeecord -> com.volmit.wormholes.src.consectetur:
    6:6:void <init>() -> <init>
    11:16:void onEnable() -> onEnable
    21:22:void onDisable() -> onDisable
com.volmit.wormholes.aperture.Aperture -> com.volmit.wormholes.src.adipiscing:
    9:10:void <init>(com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
com.volmit.wormholes.aperture.AperturePlane -> com.volmit.wormholes.src.elit:
    com.volmit.wormholes.util.GMap instanceMap -> eget
    com.volmit.wormholes.util.GMap instanceVa -> semper
    26:29:void <init>() -> <init>
    33:35:void clear() -> clear
    39:71:byte[] compress() -> Nam
    76:119:void addCompressed(byte[]) -> Lorem
    123:130:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    135:142:com.volmit.wormholes.util.GMap remapLook(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> ipsum
    149:178:void sample(com.volmit.wormholes.portal.LocalPortal) -> dolor
    182:182:int size() -> size
com.volmit.wormholes.aperture.BlacklistAperture -> com.volmit.wormholes.src.Morbi:
    7:8:void <init>() -> <init>
com.volmit.wormholes.aperture.EntityHider -> com.volmit.wormholes.src.pulvinar:
    com.google.common.collect.Table observerEntityMap -> aliquam
    com.comphenix.protocol.PacketType[] ENTITY_PACKETS -> lectus
    com.comphenix.protocol.ProtocolManager manager -> consequat
    org.bukkit.event.Listener bukkitListener -> neque
    com.comphenix.protocol.events.PacketAdapter protocolListener -> sagittis
    com.volmit.wormholes.aperture.EntityHider$Policy policy -> lorem
    35:83:void <init>(org.bukkit.plugin.Plugin,com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
    99:106:boolean setVisibility(org.bukkit.entity.Player,int,boolean) -> Lorem
    125:131:boolean setMembership(org.bukkit.entity.Player,int,boolean) -> ipsum
    146:146:boolean getMembership(org.bukkit.entity.Player,int) -> Lorem
    160:162:boolean isVisible(org.bukkit.entity.Player,int) -> ipsum
    176:182:void removeEntity(org.bukkit.entity.Entity,boolean) -> Lorem
    192:193:void removePlayer(org.bukkit.entity.Player) -> removePlayer
    202:202:org.bukkit.event.Listener constructBukkit() -> metus
    237:237:com.comphenix.protocol.events.PacketAdapter constructProtocol(org.bukkit.plugin.Plugin) -> Lorem
    266:273:boolean toggleEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> Lorem
    288:296:boolean showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> ipsum
    310:328:boolean hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> dolor
    347:349:boolean canSee(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sit
    354:356:void validate(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> amet
    365:365:com.volmit.wormholes.aperture.EntityHider$Policy getPolicy() -> nisl
    370:376:void close() -> close
    38:38:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.EntityHider$1 -> com.volmit.wormholes.src.pulvinar$1:
    com.volmit.wormholes.aperture.EntityHider this$0 -> vel
    203:203:void <init>(com.volmit.wormholes.aperture.EntityHider) -> <init>
    207:208:void onEntityDeath(org.bukkit.event.entity.EntityDeathEvent) -> Lorem
    213:217:void onChunkUnload(org.bukkit.event.world.ChunkUnloadEvent) -> Lorem
    222:223:void onPlayerQuit(org.bukkit.event.player.PlayerQuitEvent) -> Lorem
com.volmit.wormholes.aperture.EntityHider$2 -> com.volmit.wormholes.src.pulvinar$2:
    com.volmit.wormholes.aperture.EntityHider this$0 -> vel
    238:238:void <init>(com.volmit.wormholes.aperture.EntityHider,org.bukkit.plugin.Plugin,com.comphenix.protocol.PacketType[]) -> <init>
    242:248:void onPacketSending(com.comphenix.protocol.events.PacketEvent) -> onPacketSending
com.volmit.wormholes.aperture.EntityHider$3 -> com.volmit.wormholes.src.pulvinar$3:
    int[] $SwitchMap$com$volmit$wormholes$aperture$EntityHider$Policy -> Quisque
    99:99:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.EntityHider$Policy -> com.volmit.wormholes.src.pulvinar$Lorem:
    com.volmit.wormholes.aperture.EntityHider$Policy WHITELIST -> congue
    com.volmit.wormholes.aperture.EntityHider$Policy BLACKLIST -> vitae
    com.volmit.wormholes.aperture.EntityHider$Policy[] $VALUES -> ornare
    45:45:com.volmit.wormholes.aperture.EntityHider$Policy[] values() -> values
    45:45:com.volmit.wormholes.aperture.EntityHider$Policy valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    45:57:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.RemoteEntity -> com.volmit.wormholes.src.vulputate:
    int id -> id
    int aid -> Integer
    org.bukkit.entity.EntityType remoteType -> commodo
    12:16:void <init>(int,org.bukkit.entity.EntityType,int) -> <init>
    21:21:int getRemoteId() -> magna
    27:27:org.bukkit.entity.EntityType getRemoteType() -> tortor
    33:33:java.lang.String getName() -> getName
    39:43:int hashCode() -> hashCode
    49:70:boolean equals(java.lang.Object) -> equals
    76:76:int getActualId() -> tempus
com.volmit.wormholes.aperture.RemoteInstance -> com.volmit.wormholes.src.dictum:
    int getRemoteId() -> magna
    org.bukkit.entity.EntityType getRemoteType() -> tortor
    java.lang.String getName() -> getName
    int getActualId() -> tempus
    19:29:com.volmit.wormholes.aperture.RemoteInstance create(org.bukkit.entity.Entity) -> Lorem
com.volmit.wormholes.aperture.RemotePlayer -> com.volmit.wormholes.src.Vestibulum:
    java.lang.String name -> name
    java.util.UUID uuid -> ante
    13:17:void <init>(int,java.lang.String,java.util.UUID,int) -> <init>
    22:22:java.lang.String getName() -> getName
    27:27:java.util.UUID getUuid() -> getUuid
    33:37:int hashCode() -> hashCode
    43:78:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.aperture.VEntity -> com.volmit.wormholes.src.in:
    org.bukkit.entity.EntityType type -> cursus
    int id -> id
    org.bukkit.Location location -> suscipit
    org.bukkit.Location last -> Mauris
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID uuid -> ante
    float yaw -> yaw
    float pit -> convallis
    float lya -> viverra
    float lpi -> lacus
    com.volmit.wormholes.aperture.VirtualPlayer vp -> eu
    37:49:void <init>(org.bukkit.entity.Player,org.bukkit.entity.EntityType,int,java.util.UUID,org.bukkit.Location,java.lang.String) -> <init>
    53:60:void prelativeMove(double,double,double) -> Lorem
    64:87:void prelativeMoveLook(double,double,double,float,float) -> Lorem
    91:100:void pteleport(double,double,double,float,float) -> ipsum
    104:114:void plook(float,float) -> Lorem
    118:129:void despawn() -> sem
    133:155:void spawn() -> sed
    161:168:void send(com.volmit.wormholes.util.AbstractPacket) -> Lorem
    172:172:org.bukkit.entity.EntityType getType() -> getType
    177:177:int getId() -> getId
    182:184:void move(double,double,double,float,float) -> dolor
    188:192:void look(float,float) -> ipsum
    196:198:void teleport(double,double,double,float,float) -> sit
    202:206:void setSneaking(boolean) -> setSneaking
    210:214:void swingArm() -> volutpat
    218:222:void takeDamage() -> rhoncus
    226:276:void flush() -> flush
    281:294:int hashCode() -> hashCode
    300:392:boolean equals(java.lang.Object) -> equals
    397:397:org.bukkit.Location getLocation() -> getLocation
    402:402:org.bukkit.Location getLast() -> sapien
    407:407:org.bukkit.entity.Player getViewer() -> orci
    412:412:java.util.UUID getUuid() -> getUuid
com.volmit.wormholes.aperture.VirtualPlayer -> com.volmit.wormholes.src.purus:
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID uuid -> ante
    java.lang.Integer id -> Phasellus
    java.lang.String name -> name
    java.lang.String displayName -> displayName
    org.bukkit.Location location -> suscipit
    org.bukkit.Location nextLocation -> accumsan
    java.lang.Boolean onGround -> egestas
    java.lang.Boolean missingSkin -> Praesent
    46:56:void <init>(org.bukkit.entity.Player,java.util.UUID,java.lang.Integer,java.lang.String,java.lang.String) -> <init>
    60:77:void spawn(org.bukkit.Location) -> sit
    81:83:void despawn() -> sem
    87:101:void tick() -> tick
    105:106:void move(org.bukkit.Location) -> amet
    110:112:void teleport(org.bukkit.Location) -> teleport
    116:116:org.bukkit.entity.Player getViewer() -> orci
    121:121:java.util.UUID getUuid() -> getUuid
    126:126:java.lang.Integer getId() -> ligula
    131:131:java.lang.String getName() -> getName
    136:136:java.lang.String getDisplayName() -> getDisplayName
    141:141:org.bukkit.Location getLocation() -> getLocation
    146:146:org.bukkit.Location getNextLocation() -> Sed
    151:151:java.lang.Boolean getOnGround() -> ultrices
    156:156:java.lang.String mark() -> imperdiet
    161:177:void sendPlayerInfoRemove() -> turpis
    181:201:void sendPlayerInfo() -> Nullam
    205:216:void sendNamedEntitySpawn() -> vehicula
    220:221:void animationSwingMainArm() -> porta
    225:226:void animationTakeDamage() -> ultricies
    230:234:void sendAnimation(int) -> Lorem
    238:243:void sendEntityMetadata() -> vestibulum
    247:248:void animationSneaking(boolean) -> Lorem
    252:258:void sendEntityMetadataSneaking(boolean) -> ipsum
    262:265:void sendEntityDestroy() -> felis
    269:293:void sendEntityMove() -> nec
    297:304:void sendEntityRelativeMove(org.bukkit.util.Vector) -> Lorem
    308:342:void sendEntityRelativeMoveLook(org.bukkit.util.Vector) -> ipsum
    346:350:void sendEntityHeadLook() -> tristique
    354:354:int getCompressedDiff(double,double) -> Lorem
    359:359:int getCompressedDiff8(double,double) -> ipsum
    365:375:int hashCode() -> hashCode
    381:482:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.aperture.WhitelistAperture -> com.volmit.wormholes.src.non:
    7:8:void <init>() -> <init>
com.volmit.wormholes.config.CMax -> com.volmit.wormholes.src.mi:
    double value() -> value
com.volmit.wormholes.config.CMin -> com.volmit.wormholes.src.euismod:
    double value() -> value
com.volmit.wormholes.config.CName -> com.volmit.wormholes.src.Pellentesque:
    java.lang.String value() -> value
com.volmit.wormholes.config.Experimental -> com.volmit.wormholes.src.at:
com.volmit.wormholes.config.Permissable -> com.volmit.wormholes.src.iaculis:
    boolean canReload -> eros
    boolean canCreate -> et
    boolean canDestroy -> sodales
    boolean canList -> scelerisque
    boolean canUse -> velit
    boolean canBuild -> canBuild
    boolean canConfigure -> Donec
    org.bukkit.command.CommandSender p -> quam
    18:27:void <init>(org.bukkit.command.CommandSender) -> <init>
    31:39:boolean has(java.lang.String[]) -> Lorem
    44:44:boolean canReload() -> lacinia
    49:49:boolean canCreate() -> Duis
    54:54:boolean canDestroy() -> tempor
    59:59:boolean canList() -> eget
    64:64:boolean canUse() -> semper
    69:69:boolean canBuild() -> canBuild
    74:74:boolean canConfigure() -> aliquam
    79:79:org.bukkit.command.CommandSender getP() -> lectus
com.volmit.wormholes.event.PortalActivatePlayerEvent -> com.volmit.wormholes.src.urna:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalDeactivatePlayerEvent -> com.volmit.wormholes.src.Proin:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalEnterPlayerEvent -> com.volmit.wormholes.src.ac:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalEvent -> com.volmit.wormholes.src.enim:
    com.volmit.wormholes.portal.Portal portal -> malesuada
    11:13:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
    17:17:com.volmit.wormholes.portal.Portal getPortal() -> consequat
com.volmit.wormholes.event.PortalPlayerEvent -> com.volmit.wormholes.src.posuere:
    org.bukkit.entity.Player player -> player
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
    19:19:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.event.WormholeCreateEvent -> com.volmit.wormholes.src.molestie:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.event.WormholeLinkEvent -> com.volmit.wormholes.src.odio:
    com.volmit.wormholes.portal.Portal linked -> quis
    11:14:void <init>(com.volmit.wormholes.portal.Portal,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:com.volmit.wormholes.portal.Portal getLinked() -> neque
com.volmit.wormholes.event.WormholePushEntityEvent -> com.volmit.wormholes.src.a:
    org.bukkit.entity.Entity entity -> entity
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Entity) -> <init>
    19:19:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.event.WormholeUnlinkEvent -> com.volmit.wormholes.src.facilisis:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.exception.DuplicatePortalKeyException -> com.volmit.wormholes.src.In:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalKeyException -> com.volmit.wormholes.src.hac:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalPositionException -> com.volmit.wormholes.src.habitasse:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.PortalException -> com.volmit.wormholes.src.platea:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.network.BaseBus -> com.volmit.wormholes.src.dictumst:
    com.volmit.wormholes.util.GList inbox -> ullamcorper
    com.volmit.wormholes.util.GList outbox -> aliquet
    11:14:void <init>() -> <init>
    19:19:com.volmit.wormholes.util.GList getInbox() -> sagittis
    25:25:com.volmit.wormholes.util.GList getOutbox() -> lorem
    31:32:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    37:38:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    43:44:void read(com.volmit.wormholes.network.Transmission) -> dolor
    49:50:void cancel(com.volmit.wormholes.network.Transmission) -> sit
com.volmit.wormholes.network.CL -> com.volmit.wormholes.src.Nam:
    com.volmit.wormholes.network.CL L1 -> nulla
    com.volmit.wormholes.network.CL L2 -> Vivamus
    com.volmit.wormholes.network.CL L3 -> tellus
    com.volmit.wormholes.network.CL L4 -> leo
    com.volmit.wormholes.network.CL[] $VALUES -> tincidunt
    3:3:com.volmit.wormholes.network.CL[] values() -> values
    3:3:com.volmit.wormholes.network.CL valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    12:12:java.lang.String get() -> get
    3:8:void <clinit>() -> <clinit>
com.volmit.wormholes.network.LocalBus -> com.volmit.wormholes.src.metus:
    3:3:void <init>() -> <init>
    8:13:void flush() -> flush
com.volmit.wormholes.network.RemoteBus -> com.volmit.wormholes.src.nisl:
    15:18:void <init>() -> <init>
    23:38:void flush() -> flush
    42:43:void sendTransmission(com.volmit.wormholes.network.Transmission) -> amet
    50:88:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    94:101:void remoteForceSend(com.volmit.wormholes.network.Transmission) -> consectetur
com.volmit.wormholes.network.Transmission -> com.volmit.wormholes.src.magna:
    12:13:void <init>(byte[]) -> <init>
    17:22:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    26:27:void send() -> send
    31:32:void setId(long) -> Lorem
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> dolor
    46:47:void setType(java.lang.String) -> setType
    51:51:long getId() -> getId
    56:56:java.lang.String getSource() -> getSource
    61:61:java.lang.String getDestination() -> vel
    66:66:java.lang.String getType() -> getType
    71:74:com.volmit.wormholes.network.Transmission createResponse() -> Quisque
    79:80:void forceSend() -> congue
com.volmit.wormholes.network.TransmissionBus -> com.volmit.wormholes.src.tortor:
    com.volmit.wormholes.util.GList getInbox() -> sagittis
    com.volmit.wormholes.util.GList getOutbox() -> lorem
    void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    void read(com.volmit.wormholes.network.Transmission) -> dolor
    void cancel(com.volmit.wormholes.network.Transmission) -> sit
    void flush() -> flush
com.volmit.wormholes.network.VortexBus -> com.volmit.wormholes.src.tempus:
    com.volmit.wormholes.network.LocalBus l -> luctus
    com.volmit.wormholes.network.RemoteBus r -> Maecenas
    java.lang.String serverName -> serverName
    com.volmit.wormholes.util.GList servers -> est
    java.lang.Boolean online -> hendrerit
    java.lang.Long throttle -> Etiam
    26:34:void <init>() -> <init>
    39:43:com.volmit.wormholes.util.GList getInbox() -> sagittis
    49:53:com.volmit.wormholes.util.GList getOutbox() -> lorem
    59:68:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    73:82:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    87:89:void read(com.volmit.wormholes.network.Transmission) -> dolor
    94:96:void cancel(com.volmit.wormholes.network.Transmission) -> sit
    101:132:void flush() -> flush
    136:137:void requestName() -> vitae
    141:142:void requestServers() -> ornare
    147:164:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    168:168:com.volmit.wormholes.network.LocalBus getL() -> Integer
    173:173:com.volmit.wormholes.network.RemoteBus getR() -> commodo
    178:178:java.lang.String getServerName() -> getServerName
    183:183:com.volmit.wormholes.util.GList getServers() -> ante
    188:188:java.lang.Boolean isOnline() -> cursus
    193:193:java.lang.Long getThrottle() -> suscipit
    198:199:void forceFlush(com.volmit.wormholes.network.Transmission) -> adipiscing
com.volmit.wormholes.portal.BaseWormhole -> com.volmit.wormholes.src.sem:
    com.volmit.wormholes.portal.LocalPortal source -> diam
    com.volmit.wormholes.portal.Portal destination -> dignissim
    com.volmit.wormholes.util.GList filters -> arcu
    17:21:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    26:26:com.volmit.wormholes.portal.LocalPortal getSource() -> Mauris
    32:32:com.volmit.wormholes.portal.Portal getDestination() -> mollis
    38:38:com.volmit.wormholes.util.GList getFilters() -> convallis
    44:60:void push(org.bukkit.entity.Entity,org.bukkit.Location) -> Lorem
    void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
com.volmit.wormholes.portal.FilterMode -> com.volmit.wormholes.src.sed:
    com.volmit.wormholes.portal.FilterMode WHITELIST -> varius
    com.volmit.wormholes.portal.FilterMode BLACKLIST -> placerat
    com.volmit.wormholes.portal.FilterMode[] $VALUES -> Nunc
    3:3:com.volmit.wormholes.portal.FilterMode[] values() -> values
    3:3:com.volmit.wormholes.portal.FilterMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.portal.FilterPolicy -> com.volmit.wormholes.src.volutpat:
    com.volmit.wormholes.portal.FilterPolicy MUTEX -> Ut
    com.volmit.wormholes.portal.FilterPolicy LOCAL -> eleifend
    com.volmit.wormholes.portal.FilterPolicy BOTH -> nibh
    com.volmit.wormholes.portal.FilterPolicy[] $VALUES -> faucibus
    3:3:com.volmit.wormholes.portal.FilterPolicy[] values() -> values
    3:3:com.volmit.wormholes.portal.FilterPolicy valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
com.volmit.wormholes.portal.LocalPortal -> com.volmit.wormholes.src.rhoncus:
    com.volmit.wormholes.portal.PortalIdentity identity -> Class
    com.volmit.wormholes.portal.PortalPosition position -> aptent
    com.volmit.wormholes.projection.ProjectionPlane plane -> taciti
    java.lang.String server -> sociosqu
    java.lang.Boolean hasBeenValid -> ad
    java.lang.Boolean hasHadWormhole -> litora
    com.volmit.wormholes.aperture.AperturePlane apature -> torquent
    java.lang.Boolean saved -> per
    com.volmit.wormholes.portal.PortalSettings settings -> conubia
    com.volmit.wormholes.projection.ProjectionMask mask -> nostra
    java.lang.Boolean sided -> inceptos
    java.lang.String displayName -> displayName
    com.volmit.wormholes.util.GMap holograms -> himenaeos
    com.volmit.wormholes.util.GList activatedEntities -> Cras
    55:70:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> <init>
    74:84:void checkKey() -> viverra
    89:159:void update() -> update
    163:169:void showHologram(org.bukkit.entity.Player,com.volmit.wormholes.util.Hologram) -> Lorem
    173:180:void removeHologram(org.bukkit.entity.Player) -> ipsum
    184:188:void clearHolograms() -> lacus
    192:197:com.volmit.wormholes.util.Hologram getHologram(org.bukkit.entity.Player) -> dolor
    202:202:boolean hasHologram(org.bukkit.entity.Player) -> sit
    207:229:void checkFrame(org.bukkit.entity.Entity,org.bukkit.Location) -> dolor
    233:234:void throwBack(org.bukkit.entity.Entity) -> ipsum
    238:267:void checkSend(org.bukkit.entity.Entity,com.volmit.wormholes.portal.Wormhole,org.bukkit.Location) -> Lorem
    271:341:void send(org.bukkit.entity.Entity,com.volmit.wormholes.portal.Wormhole,org.bukkit.Location) -> ipsum
    345:378:void checkFrame() -> eu
    382:395:void specialUpdate() -> Phasellus
    401:447:void reversePolarity() -> accumsan
    451:459:com.volmit.wormholes.util.Direction getThrowDirection(org.bukkit.Location) -> consectetur
    464:487:boolean isPlayerLookingAt(org.bukkit.entity.Player) -> amet
    492:513:com.volmit.wormholes.util.GList getPlayersLookingAt() -> egestas
    519:519:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> Praesent
    525:525:com.volmit.wormholes.portal.PortalPosition getPosition() -> eros
    531:531:com.volmit.wormholes.portal.PortalKey getKey() -> et
    537:542:boolean hasWormhole() -> sodales
    548:553:boolean isWormholeMutex() -> scelerisque
    559:564:com.volmit.wormholes.portal.Wormhole getWormhole() -> velit
    570:570:com.volmit.wormholes.service.MutexService getService() -> Donec
    576:586:com.volmit.wormholes.util.DataCluster toData() -> quam
    593:593:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    598:603:java.lang.String getServer() -> getServer
    609:609:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> malesuada
    615:620:int hashCode() -> hashCode
    626:672:boolean equals(java.lang.Object) -> equals
    679:687:boolean hasValidIshKey() -> quis
    695:724:boolean hasValidKey() -> ullamcorper
    730:730:com.volmit.wormholes.projection.ProjectionPlane getPlane() -> aliquet
    735:735:java.lang.Boolean getHasBeenValid() -> nulla
    741:741:com.volmit.wormholes.aperture.AperturePlane getApature() -> Vivamus
    746:751:void destroy() -> destroy
    755:755:java.lang.Boolean getHasHadWormhole() -> tellus
    760:760:java.lang.Boolean getSaved() -> leo
    765:765:com.volmit.wormholes.portal.PortalSettings getSettings() -> tincidunt
    770:770:com.volmit.wormholes.projection.ProjectionMask getMask() -> luctus
    776:776:java.lang.Boolean getSided() -> Maecenas
    782:825:void setSided(java.lang.Boolean) -> Lorem
    830:830:java.lang.String getDisplayName() -> getDisplayName
    836:839:void updateDisplayName(java.lang.String) -> sit
    844:844:boolean hasDisplayName() -> hasDisplayName
    850:852:void save() -> save
com.volmit.wormholes.portal.LocalPortal$1 -> com.volmit.wormholes.src.rhoncus$1:
    org.bukkit.entity.Entity val$i -> pellentesque
    com.volmit.wormholes.portal.LocalPortal this$0 -> ut
    291:291:void <init>(com.volmit.wormholes.portal.LocalPortal,java.lang.Integer,org.bukkit.entity.Entity) -> <init>
    295:296:void run() -> run
com.volmit.wormholes.portal.LocalPortal$2 -> com.volmit.wormholes.src.rhoncus$2:
    org.bukkit.entity.Player val$i -> finibus
    com.volmit.wormholes.portal.LocalPortal this$0 -> ut
    387:387:void <init>(com.volmit.wormholes.portal.LocalPortal,java.lang.Integer,org.bukkit.entity.Player) -> <init>
    391:392:void run() -> run
com.volmit.wormholes.portal.LocalPortal$3 -> com.volmit.wormholes.src.rhoncus$3:
    com.volmit.wormholes.portal.PortalPosition val$n -> fermentum
    com.volmit.wormholes.portal.LocalPortal this$0 -> ut
    408:408:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.PortalPosition) -> <init>
    412:439:void run() -> run
com.volmit.wormholes.portal.LocalPortal$3$1 -> com.volmit.wormholes.src.rhoncus$3$1:
    com.volmit.wormholes.portal.LocalPortal$3 this$1 -> augue
    415:415:void <init>(com.volmit.wormholes.portal.LocalPortal$3) -> <init>
    421:437:void run() -> run
com.volmit.wormholes.portal.LocalPortal$3$1$1 -> com.volmit.wormholes.src.rhoncus$3$1$1:
    com.volmit.wormholes.portal.LocalPortal$3$1 this$2 -> erat
    424:424:void <init>(com.volmit.wormholes.portal.LocalPortal$3$1,java.lang.Integer) -> <init>
    428:429:void run() -> run
com.volmit.wormholes.portal.LocalPortal$4 -> com.volmit.wormholes.src.rhoncus$4:
    boolean[] val$b -> Aenean
    com.volmit.wormholes.portal.LocalPortal this$0 -> ut
    475:475:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    479:484:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.LocalPortal$5 -> com.volmit.wormholes.src.rhoncus$5:
    com.volmit.wormholes.util.GList val$players -> blandit
    org.bukkit.entity.Player val$i -> finibus
    com.volmit.wormholes.portal.LocalPortal this$0 -> ut
    500:500:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,com.volmit.wormholes.util.GList,org.bukkit.entity.Player) -> <init>
    504:509:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.LocalWormhole -> com.volmit.wormholes.src.sapien:
    23:29:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    34:81:void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
    85:91:void specialVelocity(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Lorem
    95:101:void specialVelocity(org.bukkit.entity.Player,org.bukkit.util.Vector,org.bukkit.entity.Entity) -> Lorem
com.volmit.wormholes.portal.MutexWormhole -> com.volmit.wormholes.src.orci:
    16:19:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    24:30:void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
com.volmit.wormholes.portal.Portal -> com.volmit.wormholes.src.ligula:
    void update() -> update
    com.volmit.wormholes.portal.PortalIdentity getIdentity() -> Praesent
    com.volmit.wormholes.portal.PortalPosition getPosition() -> eros
    boolean hasValidKey() -> ullamcorper
    com.volmit.wormholes.portal.PortalKey getKey() -> et
    boolean hasWormhole() -> sodales
    boolean isWormholeMutex() -> scelerisque
    com.volmit.wormholes.portal.Wormhole getWormhole() -> velit
    com.volmit.wormholes.service.MutexService getService() -> Donec
    com.volmit.wormholes.util.DataCluster toData() -> quam
    void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    java.lang.String getServer() -> getServer
    com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> malesuada
    com.volmit.wormholes.aperture.AperturePlane getApature() -> Vivamus
    java.lang.Boolean getSided() -> Maecenas
    void setSided(java.lang.Boolean) -> Lorem
    java.lang.String getDisplayName() -> getDisplayName
    void updateDisplayName(java.lang.String) -> sit
    boolean hasDisplayName() -> hasDisplayName
    void save() -> save
com.volmit.wormholes.portal.PortalIdentity -> com.volmit.wormholes.src.Sed:
    com.volmit.wormholes.util.Axis axis -> risus
    com.volmit.wormholes.util.Direction front -> Fusce
    com.volmit.wormholes.util.Direction back -> maximus
    com.volmit.wormholes.util.Direction up -> ex
    com.volmit.wormholes.util.Direction down -> porttitor
    com.volmit.wormholes.util.Direction left -> nisi
    com.volmit.wormholes.util.Direction right -> justo
    com.volmit.wormholes.portal.PortalKey key -> Suspendisse
    19:28:void <init>(com.volmit.wormholes.util.Direction,com.volmit.wormholes.portal.PortalKey) -> <init>
    33:33:java.lang.String toString() -> toString
    38:46:com.volmit.wormholes.util.Axis getAx() -> est
    51:51:com.volmit.wormholes.util.Direction getFront() -> hendrerit
    56:56:com.volmit.wormholes.util.Direction getBack() -> Etiam
    61:61:com.volmit.wormholes.util.Direction getUp() -> diam
    66:66:com.volmit.wormholes.util.Direction getDown() -> dignissim
    71:71:com.volmit.wormholes.util.Direction getLeft() -> arcu
    76:76:com.volmit.wormholes.util.Direction getRight() -> varius
    81:81:com.volmit.wormholes.util.Axis getAxis() -> placerat
    86:86:com.volmit.wormholes.portal.PortalKey getKey() -> et
    91:92:void setKey(com.volmit.wormholes.portal.PortalKey) -> ipsum
com.volmit.wormholes.portal.PortalKey -> com.volmit.wormholes.src.ultrices:
    org.bukkit.DyeColor u -> elementum
    org.bukkit.DyeColor d -> mattis
    org.bukkit.DyeColor l -> primis
    org.bukkit.DyeColor r -> cubilia
    21:26:void <init>(byte[]) -> <init>
    29:34:void <init>(org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor) -> <init>
    38:38:java.lang.String getSName() -> Nunc
    43:43:com.volmit.wormholes.portal.PortalKey fromSName(java.lang.String) -> amet
    48:48:org.bukkit.DyeColor getU() -> Ut
    53:54:void setU(org.bukkit.DyeColor) -> Lorem
    58:58:org.bukkit.DyeColor getD() -> eleifend
    63:64:void setD(org.bukkit.DyeColor) -> ipsum
    68:68:org.bukkit.DyeColor getL() -> nibh
    73:74:void setL(org.bukkit.DyeColor) -> dolor
    78:78:org.bukkit.DyeColor getR() -> faucibus
    83:84:void setR(org.bukkit.DyeColor) -> sit
    88:88:byte[] toData() -> Class
    94:96:java.lang.String toString() -> toString
    102:109:int hashCode() -> hashCode
    115:152:boolean equals(java.lang.Object) -> equals
    157:202:void applyToCuboid(com.volmit.wormholes.util.Cuboid,com.volmit.wormholes.util.Direction) -> Lorem
com.volmit.wormholes.portal.PortalPosition -> com.volmit.wormholes.src.imperdiet:
    com.volmit.wormholes.util.Cuboid pane -> Curae
    com.volmit.wormholes.util.Cuboid ipane -> habitant
    com.volmit.wormholes.util.Cuboid area -> morbi
    com.volmit.wormholes.util.Cuboid activation -> senectus
    com.volmit.wormholes.util.Cuboid frameUp -> netus
    com.volmit.wormholes.util.Cuboid frameDown -> fames
    com.volmit.wormholes.util.Cuboid frameLeft -> pharetra
    com.volmit.wormholes.util.Cuboid frameRight -> potenti
    com.volmit.wormholes.util.Cuboid iarea -> pretium
    com.volmit.wormholes.util.GList frame -> dui
    com.volmit.wormholes.util.GList keyset -> massa
    org.bukkit.Location centerUp -> gravida
    org.bukkit.Location centerDown -> fringilla
    org.bukkit.Location centerLeft -> Nulla
    org.bukkit.Location centerRight -> facilisi
    org.bukkit.Location center -> libero
    org.bukkit.Location cornerUL -> condimentum
    org.bukkit.Location cornerUR -> interdum
    org.bukkit.Location cornerDL -> dapibus
    org.bukkit.Location cornerDR -> sollicitudin
    org.bukkit.Location corneriUL -> Aliquam
    org.bukkit.Location corneriUR -> auctor
    org.bukkit.Location corneriDL -> Curabitur
    org.bukkit.Location corneriDR -> feugiat
    com.volmit.wormholes.portal.PortalIdentity identity -> Class
    com.volmit.wormholes.projection.BoundingBox boundingBox -> efficitur
    45:83:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.util.Cuboid) -> <init>
    87:87:int getSize() -> getSize
    92:92:org.bukkit.Location intersectsv(org.bukkit.Location,org.bukkit.util.Vector) -> Lorem
    97:114:boolean intersects(org.bukkit.Location,org.bukkit.Location) -> Lorem
    119:136:org.bukkit.Location intersectsv(org.bukkit.Location,org.bukkit.Location) -> ipsum
    141:141:org.bukkit.block.Block getRandomKeyBlock() -> aptent
    146:146:boolean intersects(org.bukkit.Location,org.bukkit.util.Vector) -> ipsum
    151:151:boolean isInsidePortal(org.bukkit.Location) -> elit
    156:170:com.volmit.wormholes.util.Cuboid getSideArea(org.bukkit.Location) -> Morbi
    175:186:org.bukkit.Location ul() -> taciti
    191:202:org.bukkit.Location ur() -> sociosqu
    207:218:org.bukkit.Location bl() -> ad
    223:234:org.bukkit.Location br() -> litora
    239:250:org.bukkit.Location uli() -> torquent
    255:266:org.bukkit.Location uri() -> per
    271:282:org.bukkit.Location bli() -> conubia
    287:298:org.bukkit.Location bri() -> nostra
    303:303:com.volmit.wormholes.util.Cuboid getOPane() -> inceptos
    308:308:com.volmit.wormholes.util.Cuboid getPane() -> himenaeos
    313:313:com.volmit.wormholes.util.Cuboid getArea() -> Cras
    318:318:com.volmit.wormholes.util.Cuboid getFrameUp() -> pellentesque
    323:323:com.volmit.wormholes.util.Cuboid getFrameDown() -> ut
    328:328:com.volmit.wormholes.util.Cuboid getFrameLeft() -> finibus
    333:333:com.volmit.wormholes.util.Cuboid getFrameRight() -> fermentum
    338:338:com.volmit.wormholes.util.GList getFrame() -> augue
    343:343:org.bukkit.Location getCenterUp() -> erat
    348:348:org.bukkit.Location getCenterDown() -> Aenean
    353:353:org.bukkit.Location getCenterLeft() -> blandit
    358:358:org.bukkit.Location getCenterRight() -> risus
    363:363:org.bukkit.Location getCenter() -> getCenter
    368:368:org.bukkit.Location getCornerUL() -> Fusce
    373:373:org.bukkit.Location getCornerUR() -> maximus
    378:378:org.bukkit.Location getCornerDL() -> ex
    383:383:org.bukkit.Location getCornerDR() -> porttitor
    388:388:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> Praesent
    393:393:com.volmit.wormholes.projection.BoundingBox getBoundingBox() -> nisi
    398:398:com.volmit.wormholes.util.GList getKeyBlocks() -> justo
    403:403:com.volmit.wormholes.util.Cuboid getIpane() -> Suspendisse
    408:408:com.volmit.wormholes.util.GList getKeyset() -> elementum
    413:413:org.bukkit.Location getCorneriUL() -> mattis
    418:418:org.bukkit.Location getCorneriUR() -> primis
    423:423:org.bukkit.Location getCorneriDL() -> cubilia
    428:428:org.bukkit.Location getCorneriDR() -> Curae
    433:433:com.volmit.wormholes.util.Cuboid getIarea() -> habitant
    438:438:com.volmit.wormholes.util.Cuboid getActivation() -> morbi
com.volmit.wormholes.portal.PortalPosition$1 -> com.volmit.wormholes.src.imperdiet$1:
    boolean[] val$traces -> laoreet
    com.volmit.wormholes.portal.PortalPosition this$0 -> nunc
    102:102:void <init>(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    106:111:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.PortalPosition$2 -> com.volmit.wormholes.src.imperdiet$2:
    org.bukkit.Location[] val$traces -> venenatis
    com.volmit.wormholes.portal.PortalPosition this$0 -> nunc
    124:124:void <init>(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,org.bukkit.Location[]) -> <init>
    128:133:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.PortalSettings -> com.volmit.wormholes.src.turpis:
    boolean project -> rutrum
    boolean aparture -> mauris
    java.lang.String customName -> lobortis
    boolean hasCustomName -> bibendum
    boolean allowEntities -> Orci
    7:16:void <init>() -> <init>
    20:20:boolean isProject() -> senectus
    25:25:boolean isAparture() -> netus
    30:30:java.lang.String getCustomName() -> getCustomName
    35:35:boolean isHasCustomName() -> fames
    40:40:boolean isAllowEntities() -> pharetra
    45:46:void setProject(boolean) -> dolor
    50:51:void setAparture(boolean) -> sit
    55:56:void setCustomName(java.lang.String) -> setCustomName
    60:61:void setHasCustomName(boolean) -> amet
    65:66:void setAllowEntities(boolean) -> consectetur
com.volmit.wormholes.portal.RemotePortal -> com.volmit.wormholes.src.Nullam:
    java.lang.String server -> sociosqu
    com.volmit.wormholes.portal.PortalIdentity identity -> Class
    java.lang.Boolean sided -> inceptos
    java.lang.String displayName -> displayName
    java.lang.Boolean wait -> natoque
    19:25:void <init>(java.lang.String,com.volmit.wormholes.portal.PortalIdentity,java.lang.String) -> <init>
    29:30:void setWait() -> potenti
    36:36:void update() -> update
    41:41:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> Praesent
    47:47:com.volmit.wormholes.portal.PortalPosition getPosition() -> eros
    53:53:com.volmit.wormholes.portal.PortalKey getKey() -> et
    59:59:boolean hasWormhole() -> sodales
    65:65:boolean isWormholeMutex() -> scelerisque
    71:71:com.volmit.wormholes.portal.Wormhole getWormhole() -> velit
    77:77:com.volmit.wormholes.service.MutexService getService() -> Donec
    83:93:com.volmit.wormholes.util.DataCluster toData() -> quam
    99:103:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    108:108:java.lang.String getServer() -> getServer
    114:119:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> malesuada
    125:129:int hashCode() -> hashCode
    135:170:boolean equals(java.lang.Object) -> equals
    176:176:boolean hasValidKey() -> ullamcorper
    182:182:com.volmit.wormholes.aperture.AperturePlane getApature() -> Vivamus
    188:188:java.lang.Boolean getSided() -> Maecenas
    194:195:void setSided(java.lang.Boolean) -> Lorem
    200:200:java.lang.String getDisplayName() -> getDisplayName
    206:207:void updateDisplayName(java.lang.String) -> sit
    212:212:boolean hasDisplayName() -> hasDisplayName
    219:219:void save() -> save
    223:223:java.lang.Boolean getWait() -> pretium
com.volmit.wormholes.portal.Wormhole -> com.volmit.wormholes.src.vehicula:
    com.volmit.wormholes.portal.LocalPortal getSource() -> Mauris
    com.volmit.wormholes.portal.Portal getDestination() -> mollis
    void push(org.bukkit.entity.Entity,org.bukkit.Location) -> Lorem
    com.volmit.wormholes.util.GList getFilters() -> convallis
com.volmit.wormholes.portal.WormholeEntityFilter -> com.volmit.wormholes.src.porta:
    com.volmit.wormholes.portal.FilterPolicy policy -> penatibus
    com.volmit.wormholes.portal.FilterMode mode -> magnis
    com.volmit.wormholes.util.GList entities -> dis
    14:18:void <init>(com.volmit.wormholes.portal.FilterPolicy,com.volmit.wormholes.portal.FilterMode,com.volmit.wormholes.util.GList) -> <init>
    22:23:void <init>(com.volmit.wormholes.portal.FilterPolicy,com.volmit.wormholes.portal.FilterMode,org.bukkit.entity.EntityType[]) -> <init>
    28:88:boolean onFilter(com.volmit.wormholes.portal.Wormhole,org.bukkit.entity.Entity) -> Lorem
    94:94:com.volmit.wormholes.portal.FilterPolicy getFilterPolicy() -> dui
    100:100:com.volmit.wormholes.portal.FilterMode getFilterMode() -> massa
    105:105:com.volmit.wormholes.portal.FilterPolicy getPolicy() -> gravida
    110:110:com.volmit.wormholes.portal.FilterMode getMode() -> id
    115:115:com.volmit.wormholes.util.GList getEntities() -> fringilla
com.volmit.wormholes.portal.WormholeEntityFilter$1 -> com.volmit.wormholes.src.porta$1:
    int[] $SwitchMap$com$volmit$wormholes$portal$FilterMode -> parturient
    int[] $SwitchMap$com$volmit$wormholes$portal$FilterPolicy -> montes
    28:31:void <clinit>() -> <clinit>
com.volmit.wormholes.portal.WormholeFilter -> com.volmit.wormholes.src.ultricies:
    boolean onFilter(com.volmit.wormholes.portal.Wormhole,org.bukkit.entity.Entity) -> Lorem
    com.volmit.wormholes.portal.FilterPolicy getFilterPolicy() -> dui
    com.volmit.wormholes.portal.FilterMode getFilterMode() -> massa
com.volmit.wormholes.projection.ArrivalVector -> com.volmit.wormholes.src.vestibulum:
    org.bukkit.util.Vector velocity -> nascetur
    org.bukkit.util.Vector direction -> ridiculus
    org.bukkit.util.Vector offset -> mus
    12:16:void <init>(org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    20:20:org.bukkit.util.Vector getVelocity() -> getVelocity
    25:26:void setVelocity(org.bukkit.util.Vector) -> setVelocity
    30:30:org.bukkit.util.Vector getDirection() -> getDirection
    35:36:void setDirection(org.bukkit.util.Vector) -> setDirection
    40:40:org.bukkit.util.Vector getOffset() -> Nulla
    45:46:void setOffset(org.bukkit.util.Vector) -> dolor
    51:62:java.lang.String toString() -> toString
    67:80:void fromString(java.lang.String) -> consectetur
com.volmit.wormholes.projection.BaseViewportRenderer -> com.volmit.wormholes.src.felis:
    com.volmit.wormholes.projection.Viewport viewport -> Interdum
    int stage -> aggregate
    12:15:void <init>(com.volmit.wormholes.projection.Viewport,int) -> <init>
    20:20:org.bukkit.entity.Player getPlayer() -> getPlayer
    26:26:com.volmit.wormholes.projection.Viewport getViewport() -> facilisi
    32:32:int getStage() -> libero
    38:38:int getMaxStage() -> condimentum
    44:44:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> interdum
    50:53:com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> dapibus
    59:62:com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> sollicitudin
    68:68:com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> ipsum
    74:74:boolean isComplete() -> isComplete
com.volmit.wormholes.projection.BoundingBox -> com.volmit.wormholes.src.nec:
    com.volmit.wormholes.util.GList inside -> architect
    com.volmit.wormholes.util.GList entering -> benchmark
    com.volmit.wormholes.util.GList exiting -> brand
    com.volmit.wormholes.util.Cuboid cuboid -> cultivate
    15:20:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    26:55:void flush() -> flush
    59:59:boolean isInside(org.bukkit.entity.Entity) -> dolor
    64:64:boolean isEntering(org.bukkit.entity.Entity) -> sit
    69:69:boolean isEnteringOrInside(org.bukkit.entity.Entity) -> amet
    74:74:boolean isExiting(org.bukkit.entity.Entity) -> consectetur
    79:79:com.volmit.wormholes.util.GList getInside() -> Aliquam
    84:84:com.volmit.wormholes.util.GList getEntering() -> auctor
    89:89:com.volmit.wormholes.util.GList getExiting() -> Curabitur
    94:94:com.volmit.wormholes.util.Cuboid getCuboid() -> feugiat
com.volmit.wormholes.projection.MBC -> com.volmit.wormholes.src.tristique:
    com.volmit.wormholes.util.MaterialBlock mb -> deliver
    org.bukkit.util.Vector v -> deploy
    14:16:void <init>(long) -> <init>
    21:21:java.lang.String toString() -> toString
    25:28:void <init>(com.volmit.wormholes.util.MaterialBlock,org.bukkit.util.Vector) -> <init>
    33:38:long toLong() -> efficitur
    44:52:void fromLong(long) -> ipsum
    56:56:com.volmit.wormholes.util.MaterialBlock getMb() -> laoreet
    61:61:org.bukkit.util.Vector getV() -> nunc
    66:67:void setMb(com.volmit.wormholes.util.MaterialBlock) -> Lorem
    71:72:void setV(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.projection.NulledViewport -> com.volmit.wormholes.src.lacinia:
    11:12:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:void rebuild() -> venenatis
    23:23:boolean contains(org.bukkit.Location) -> pulvinar
com.volmit.wormholes.projection.PartialRenderer -> com.volmit.wormholes.src.Duis:
    com.volmit.wormholes.projection.ProjectionSet queue -> disintermediate
    com.volmit.wormholes.projection.ProjectionSet rendered -> drive
    com.volmit.wormholes.projection.Viewport view -> e
    12:16:void <init>(com.volmit.wormholes.projection.Viewport) -> <init>
    20:20:boolean isComplete() -> isComplete
    25:33:com.volmit.wormholes.util.Cuboid next() -> rutrum
    38:38:com.volmit.wormholes.projection.ProjectionSet getQueue() -> mauris
    43:43:com.volmit.wormholes.projection.ProjectionSet getRendered() -> lobortis
    48:48:com.volmit.wormholes.projection.Viewport getView() -> bibendum
com.volmit.wormholes.projection.ProjectionMask -> com.volmit.wormholes.src.tempor:
    com.volmit.wormholes.util.GList needsProjection -> enable
    11:13:void <init>() -> <init>
    17:18:void projected(org.bukkit.entity.Player) -> consectetur
    22:26:void sched(org.bukkit.entity.Player) -> adipiscing
    30:30:boolean needsProjection() -> Orci
    35:36:void clear() -> clear
com.volmit.wormholes.projection.ProjectionPlane -> com.volmit.wormholes.src.eget:
    com.volmit.wormholes.util.GMap mapping -> embrace
    com.volmit.wormholes.util.GMap remapCache -> empower
    com.volmit.wormholes.util.GMap ormapCache -> engage
    28:32:void <init>() -> <init>
    36:36:com.volmit.wormholes.util.GMap getMapping() -> natoque
    41:41:boolean hasContent() -> penatibus
    46:46:org.bukkit.util.Vector ovap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> Lorem
    51:51:com.volmit.wormholes.util.GMap omap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> dolor
    56:78:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    83:98:void addSuperCompressed(byte[]) -> ipsum
    102:102:com.volmit.wormholes.util.GList getSuperCompressedByteCull(int) -> dolor
    107:131:com.volmit.wormholes.util.GList getSuperCompressed(int) -> sit
    136:138:void blockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    143:169:void sample(org.bukkit.Location,int,boolean) -> Lorem
    173:173:com.volmit.wormholes.util.GMap getRemapCache() -> magnis
    178:178:com.volmit.wormholes.util.GMap getOrmapCache() -> dis
com.volmit.wormholes.projection.ProjectionSet -> com.volmit.wormholes.src.semper:
    com.volmit.wormholes.util.GList cuboids -> engineer
    15:17:void <init>() -> <init>
    21:24:void <init>(com.volmit.wormholes.util.GList) -> <init>
    28:30:com.volmit.wormholes.util.Cuboid pop() -> parturient
    35:39:void remove(int) -> remove
    43:47:void keep(int) -> amet
    51:51:com.volmit.wormholes.util.Cuboid get(int) -> consectetur
    56:56:int size() -> size
    61:62:void add(com.volmit.wormholes.util.GList) -> Lorem
    66:67:void add(com.volmit.wormholes.util.Cuboid) -> Lorem
    71:71:com.volmit.wormholes.util.GList get() -> montes
    76:83:com.volmit.wormholes.util.GList iterator() -> nascetur
    88:95:com.volmit.wormholes.util.GList getBlocks() -> ridiculus
    100:109:com.volmit.wormholes.util.GList getEntities() -> fringilla
    114:127:boolean contains(org.bukkit.Location) -> pulvinar
    132:145:boolean contains(org.bukkit.block.Block) -> Lorem
    151:154:int hashCode() -> hashCode
    159:159:com.volmit.wormholes.projection.ProjectionSet copy() -> mus
    165:189:boolean equals(java.lang.Object) -> equals
    194:195:void clear() -> clear
com.volmit.wormholes.projection.QueuedChunk -> com.volmit.wormholes.src.aliquam:
    int bytes -> enhance
    int dist -> envisioneer
    int lf -> evolve
    void run() -> run
    12:16:void <init>(int,int,int) -> <init>
    20:20:int getBytes() -> getBytes
    25:25:int getDist() -> Interdum
    30:30:int getLf() -> aggregate
com.volmit.wormholes.projection.RasteredChunk -> com.volmit.wormholes.src.lectus:
    int x -> x
    int z -> z
    com.comphenix.protocol.wrappers.MultiBlockChangeInfo[][][] mbi -> expedite
    org.bukkit.World world -> world
    27:32:void <init>(int,int,org.bukkit.World) -> <init>
    36:37:void flush() -> flush
    43:50:void put(int,int,int,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    54:134:int project(org.bukkit.entity.Player) -> elit
com.volmit.wormholes.projection.RasteredChunk$1 -> com.volmit.wormholes.src.lectus$1:
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange val$w -> extend
    com.volmit.wormholes.projection.RasteredChunk this$0 -> facilitate
    115:115:void <init>(com.volmit.wormholes.projection.RasteredChunk,int,int,int,org.bukkit.entity.Player,com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange) -> <init>
    121:130:void run() -> run
com.volmit.wormholes.projection.RasteredPlayer -> com.volmit.wormholes.src.consequat:
    com.volmit.wormholes.util.GMap queuedLayer -> generate
    com.volmit.wormholes.util.GMap ghostLayer -> grow
    org.bukkit.entity.Player p -> harness
    java.util.Queue q -> implement
    19:24:void <init>(org.bukkit.entity.Player) -> <init>
    28:36:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    42:91:void flush() -> flush
    95:117:int prepareChunks() -> architect
    122:128:void dequeueAll() -> benchmark
    132:132:boolean isQueued(org.bukkit.Location) -> vulputate
    137:137:int queueSize() -> brand
    11:11:com.volmit.wormholes.util.GMap access$000(com.volmit.wormholes.projection.RasteredPlayer) -> Lorem
com.volmit.wormholes.projection.RasteredPlayer$1 -> com.volmit.wormholes.src.consequat$1:
    org.bukkit.Location val$l -> incentivize
    com.volmit.wormholes.util.MaterialBlock val$mb -> incubate
    com.volmit.wormholes.projection.RasteredPlayer this$0 -> innovate
    29:29:void <init>(com.volmit.wormholes.projection.RasteredPlayer,org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> <init>
    33:34:void run() -> run
com.volmit.wormholes.projection.RasteredServer -> com.volmit.wormholes.src.neque:
    com.volmit.wormholes.util.GMap projections -> integrate
    13:15:void <init>() -> <init>
    19:25:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    29:33:void flush() -> flush
    37:45:boolean canFlush() -> cultivate
com.volmit.wormholes.projection.RasteredSystem -> com.volmit.wormholes.src.sagittis:
    com.volmit.wormholes.util.GMap rasteredPlayers -> iterate
    boolean flushing -> leverage
    com.volmit.wormholes.util.GMap queueSend -> matrix
    20:24:void <init>() -> <init>
    28:32:void dequeueAll() -> benchmark
    36:42:void dequeue(org.bukkit.entity.Player,org.bukkit.Location) -> Lorem
    46:51:boolean isQueued(org.bukkit.entity.Player,org.bukkit.Location) -> ipsum
    56:62:void queue(org.bukkit.entity.Player,org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    66:66:com.volmit.wormholes.projection.RasteredPlayer get(org.bukkit.entity.Player) -> Morbi
    71:101:void flushRasterQueue() -> deliver
    105:132:void runNext(com.volmit.wormholes.util.GList) -> ipsum
    136:142:void queueRaster(org.bukkit.entity.Player,com.volmit.wormholes.projection.QueuedChunk) -> Lorem
    146:172:void flush() -> flush
com.volmit.wormholes.projection.RasteredWorld -> com.volmit.wormholes.src.lorem:
    com.volmit.wormholes.util.GMap chunks -> maximize
    org.bukkit.World world -> world
    16:19:void <init>(org.bukkit.World) -> <init>
    23:32:void flush() -> flush
    36:36:boolean hasChunks() -> deploy
    41:43:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    47:51:void createChunkIfNull(int,int) -> Lorem
com.volmit.wormholes.projection.RenderMesh -> com.volmit.wormholes.src.vel:
    com.volmit.wormholes.util.GMap set -> mesh
    12:14:void <init>() -> <init>
    18:23:com.volmit.wormholes.projection.PartialRenderer getRenderer(org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.projection.Viewport) -> Lorem
    28:29:void removePortal(com.volmit.wormholes.portal.LocalPortal) -> sit
com.volmit.wormholes.projection.RenderSet -> com.volmit.wormholes.src.Quisque:
    com.volmit.wormholes.portal.LocalPortal portal -> monetize
    com.volmit.wormholes.util.GMap renderers -> morph
    13:16:void <init>(com.volmit.wormholes.portal.LocalPortal) -> <init>
    20:20:com.volmit.wormholes.portal.LocalPortal getPortal() -> disintermediate
    25:25:com.volmit.wormholes.util.GMap getRenderers() -> drive
    30:35:com.volmit.wormholes.projection.PartialRenderer getRenderer(com.volmit.wormholes.projection.Viewport,org.bukkit.entity.Player) -> Lorem
    40:47:void update() -> update
com.volmit.wormholes.projection.Viewport -> com.volmit.wormholes.src.congue:
    org.bukkit.entity.Player p -> harness
    com.volmit.wormholes.portal.Portal portal -> malesuada
    com.volmit.wormholes.projection.ProjectionSet set -> optimize
    22:26:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    30:34:void wipe() -> e
    38:57:void rebuild() -> venenatis
    61:61:com.volmit.wormholes.util.GList getEntities() -> fringilla
    66:71:boolean contains(org.bukkit.Location) -> pulvinar
    76:81:boolean contains(org.bukkit.block.Block) -> Lorem
    86:86:org.bukkit.Location getIris() -> enable
    91:91:org.bukkit.entity.Player getP() -> embrace
    96:96:com.volmit.wormholes.portal.Portal getPortal() -> consequat
    102:107:int hashCode() -> hashCode
    113:160:boolean equals(java.lang.Object) -> equals
    165:165:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> interdum
    170:170:org.bukkit.Location getLA() -> empower
    175:175:org.bukkit.Location getLB() -> engage
    180:202:com.volmit.wormholes.projection.ProjectionSet betweenThisAnd(com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.portal.Portal) -> Lorem
com.volmit.wormholes.projection.ViewportRenderer -> com.volmit.wormholes.src.vitae:
    org.bukkit.entity.Player getPlayer() -> getPlayer
    com.volmit.wormholes.projection.Viewport getViewport() -> facilisi
    int getStage() -> libero
    int getMaxStage() -> condimentum
    com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> interdum
    com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> dapibus
    com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> sollicitudin
    com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> ipsum
    boolean isComplete() -> isComplete
com.volmit.wormholes.provider.AutomagicalProvider -> com.volmit.wormholes.src.ornare:
    com.volmit.wormholes.util.GMap msd -> orchestrate
    45:48:void <init>() -> <init>
    53:59:void onFlush() -> engineer
    64:118:void on(com.volmit.wormholes.event.PortalActivatePlayerEvent) -> Lorem
    124:124:void on(com.volmit.wormholes.event.PortalDeactivatePlayerEvent) -> Lorem
    129:173:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    178:342:void ona(org.bukkit.event.player.PlayerInteractEvent) -> ipsum
    40:40:com.volmit.wormholes.util.GMap access$000(com.volmit.wormholes.provider.AutomagicalProvider) -> Lorem
com.volmit.wormholes.provider.AutomagicalProvider$1 -> com.volmit.wormholes.src.ornare$1:
    com.volmit.wormholes.event.PortalActivatePlayerEvent val$e -> productize
    com.volmit.wormholes.provider.AutomagicalProvider this$0 -> recontextualize
    101:101:void <init>(com.volmit.wormholes.provider.AutomagicalProvider,int,com.volmit.wormholes.event.PortalActivatePlayerEvent) -> <init>
    105:116:void run() -> run
com.volmit.wormholes.provider.AutomagicalProvider$2 -> com.volmit.wormholes.src.ornare$2:
    com.volmit.wormholes.util.Direction val$md -> redefine
    com.volmit.wormholes.util.Cuboid val$cx -> reintermediate
    org.bukkit.event.player.PlayerInteractEvent val$e -> reinvent
    com.volmit.wormholes.provider.AutomagicalProvider this$0 -> recontextualize
    309:309:void <init>(com.volmit.wormholes.provider.AutomagicalProvider,com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid,org.bukkit.event.player.PlayerInteractEvent) -> <init>
    315:340:void run() -> run
com.volmit.wormholes.provider.BaseProvider -> com.volmit.wormholes.src.Integer:
    com.volmit.wormholes.projection.RasteredSystem rasterer -> repurpose
    com.volmit.wormholes.util.GList moved -> revolutionize
    com.volmit.wormholes.util.GList conf -> scale
    long lastms -> seize
    com.volmit.wormholes.util.GList debug -> strategize
    55:64:void <init>() -> <init>
    68:72:void dedebug(org.bukkit.entity.Player) -> pulvinar
    76:80:void debug(org.bukkit.entity.Player) -> vulputate
    84:92:void errorMessage(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> Lorem
    96:96:boolean isDebugging(org.bukkit.entity.Player) -> dictum
    102:103:void flush() -> flush
    void onFlush() -> engineer
    109:118:com.volmit.wormholes.util.GList getBase(int) -> adipiscing
    123:132:com.volmit.wormholes.util.GList getBaseSqrt(int) -> elit
    138:150:com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    157:187:void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    191:218:void forceWipe(com.volmit.wormholes.portal.LocalPortal) -> consectetur
    223:248:void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    253:298:void loadAllPortals() -> enhance
    302:631:boolean configure(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> Lorem
    637:642:void dfs() -> envisioneer
    647:652:void dfd() -> evolve
    656:660:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid) -> Lorem
    666:684:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    691:692:void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    697:697:com.volmit.wormholes.projection.RasteredSystem getRasterer() -> expedite
    703:705:com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    711:711:boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    717:717:boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    723:727:void movePlayer(org.bukkit.entity.Player) -> Vestibulum
    732:732:boolean hasMoved(org.bukkit.entity.Player) -> in
    738:772:com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    50:50:com.volmit.wormholes.util.GList access$000(com.volmit.wormholes.provider.BaseProvider) -> Lorem
    50:50:long access$100(com.volmit.wormholes.provider.BaseProvider) -> ipsum
    50:50:long access$102(com.volmit.wormholes.provider.BaseProvider,long) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1 -> com.volmit.wormholes.src.Integer$1:
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.portal.LocalPortal val$l -> streamline
    com.volmit.wormholes.provider.BaseProvider this$0 -> syndicate
    326:326:void <init>(com.volmit.wormholes.provider.BaseProvider,java.lang.Integer,org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal) -> <init>
    330:625:void run() -> run
com.volmit.wormholes.provider.BaseProvider$1$1 -> com.volmit.wormholes.src.Integer$1$1:
    com.volmit.wormholes.provider.BaseProvider$1 this$1 -> synergize
    331:331:void <init>(com.volmit.wormholes.provider.BaseProvider$1,org.bukkit.entity.Player,boolean) -> <init>
    336:336:void onUpdate() -> exploit
    341:379:void onSelect(java.lang.String,int) -> Lorem
    384:386:void onOpen() -> extend
    391:424:java.lang.String onEnable(java.lang.String) -> adipiscing
    430:455:java.lang.String onDisable(java.lang.String) -> elit
    461:463:void onClose() -> facilitate
    468:610:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1$1$1 -> com.volmit.wormholes.src.Integer$1$1$1:
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> synthesize
    516:516:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,java.lang.Integer) -> <init>
    520:521:void run() -> run
com.volmit.wormholes.provider.BaseProvider$1$1$2 -> com.volmit.wormholes.src.Integer$1$1$2:
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> synthesize
    542:542:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,org.bukkit.entity.Player,boolean,org.bukkit.entity.Player) -> <init>
    547:547:void onUpdate() -> exploit
    552:553:void onSelect(java.lang.String,int) -> Lorem
    558:559:void onOpen() -> extend
    564:564:java.lang.String onEnable(java.lang.String) -> adipiscing
    570:570:java.lang.String onDisable(java.lang.String) -> elit
    576:577:void onClose() -> facilitate
    582:594:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.provider.PortalProvider -> com.volmit.wormholes.src.commodo:
    void flush() -> flush
    void loadAllPortals() -> enhance
    void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    boolean hasMoved(org.bukkit.entity.Player) -> in
    void movePlayer(org.bukkit.entity.Player) -> Vestibulum
    void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    com.volmit.wormholes.projection.RasteredSystem getRasterer() -> expedite
    com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    void dfs() -> envisioneer
    void dfd() -> evolve
com.volmit.wormholes.service.ApertureService -> com.volmit.wormholes.src.ante:
    com.volmit.wormholes.aperture.BlacklistAperture b -> target
    com.volmit.wormholes.util.GMap remoteApaturePlanes -> transform
    com.volmit.wormholes.util.GMap blacklistQueue -> transition
    com.volmit.wormholes.util.GMap blacklisted -> unleash
    40:45:void <init>() -> <init>
    49:206:void flush() -> flush
    210:250:void layer3Stream(byte[]) -> dolor
    254:260:void hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> consectetur
    264:270:void showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> adipiscing
    274:278:void showAll(org.bukkit.entity.Player) -> purus
    282:287:com.volmit.wormholes.util.GList getHidden(org.bukkit.entity.Player) -> non
    292:292:com.volmit.wormholes.aperture.BlacklistAperture getB() -> generate
    297:297:com.volmit.wormholes.util.GMap getRemoteApaturePlanes() -> grow
    302:302:com.volmit.wormholes.util.GMap getBlacklistQueue() -> harness
    307:307:com.volmit.wormholes.util.GMap getBlacklisted() -> implement
com.volmit.wormholes.service.EffectService -> com.volmit.wormholes.src.cursus:
    21:23:void <init>() -> <init>
    27:40:void strikePortal(com.volmit.wormholes.portal.LocalPortal) -> Morbi
    44:52:void strike(com.volmit.wormholes.portal.LocalPortal) -> pulvinar
    56:59:void strikens(com.volmit.wormholes.portal.LocalPortal) -> vulputate
    63:89:void strikeAll(com.volmit.wormholes.portal.LocalPortal) -> dictum
    93:97:void push(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> Lorem
    101:105:void throwBack(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    109:109:org.bukkit.util.Vector throwBackVector(org.bukkit.entity.Entity,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    114:130:void ambient(com.volmit.wormholes.portal.LocalPortal) -> Vestibulum
    134:188:void rise(com.volmit.wormholes.portal.LocalPortal) -> in
    192:246:void riseNew(com.volmit.wormholes.portal.LocalPortal) -> purus
    250:294:void phaseDeny(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> Lorem
    298:342:void phase(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> ipsum
    346:361:void visualize(com.volmit.wormholes.portal.LocalPortal) -> non
    365:371:void created(com.volmit.wormholes.portal.LocalPortal) -> mi
    375:383:void destroyed(com.volmit.wormholes.portal.LocalPortal) -> euismod
com.volmit.wormholes.service.EffectService$1 -> com.volmit.wormholes.src.cursus$1:
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    com.volmit.wormholes.service.EffectService this$0 -> visualize
    32:32:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,com.volmit.wormholes.portal.LocalPortal) -> <init>
    36:37:void run() -> run
com.volmit.wormholes.service.EffectService$2 -> com.volmit.wormholes.src.cursus$2:
    org.bukkit.block.Block val$i -> whiteboard
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    com.volmit.wormholes.service.EffectService this$0 -> visualize
    66:66:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.block.Block,com.volmit.wormholes.portal.LocalPortal) -> <init>
    70:86:void run() -> run
com.volmit.wormholes.service.EffectService$3 -> com.volmit.wormholes.src.cursus$3:
    org.bukkit.util.Vector val$vx -> B2B
    org.bukkit.Location val$l -> incentivize
    com.volmit.wormholes.service.EffectService this$0 -> visualize
    353:353:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.util.Vector,org.bukkit.Location) -> <init>
    357:358:void run() -> run
com.volmit.wormholes.service.EntityService -> com.volmit.wormholes.src.suscipit:
    com.volmit.wormholes.util.GMap entities -> B2C
    com.volmit.wormholes.util.GMap aentities -> back
    32:36:void <init>() -> <init>
    41:47:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> Lorem
    52:63:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    68:77:void on(org.bukkit.event.entity.EntityDamageEvent) -> Lorem
    81:95:void dispatchAction(int,java.lang.String) -> Lorem
    99:124:com.volmit.wormholes.util.GList getAllEntitiesAs(org.bukkit.entity.Entity) -> adipiscing
    129:154:com.volmit.wormholes.util.GList getAllPlayersAs(int) -> Morbi
    159:199:void flush() -> flush
    203:246:void set(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal,com.volmit.wormholes.aperture.RemoteInstance,org.bukkit.Location) -> Lorem
    250:252:void shutdown() -> shutdown
com.volmit.wormholes.service.IOService -> com.volmit.wormholes.src.Mauris:
    25:27:void <init>() -> <init>
    31:36:boolean hasSkin(java.util.UUID) -> Lorem
    41:67:com.volmit.wormholes.util.SkinProperties loadSkin(java.util.UUID) -> ipsum
    72:92:void saveSkin(java.util.UUID,com.volmit.wormholes.util.SkinProperties) -> Lorem
    98:108:void doConfig() -> incentivize
    112:133:void doConfigBasic() -> incubate
    137:158:void doConfigExperimental() -> innovate
    164:172:com.volmit.wormholes.util.DataCluster load(java.io.File) -> Lorem
    179:186:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.service.MutexService -> com.volmit.wormholes.src.mollis:
    com.volmit.wormholes.util.GList insideThrottle -> end
    com.volmit.wormholes.util.GMap pendingPulls -> best
    java.lang.Integer broadcastInterval -> of
    com.volmit.wormholes.util.GMap waiting -> breed
    com.volmit.wormholes.util.GMap actualVectors -> bleeding
    com.volmit.wormholes.util.GMap arrivals -> edge
    com.volmit.wormholes.util.GList iLock -> bricks
    com.volmit.wormholes.aperture.EntityHider hider -> and
    88:98:void <init>() -> <init>
    102:107:void sendArrival(com.volmit.wormholes.portal.RemotePortal,org.bukkit.entity.Player,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    111:117:void ilock(org.bukkit.entity.Entity) -> elit
    121:121:boolean isILocked(org.bukkit.entity.Entity) -> Morbi
    126:127:void unILock(org.bukkit.entity.Entity) -> pulvinar
    131:131:com.volmit.wormholes.projection.ArrivalVector getArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> ipsum
    136:136:boolean hasArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> dolor
    141:147:void setArrival(com.volmit.wormholes.portal.LocalPortal,java.util.UUID,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    151:152:void setPending(java.util.UUID,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    156:160:void addThrottle(org.bukkit.entity.Entity) -> vulputate
    164:189:void setDestinationSided(com.volmit.wormholes.portal.LocalPortal,boolean) -> Lorem
    193:200:void on(org.bukkit.event.entity.EntitySpawnEvent) -> Lorem
    205:206:void on(org.bukkit.event.player.PlayerItemHeldEvent) -> Lorem
    210:211:void removeThrottle(org.bukkit.entity.Entity) -> dictum
    215:215:boolean isThrottled(org.bukkit.entity.Entity) -> Vestibulum
    220:228:void addLocalPortal(com.volmit.wormholes.portal.Portal) -> ipsum
    232:238:void removeLocalPortal(com.volmit.wormholes.portal.Portal) -> dolor
    242:247:void removeLocalPortalReverse(com.volmit.wormholes.portal.Portal) -> sit
    251:261:com.volmit.wormholes.portal.Portal[] getPortals(com.volmit.wormholes.portal.PortalKey) -> dolor
    266:274:com.volmit.wormholes.portal.Portal getPortal(com.volmit.wormholes.portal.PortalKey,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    280:287:void on(org.bukkit.event.world.ChunkUnloadEvent) -> ipsum
    292:317:void on(org.bukkit.event.player.PlayerMoveEvent) -> Lorem
    321:345:void handleArrivalIntent(org.bukkit.entity.Player) -> mi
    349:349:boolean hasLink(com.volmit.wormholes.portal.LocalPortal) -> Pellentesque
    354:354:boolean isLinkMutex(com.volmit.wormholes.portal.LocalPortal) -> at
    359:359:boolean hasWormhole(com.volmit.wormholes.portal.LocalPortal) -> iaculis
    364:364:boolean isMutexWormhole(com.volmit.wormholes.portal.LocalPortal) -> urna
    369:374:com.volmit.wormholes.portal.Wormhole getWormhole(com.volmit.wormholes.portal.LocalPortal) -> Proin
    379:395:boolean isPositionValid(com.volmit.wormholes.portal.PortalPosition) -> ipsum
    400:417:boolean isKeyValid(com.volmit.wormholes.portal.PortalKey) -> sit
    422:439:boolean isKeyValidAlready(com.volmit.wormholes.portal.PortalKey) -> amet
    444:473:void flush() -> flush
    477:478:void on(org.bukkit.event.player.PlayerQuitEvent) -> ipsum
    482:483:void dequeue(com.volmit.wormholes.portal.Portal) -> amet
    487:505:void updateThrottles() -> integrate
    509:783:void broadcastPortals() -> iterate
    787:841:void beginStream(java.lang.String,java.lang.String,java.lang.String,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    845:853:void layer2StreamRequest(com.volmit.wormholes.portal.Portal) -> consectetur
    857:901:void layer2Stream(byte[]) -> sit
    905:947:void sendPlayerThrough(org.bukkit.entity.Player,java.util.UUID,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,java.lang.Runnable) -> Lorem
    951:955:void updatePortals() -> leverage
    960:990:void on(org.bukkit.event.player.PlayerJoinEvent) -> Lorem
    994:1002:com.volmit.wormholes.util.GList getPortals() -> matrix
    1007:1007:com.volmit.wormholes.util.GList getLocalPortals() -> maximize
    1012:1012:com.volmit.wormholes.util.GList getInsideThrottle() -> mesh
    1017:1017:java.lang.Integer getBroadcastInterval() -> monetize
    1022:1022:com.volmit.wormholes.util.GMap getMutexPortals() -> morph
    1027:1027:com.volmit.wormholes.util.GMap getPendingPulls() -> optimize
    1032:1036:void dequeueAll() -> benchmark
    1041:1048:void on(org.bukkit.event.block.BlockPhysicsEvent) -> Lorem
    1053:1060:void on(org.bukkit.event.block.BlockFromToEvent) -> Lorem
    1065:1078:void on(org.bukkit.event.entity.EntityExplodeEvent) -> Lorem
    1083:1110:void on(org.bukkit.event.block.BlockBreakEvent) -> Lorem
    1114:1148:void blockChange(org.bukkit.Location,com.volmit.wormholes.portal.Portal) -> Lorem
    1153:1161:void sendBlockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock,com.volmit.wormholes.portal.Portal) -> Lorem
    1166:1183:void on(org.bukkit.event.block.BlockPlaceEvent) -> Lorem
    1187:1187:boolean canBuild(org.bukkit.entity.Player) -> euismod
    1192:1192:boolean canDestroy(org.bukkit.entity.Player) -> Pellentesque
    1197:1201:void updateEverything(java.lang.Runnable) -> Lorem
    1205:1207:void globalReload() -> orchestrate
    1211:1211:com.volmit.wormholes.util.GMap getWaiting() -> productize
    1216:1216:com.volmit.wormholes.util.GMap getActualVectors() -> recontextualize
    1221:1221:com.volmit.wormholes.util.GMap getArrivals() -> redefine
    1226:1226:com.volmit.wormholes.util.GList getiLock() -> reintermediate
    1231:1232:void clearVectorCache() -> reinvent
    1236:1236:org.bukkit.util.Vector getActualVector(org.bukkit.entity.Player) -> at
    1241:1241:com.volmit.wormholes.aperture.EntityHider getHider() -> repurpose
    76:76:com.volmit.wormholes.util.GMap access$000(com.volmit.wormholes.service.MutexService) -> Lorem
com.volmit.wormholes.service.MutexService$1 -> com.volmit.wormholes.src.mollis$1:
    com.volmit.wormholes.portal.LocalPortal val$lp -> clicks
    java.lang.String val$as -> mortar
    java.lang.String val$to -> collaborative
    com.volmit.wormholes.service.MutexService this$0 -> compelling
    798:798:void <init>(com.volmit.wormholes.service.MutexService,com.volmit.wormholes.portal.LocalPortal,java.lang.String,java.lang.String) -> <init>
    804:839:void async() -> revolutionize
com.volmit.wormholes.service.MutexService$1$1 -> com.volmit.wormholes.src.mollis$1$1:
    java.lang.Byte[] val$i -> cross
    com.volmit.wormholes.service.MutexService$1 this$1 -> platform
    809:809:void <init>(com.volmit.wormholes.service.MutexService$1,java.lang.Byte[]) -> <init>
    815:830:void async() -> revolutionize
com.volmit.wormholes.service.MutexService$2 -> com.volmit.wormholes.src.mollis$2:
    byte[] val$msgbytes -> media
    com.volmit.wormholes.service.MutexService this$0 -> compelling
    863:863:void <init>(com.volmit.wormholes.service.MutexService,byte[]) -> <init>
    869:899:void async() -> revolutionize
com.volmit.wormholes.service.MutexService$3 -> com.volmit.wormholes.src.mollis$3:
    org.bukkit.entity.Player val$p -> exploit
    java.lang.Runnable val$r -> customized
    com.volmit.wormholes.portal.Portal val$to -> cutting
    java.util.UUID val$id -> distributed
    org.bukkit.util.Vector val$velocity -> dot
    org.bukkit.util.Vector val$direction -> com
    org.bukkit.util.Vector val$entry -> dynamic
    com.volmit.wormholes.util.FinalInteger val$cd -> business
    com.volmit.wormholes.portal.LocalPortal val$source -> efficient
    com.volmit.wormholes.service.MutexService this$0 -> compelling
    908:908:void <init>(com.volmit.wormholes.service.MutexService,int,org.bukkit.entity.Player,java.lang.Runnable,com.volmit.wormholes.portal.Portal,java.util.UUID,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,com.volmit.wormholes.util.FinalInteger,com.volmit.wormholes.portal.LocalPortal) -> <init>
    912:944:void run() -> run
com.volmit.wormholes.service.MutexService$4 -> com.volmit.wormholes.src.mollis$4:
    org.bukkit.event.player.PlayerJoinEvent val$e -> to
    org.bukkit.Location val$position -> enterprise
    com.volmit.wormholes.projection.ArrivalVector val$av -> extensible
    com.volmit.wormholes.service.MutexService this$0 -> compelling
    979:979:void <init>(com.volmit.wormholes.service.MutexService,org.bukkit.event.player.PlayerJoinEvent,org.bukkit.Location,com.volmit.wormholes.projection.ArrivalVector) -> <init>
    983:985:void run() -> run
com.volmit.wormholes.service.MutexService$5 -> com.volmit.wormholes.src.mollis$5:
    org.bukkit.Location val$lx -> frictionless
    com.volmit.wormholes.portal.Portal val$p -> front
    com.volmit.wormholes.service.MutexService this$0 -> compelling
    1115:1115:void <init>(com.volmit.wormholes.service.MutexService,org.bukkit.Location,com.volmit.wormholes.portal.Portal) -> <init>
    1119:1146:void run() -> run
com.volmit.wormholes.service.PortalRegistry -> com.volmit.wormholes.src.convallis:
    com.volmit.wormholes.util.GList destroyQueue -> global
    com.volmit.wormholes.util.GList localPortals -> granular
    com.volmit.wormholes.util.GMap mutexPortals -> holistic
    19:23:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getDestroyQueue() -> scale
    32:32:com.volmit.wormholes.util.GList getLocalPortals() -> maximize
    37:45:boolean hasPortalsInView(org.bukkit.Location) -> dictum
    50:71:com.volmit.wormholes.portal.Portal getClosestViewedPortal(org.bukkit.Location) -> Vestibulum
    76:86:com.volmit.wormholes.util.GList getPortalsInView(org.bukkit.Location) -> in
    91:101:com.volmit.wormholes.util.GList getPortalsInCloseView(org.bukkit.Location) -> purus
    106:106:com.volmit.wormholes.util.GMap getMutexPortals() -> morph
    111:121:com.volmit.wormholes.projection.ProjectionSet getOtherLocalPortals(com.volmit.wormholes.portal.Portal) -> adipiscing
    126:126:boolean isLookingAt(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> sit
    131:139:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.service.ProjectionService -> com.volmit.wormholes.src.viverra:
    com.volmit.wormholes.util.GMap remotePlanes -> impactful
    java.lang.Boolean projecting -> innovative
    java.lang.Long tpl -> integrated
    com.volmit.wormholes.util.GMap lastPort -> interactive
    com.volmit.wormholes.projection.RenderMesh mesh -> intuitive
    long lms -> killer
    40:48:void <init>() -> <init>
    52:145:void flush() -> flush
    149:160:void deproject(com.volmit.wormholes.portal.LocalPortal) -> ac
    164:173:void deproject(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> sit
    177:295:void project(com.volmit.wormholes.portal.LocalPortal) -> enim
    299:299:com.volmit.wormholes.util.GMap getRemotePlanes() -> seize
    304:304:java.lang.Boolean getProjecting() -> strategize
    309:309:java.lang.Long getTpl() -> streamline
    314:314:com.volmit.wormholes.util.GMap getLastPort() -> syndicate
    319:319:com.volmit.wormholes.projection.RenderMesh getMesh() -> synergize
    30:30:com.volmit.wormholes.util.GMap access$000(com.volmit.wormholes.service.ProjectionService) -> Lorem
    30:30:long access$100(com.volmit.wormholes.service.ProjectionService) -> ipsum
    30:30:long access$102(com.volmit.wormholes.service.ProjectionService,long) -> Lorem
    30:30:java.lang.Boolean access$202(com.volmit.wormholes.service.ProjectionService,java.lang.Boolean) -> Lorem
com.volmit.wormholes.service.ProjectionService$1 -> com.volmit.wormholes.src.viverra$1:
    com.volmit.wormholes.service.ProjectionService this$0 -> leading
    59:59:void <init>(com.volmit.wormholes.service.ProjectionService) -> <init>
    65:136:void async() -> revolutionize
com.volmit.wormholes.service.ProjectionService$2 -> com.volmit.wormholes.src.viverra$2:
    com.volmit.wormholes.projection.Viewport val$vIn -> magnetic
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    com.volmit.wormholes.portal.PortalIdentity val$identity -> mission
    com.volmit.wormholes.util.GMap val$map -> critical
    org.bukkit.entity.Player val$i -> finibus
    com.volmit.wormholes.service.ProjectionService this$0 -> leading
    227:227:void <init>(com.volmit.wormholes.service.ProjectionService,com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.util.GMap,org.bukkit.entity.Player) -> <init>
    231:256:void run() -> run
com.volmit.wormholes.service.ProjectionService$3 -> com.volmit.wormholes.src.viverra$3:
    com.volmit.wormholes.projection.Viewport val$vOut -> next
    com.volmit.wormholes.projection.Viewport val$vIn -> magnetic
    org.bukkit.entity.Player val$i -> finibus
    com.volmit.wormholes.service.ProjectionService this$0 -> leading
    260:260:void <init>(com.volmit.wormholes.service.ProjectionService,com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.projection.Viewport,org.bukkit.entity.Player) -> <init>
    264:278:void run() -> run
com.volmit.wormholes.service.SkinService -> com.volmit.wormholes.src.lacus:
    com.volmit.wormholes.util.GMap cache -> generation
    com.volmit.wormholes.util.GSet request -> one
    boolean running -> open
    19:23:void <init>() -> <init>
    27:27:boolean hasProperties(java.util.UUID) -> dolor
    32:37:com.volmit.wormholes.util.SkinProperties getProperty(java.util.UUID) -> sit
    42:48:void requestProperties(java.util.UUID) -> amet
    52:115:void flush() -> flush
    12:12:com.volmit.wormholes.util.GSet access$000(com.volmit.wormholes.service.SkinService) -> Lorem
    12:12:com.volmit.wormholes.util.GMap access$100(com.volmit.wormholes.service.SkinService) -> ipsum
    12:12:boolean access$202(com.volmit.wormholes.service.SkinService,boolean) -> Lorem
com.volmit.wormholes.service.SkinService$1 -> com.volmit.wormholes.src.lacus$1:
    com.volmit.wormholes.service.SkinService this$0 -> source
    62:62:void <init>(com.volmit.wormholes.service.SkinService) -> <init>
    68:106:void async() -> revolutionize
com.volmit.wormholes.service.TimingsService -> com.volmit.wormholes.src.eu:
    com.volmit.wormholes.util.Timed root -> out
    com.volmit.wormholes.util.Timed asyn -> the
    11:14:void <init>() -> <init>
com.volmit.wormholes.util.A -> com.volmit.wormholes.src.Phasellus:
    6:15:void <init>() -> <init>
    void async() -> revolutionize
com.volmit.wormholes.util.A$1 -> com.volmit.wormholes.src.Phasellus$1:
    com.volmit.wormholes.util.A this$0 -> box
    8:8:void <init>(com.volmit.wormholes.util.A) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.AbstractPacket -> com.volmit.wormholes.src.accumsan:
    com.comphenix.protocol.events.PacketContainer handle -> plug
    39:51:void <init>(com.comphenix.protocol.events.PacketContainer,com.comphenix.protocol.PacketType) -> <init>
    60:60:com.comphenix.protocol.events.PacketContainer getHandle() -> synthesize
    75:82:void sendPacket(org.bukkit.entity.Player) -> iaculis
    99:105:void recievePacket(org.bukkit.entity.Player) -> urna
    119:125:void receivePacket(org.bukkit.entity.Player) -> Proin
com.volmit.wormholes.util.Adapter -> com.volmit.wormholes.src.egestas:
    java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Alphabet -> com.volmit.wormholes.src.Praesent:
    com.volmit.wormholes.util.Alphabet ALPHA -> play
    com.volmit.wormholes.util.Alphabet BRAVO -> proactive
    com.volmit.wormholes.util.Alphabet CHARLIE -> real
    com.volmit.wormholes.util.Alphabet DELTA -> revolutionary
    com.volmit.wormholes.util.Alphabet ECHO -> rich
    com.volmit.wormholes.util.Alphabet FOXTROT -> robust
    com.volmit.wormholes.util.Alphabet GOLF -> scalable
    com.volmit.wormholes.util.Alphabet HOTEL -> seamless
    com.volmit.wormholes.util.Alphabet INDIA -> sexy
    com.volmit.wormholes.util.Alphabet JULIET -> sticky
    com.volmit.wormholes.util.Alphabet KILO -> strategic
    com.volmit.wormholes.util.Alphabet LIMA -> synergistic
    com.volmit.wormholes.util.Alphabet MIKE -> transparent
    com.volmit.wormholes.util.Alphabet NOVEMBER -> turn
    com.volmit.wormholes.util.Alphabet OSCAR -> ubiquitous
    com.volmit.wormholes.util.Alphabet PAPA -> user
    com.volmit.wormholes.util.Alphabet QUEBEC -> centric
    com.volmit.wormholes.util.Alphabet ROMEO -> added
    com.volmit.wormholes.util.Alphabet SIERRA -> vertical
    com.volmit.wormholes.util.Alphabet TANGO -> viral
    com.volmit.wormholes.util.Alphabet UNIFORM -> virtual
    com.volmit.wormholes.util.Alphabet VICTOR -> visionary
    com.volmit.wormholes.util.Alphabet WISKEY -> web
    com.volmit.wormholes.util.Alphabet XRAY -> enabled
    com.volmit.wormholes.util.Alphabet YANKEE -> wireless
    com.volmit.wormholes.util.Alphabet ZULU -> class
    com.volmit.wormholes.util.Alphabet[] $VALUES -> items
    8:8:com.volmit.wormholes.util.Alphabet[] values() -> values
    8:8:com.volmit.wormholes.util.Alphabet valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    147:147:char getChar() -> getChar
    158:165:java.lang.String radioTalk(java.lang.String) -> Morbi
    177:185:com.volmit.wormholes.util.Alphabet fromChar(char) -> Lorem
    195:202:com.volmit.wormholes.util.GList getAlphabet() -> target
    8:138:void <clinit>() -> <clinit>
com.volmit.wormholes.util.AmountName -> com.volmit.wormholes.src.eros:
    java.lang.String singular -> applications
    java.lang.String plural -> architectures
    22:25:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getSingular() -> transform
    44:44:java.lang.String getPlural() -> transition
    56:61:java.lang.String forAmount(int) -> pulvinar
    74:74:java.lang.String suffix(int) -> vulputate
com.volmit.wormholes.util.Archive -> com.volmit.wormholes.src.et:
    void add(java.io.File,java.io.File) -> Lorem
    void remove(java.io.File) -> remove
    void compress(java.io.File) -> ipsum
    com.volmit.wormholes.util.ArchiveType getType() -> unleash
com.volmit.wormholes.util.ArchiveType -> com.volmit.wormholes.src.sodales:
    com.volmit.wormholes.util.ArchiveType ZIP -> bandwidth
    com.volmit.wormholes.util.ArchiveType[] $VALUES -> channels
    8:8:com.volmit.wormholes.util.ArchiveType[] values() -> values
    8:8:com.volmit.wormholes.util.ArchiveType valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ArchiveUtils -> com.volmit.wormholes.src.scelerisque:
    20:20:void <init>() -> <init>
    36:61:void createZipArchive(com.volmit.wormholes.util.GMap,java.io.File) -> Lorem
    77:117:void extractZipArchive(java.io.File,java.io.File) -> ipsum
    128:143:com.volmit.wormholes.util.GList allFiles(java.io.File) -> dolor
    157:164:com.volmit.wormholes.util.GList cropFiles(java.io.File,com.volmit.wormholes.util.GList) -> Lorem
    178:183:java.io.File cropFile(java.io.File,java.io.File) -> dolor
com.volmit.wormholes.util.Area -> com.volmit.wormholes.src.velit:
    org.bukkit.Location location -> suscipit
    java.lang.Double radius -> communities
    23:23:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> Lorem
    36:39:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    43:43:com.volmit.wormholes.util.Cuboid toCuboid() -> utilize
    56:59:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    73:81:java.lang.Double distance(org.bukkit.Location) -> non
    95:95:java.lang.Double slowDistance(org.bukkit.Location) -> mi
    107:107:boolean isWithin(org.bukkit.Location) -> euismod
    117:117:boolean hasEntities() -> hasEntities
    129:139:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> Lorem
    151:161:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> Lorem
    174:198:org.bukkit.entity.Entity[] getNearbyEntities() -> visualize
    209:219:org.bukkit.entity.Player[] getNearbyPlayers() -> whiteboard
    229:229:org.bukkit.Location getLocation() -> getLocation
    240:241:void setLocation(org.bukkit.Location) -> setLocation
    250:250:java.lang.Double getRadius() -> B2B
    261:262:void setRadius(java.lang.Double) -> Lorem
    271:276:org.bukkit.Location random() -> B2C
com.volmit.wormholes.util.ArmorStandHologram -> com.volmit.wormholes.src.Donec:
    22:28:void <init>(org.bukkit.Location) -> <init>
com.volmit.wormholes.util.AsyncConfig -> com.volmit.wormholes.src.quam:
com.volmit.wormholes.util.AsyncConfigurable -> com.volmit.wormholes.src.malesuada:
    boolean isLoaded() -> isLoaded
com.volmit.wormholes.util.Audible -> com.volmit.wormholes.src.quis:
    void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    void play(org.bukkit.entity.Player) -> ac
    void play(org.bukkit.Location) -> Pellentesque
    void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    java.lang.Float getVolume() -> end
    void setVolume(java.lang.Float) -> Lorem
    java.lang.Float getPitch() -> best
    void setPitch(java.lang.Float) -> ipsum
    com.volmit.wormholes.util.Audible clone() -> of
com.volmit.wormholes.util.Audio -> com.volmit.wormholes.src.ullamcorper:
    com.volmit.wormholes.util.GList audibles -> content
    22:24:void <init>() -> <init>
    33:35:void <init>(com.volmit.wormholes.util.GList) -> <init>
    40:40:com.volmit.wormholes.util.Audible clone() -> of
    51:52:void add(com.volmit.wormholes.util.Audible) -> Lorem
    56:57:com.volmit.wormholes.util.Audio qadd(com.volmit.wormholes.util.Audible) -> ipsum
    63:67:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    72:76:void play(org.bukkit.entity.Player) -> ac
    81:85:void play(org.bukkit.Location) -> Pellentesque
    90:94:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    99:106:java.lang.Float getVolume() -> end
    112:116:void setVolume(java.lang.Float) -> Lorem
    121:128:java.lang.Float getPitch() -> best
    134:138:void setPitch(java.lang.Float) -> ipsum
    14:14:java.lang.Object clone() -> clone
com.volmit.wormholes.util.AudioDistortion -> com.volmit.wormholes.src.aliquet:
    6:8:void <init>() -> <init>
    com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.Average -> com.volmit.wormholes.src.nulla:
    int limit -> limit
    com.volmit.wormholes.util.GList data -> convergence
    double average -> deliverables
    26:35:com.volmit.wormholes.util.GList getFastAverage(com.volmit.wormholes.util.GList,int) -> Lorem
    45:49:void <init>(int) -> <init>
    56:58:void reset() -> reset
    69:77:void put(double) -> Lorem
    86:86:int getLimit() -> getLimit
    97:98:void setLimit(int) -> setLimit
    107:107:com.volmit.wormholes.util.GList getData() -> breed
    118:119:void setData(com.volmit.wormholes.util.GList) -> dolor
    128:128:double getAverage() -> getAverage
    134:141:int hashCode() -> hashCode
    147:187:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.Axis -> com.volmit.wormholes.src.Vivamus:
    com.volmit.wormholes.util.Axis X -> commerce
    com.volmit.wormholes.util.Axis Y -> markets
    com.volmit.wormholes.util.Axis Z -> services
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Axis[] $VALUES -> tailers
    5:5:com.volmit.wormholes.util.Axis[] values() -> values
    5:5:com.volmit.wormholes.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> bleeding
    29:29:org.bukkit.util.Vector negative() -> edge
    5:9:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Base64 -> com.volmit.wormholes.src.tellus:
    int NO_OPTIONS -> experiences
    int ENCODE -> eyeballs
    int DECODE -> functionalities
    int GZIP -> infomediaries
    int DONT_GUNZIP -> infrastructures
    int DO_BREAK_LINES -> initiatives
    int URL_SAFE -> interfaces
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> methodologies
    byte EQUALS_SIGN -> metrics
    byte NEW_LINE -> mindshare
    java.lang.String PREFERRED_ENCODING -> models
    byte WHITE_SPACE_ENC -> networks
    byte EQUALS_SIGN_ENC -> niches
    byte[] _STANDARD_ALPHABET -> paradigms
    byte[] _STANDARD_DECODABET -> partnerships
    byte[] _URL_SAFE_ALPHABET -> platforms
    byte[] _URL_SAFE_DECODABET -> portals
    byte[] _ORDERED_ALPHABET -> relationships
    byte[] _ORDERED_DECODABET -> ROI
    java.lang.String mx -> synergies
    boolean $assertionsDisabled -> readiness
    276:284:byte[] getAlphabet(int) -> dictum
    296:304:byte[] getDecodabet(int) -> Vestibulum
    310:311:void <init>() -> <init>
    334:335:byte[] encode3to4(byte[],byte[],int,int) -> Lorem
    371:411:byte[] encode3to4(byte[],int,int,byte[],int,int) -> Lorem
    429:439:void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> Lorem
    455:468:void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> Lorem
    494:494:java.lang.String encodeObject(java.io.Serializable) -> Lorem
    536:606:java.lang.String encodeObject(java.io.Serializable,int) -> Lorem
    628:637:java.lang.String encodeBytes(byte[]) -> amet
    680:680:java.lang.String encodeBytes(byte[],int) -> Lorem
    712:721:java.lang.String encodeBytes(byte[],int,int) -> Lorem
    770:779:java.lang.String encodeBytes(byte[],int,int,int) -> Lorem
    799:807:byte[] encodeBytesToBytes(byte[]) -> consectetur
    838:966:byte[] encodeBytesToBytes(byte[],int,int,int) -> ipsum
    1014:1076:int decode4to3(byte[],int,byte[],int,int) -> Lorem
    1095:1102:byte[] decode(byte[]) -> decode
    1130:1194:byte[] decode(byte[],int,int,int) -> dolor
    1210:1210:byte[] decode(java.lang.String) -> decode
    1231:1310:byte[] decode(java.lang.String,int) -> ipsum
    1331:1331:java.lang.Object decodeToObject(java.lang.String) -> pulvinar
    1359:1423:java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> Lorem
    1449:1474:void encodeToFile(byte[],java.lang.String) -> Lorem
    1497:1517:void decodeToFile(java.lang.String,java.lang.String) -> Lorem
    1539:1584:byte[] decodeFromFile(java.lang.String) -> vulputate
    1607:1659:java.lang.String encodeFromFile(java.lang.String) -> dictum
    1676:1696:void encodeFileToFile(java.lang.String,java.lang.String) -> ipsum
    1712:1732:void decodeFileToFile(java.lang.String,java.lang.String) -> dolor
    2210:2214:void ex(java.io.File) -> sit
    2218:2241:java.lang.String readFile(java.lang.String) -> readFile
    7:7:byte[] access$000(int) -> in
    7:7:byte[] access$100(byte[],int,int,byte[],int,int) -> ipsum
    7:7:int access$200(byte[],int,byte[],int,int) -> ipsum
    7:7:byte[] access$300(byte[],byte[],int,int) -> ipsum
    7:621:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Base64$1 -> com.volmit.wormholes.src.tellus$1:
    java.lang.ClassLoader val$loader -> schemas
    1380:1380:void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    1385:1391:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.volmit.wormholes.util.Base64$InputStream -> com.volmit.wormholes.src.tellus$Lorem:
    boolean encode -> solutions
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> supply
    int numSigBytes -> chains
    int lineLength -> lineLength
    boolean breakLines -> systems
    int options -> technologies
    byte[] decodabet -> users
    1766:1767:void <init>(java.io.InputStream) -> <init>
    1796:1805:void <init>(java.io.InputStream,int) -> <init>
    1819:1928:int read() -> read
    1951:1966:int read(byte[],int,int) -> read
com.volmit.wormholes.util.Base64$OutputStream -> com.volmit.wormholes.src.tellus$ipsum:
    boolean encode -> solutions
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> supply
    int lineLength -> lineLength
    boolean breakLines -> systems
    byte[] b4 -> vortals
    boolean suspendEncoding -> obfuscate
    int options -> technologies
    byte[] decodabet -> users
    2005:2006:void <init>(java.io.OutputStream) -> <init>
    2034:2045:void <init>(java.io.OutputStream,int) -> <init>
    2061:2107:void write(int) -> write
    2125:2136:void write(byte[],int,int) -> write
    2147:2160:void flushBase64() -> bricks
    2171:2179:void close() -> close
    2191:2193:void suspendEncoding() -> and
    2203:2204:void resumeEncoding() -> clicks
com.volmit.wormholes.util.BaseHud -> com.volmit.wormholes.src.leo:
    org.bukkit.entity.Player player -> player
    com.volmit.wormholes.util.GList content -> star
    boolean open -> see
    com.volmit.wormholes.util.Hologram holo -> definition
    com.volmit.wormholes.util.CNum selection -> show
    int maxPage -> verb
    int startRange -> confuse
    boolean listening -> baffle
    com.volmit.wormholes.util.GMap preListeners -> Relevance
    int index -> index
    boolean hasTitle -> A
    26:38:void <init>(org.bukkit.entity.Player) -> <init>
    43:76:void open() -> open
    81:100:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    105:117:void on(com.volmit.wormholes.util.PlayerScrollEvent) -> Lorem
    121:184:void update() -> update
    org.bukkit.Location getBaseLocation() -> mortar
    191:199:void close() -> close
    204:206:void setContents(com.volmit.wormholes.util.GList) -> sit
    211:211:com.volmit.wormholes.util.GList getContents() -> collaborative
    217:217:java.lang.String getSelection() -> compelling
    223:223:int getSelectionRow() -> cross
    void onUpdateInternal() -> platform
    230:230:com.volmit.wormholes.util.GList getContent() -> media
    235:236:void setContent(com.volmit.wormholes.util.GList) -> amet
    240:240:int getMaxPage() -> getMaxPage
    245:246:void setMaxPage(int) -> setMaxPage
    250:250:org.bukkit.entity.Player getPlayer() -> getPlayer
    255:255:boolean isOpen() -> isOpen
    260:260:com.volmit.wormholes.util.Hologram getHolo() -> customized
    265:265:int getStartRange() -> cutting
    270:271:void registerPreListener(java.lang.String,java.lang.Runnable) -> Lorem
    275:276:void unregisterPreListener(java.lang.String) -> Vestibulum
    280:280:boolean isListening() -> distributed
    285:286:void setListening(boolean) -> adipiscing
    290:290:int getIndex() -> getIndex
    295:296:void setIndex(int) -> setIndex
    300:300:com.volmit.wormholes.util.GMap getPreListeners() -> dot
    305:305:boolean isHasTitle() -> com
    310:311:void setHasTitle(boolean) -> elit
    315:316:void setPlayer(org.bukkit.entity.Player) -> setPlayer
    320:321:void setOpen(boolean) -> setOpen
    325:326:void setHolo(com.volmit.wormholes.util.Hologram) -> Lorem
    330:331:void setSelection(com.volmit.wormholes.util.CNum) -> Lorem
    335:336:void setStartRange(int) -> purus
    340:341:void setPreListeners(com.volmit.wormholes.util.GMap) -> Lorem
com.volmit.wormholes.util.BaseHud$1 -> com.volmit.wormholes.src.leo$1:
    com.volmit.wormholes.util.BaseHud this$0 -> ZComplexity
    60:60:void <init>(com.volmit.wormholes.util.BaseHud,int) -> <init>
    64:73:void run() -> run
com.volmit.wormholes.util.BooleanTag -> com.volmit.wormholes.src.tincidunt:
    boolean value -> value
    26:28:void <init>(java.lang.String,boolean) -> <init>
    33:33:java.lang.Boolean getValue() -> getValue
    39:45:java.lang.String toString() -> toString
    8:8:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.BorderDirection -> com.volmit.wormholes.src.luctus:
    com.volmit.wormholes.util.BorderDirection TOP -> Length
    com.volmit.wormholes.util.BorderDirection BOTTOM -> lists
    com.volmit.wormholes.util.BorderDirection LEFT -> blocks
    com.volmit.wormholes.util.BorderDirection RIGHT -> Common
    com.volmit.wormholes.util.BorderDirection[] $VALUES -> Informal
    8:8:com.volmit.wormholes.util.BorderDirection[] values() -> values
    8:8:com.volmit.wormholes.util.BorderDirection valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.BoundPhysicalObject -> com.volmit.wormholes.src.Maecenas:
    org.bukkit.entity.Entity e -> Synonyms
    26:29:void <init>(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> <init>
    36:37:void influenceForce(org.bukkit.util.Vector) -> amet
    46:46:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.util.ByteArrayTag -> com.volmit.wormholes.src.est:
    byte[] value -> value
    54:56:void <init>(java.lang.String,byte[]) -> <init>
    60:60:byte[] getValue() -> getValue
    65:78:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteMap2D -> com.volmit.wormholes.src.hendrerit:
    byte[][] map -> for
    int width -> width
    int height -> height
    25:31:void <init>(int,int,byte) -> <init>
    49:56:void clear(int,int,int,int,byte) -> Lorem
    66:67:void clear(byte) -> Lorem
    81:82:void set(int,int,byte) -> Lorem
    95:95:byte get(int,int) -> ipsum
    105:105:byte[][] getMap() -> dynamic
    115:115:int getWidth() -> getWidth
    125:125:int getHeight() -> getHeight
com.volmit.wormholes.util.ByteReader -> com.volmit.wormholes.src.Etiam:
    java.io.ByteArrayInputStream bois -> b
    java.io.DataInputStream dis -> c
    13:16:void <init>(byte[]) -> <init>
    20:20:java.lang.String rString() -> business
    25:32:byte[] rBytes() -> efficient
    37:37:int rInt() -> enterprise
    42:42:byte rByte() -> extensible
    47:47:short rShort() -> frictionless
    52:52:long rLong() -> front
    57:57:char rChar() -> global
    62:62:double rDouble() -> granular
    67:67:float rFloat() -> holistic
    72:72:boolean rBoolean() -> impactful
    77:78:void close() -> close
com.volmit.wormholes.util.ByteTag -> com.volmit.wormholes.src.diam:
    byte value -> value
    54:56:void <init>(java.lang.String,byte) -> <init>
    60:60:java.lang.Byte getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteWriter -> com.volmit.wormholes.src.dignissim:
    java.io.ByteArrayOutputStream boas -> d
    java.io.DataOutputStream dos -> g
    13:16:void <init>() -> <init>
    20:21:void wString(java.lang.String) -> in
    25:26:void wInt(int) -> non
    30:31:void wByte(byte) -> ipsum
    35:36:void wShort(short) -> Lorem
    40:41:void wLong(long) -> dolor
    45:46:void wChar(char) -> ipsum
    50:51:void wDouble(double) -> ipsum
    55:56:void wFloat(float) -> Lorem
    60:61:void wBoolean(boolean) -> Morbi
    65:71:void wBytes(byte[]) -> adipiscing
    75:75:byte[] getData() -> getData
    80:81:void close() -> close
com.volmit.wormholes.util.C -> com.volmit.wormholes.src.arcu:
    com.volmit.wormholes.util.C BLACK -> h
    com.volmit.wormholes.util.C DARK_BLUE -> j
    com.volmit.wormholes.util.C DARK_GREEN -> k
    com.volmit.wormholes.util.C DARK_AQUA -> l
    com.volmit.wormholes.util.C DARK_RED -> m
    com.volmit.wormholes.util.C DARK_PURPLE -> n
    com.volmit.wormholes.util.C GOLD -> o
    com.volmit.wormholes.util.C GRAY -> p
    com.volmit.wormholes.util.C DARK_GRAY -> q
    com.volmit.wormholes.util.C BLUE -> r
    com.volmit.wormholes.util.C GREEN -> s
    com.volmit.wormholes.util.C AQUA -> t
    com.volmit.wormholes.util.C RED -> u
    com.volmit.wormholes.util.C LIGHT_PURPLE -> v
    com.volmit.wormholes.util.C YELLOW -> w
    com.volmit.wormholes.util.C WHITE -> B
    com.volmit.wormholes.util.C MAGIC -> C
    com.volmit.wormholes.util.C BOLD -> D
    com.volmit.wormholes.util.C STRIKETHROUGH -> E
    com.volmit.wormholes.util.C UNDERLINE -> F
    com.volmit.wormholes.util.C ITALIC -> G
    com.volmit.wormholes.util.C RESET -> H
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> I
    char code -> J
    boolean isFormat -> K
    java.lang.String toString -> L
    java.util.Map BY_ID -> M
    java.util.Map BY_CHAR -> N
    java.util.Map dyeChatMap -> O
    java.util.Map chatHexMap -> P
    java.util.Map dyeHexMap -> Q
    com.volmit.wormholes.util.C[] $VALUES -> R
    16:16:com.volmit.wormholes.util.C[] values() -> values
    16:16:com.volmit.wormholes.util.C valueOf(java.lang.String) -> valueOf
    333:334:void <init>(java.lang.String,int,char,int) -> <init>
    337:342:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    346:346:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    356:356:char getChar() -> getChar
    362:362:java.lang.String toString() -> toString
    372:372:org.bukkit.DyeColor dye() -> innovative
    377:377:java.lang.String hex() -> integrated
    387:387:boolean isFormat() -> isFormat
    397:397:boolean isColor() -> isColor
    412:417:com.volmit.wormholes.util.C getByChar(char) -> dolor
    433:441:com.volmit.wormholes.util.C getByChar(java.lang.String) -> purus
    454:459:java.lang.String stripColor(java.lang.String) -> stripColor
    471:476:com.volmit.wormholes.util.C dyeToChat(org.bukkit.DyeColor) -> amet
    481:489:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> Lorem
    494:499:java.lang.String chatToHex(org.bukkit.ChatColor) -> ipsum
    504:509:java.lang.String dyeToHex(org.bukkit.DyeColor) -> consectetur
    514:535:org.bukkit.Color hexToColor(java.lang.String) -> non
    540:553:org.bukkit.Color rgbToColor(java.lang.String) -> mi
    558:576:java.lang.String generateColorTable() -> interactive
    586:586:org.bukkit.ChatColor chatColor() -> intuitive
    604:613:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    618:626:com.volmit.wormholes.util.C fromItemMeta(byte) -> dolor
    631:678:byte getItemMeta() -> killer
    691:716:java.lang.String getLastColors(java.lang.String) -> getLastColors
    16:16:void <init>(java.lang.String,int,char,int,com.volmit.wormholes.util.C$1) -> <init>
    16:16:void <init>(java.lang.String,int,char,int,boolean,com.volmit.wormholes.util.C$1) -> <init>
    16:726:void <clinit>() -> <clinit>
com.volmit.wormholes.util.C$1 -> com.volmit.wormholes.src.arcu$1:
    21:21:void <init>(java.lang.String,int,char,int) -> <init>
    26:26:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$10 -> com.volmit.wormholes.src.arcu$2:
    120:120:void <init>(java.lang.String,int,char,int) -> <init>
    125:125:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$11 -> com.volmit.wormholes.src.arcu$3:
    131:131:void <init>(java.lang.String,int,char,int) -> <init>
    136:136:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$12 -> com.volmit.wormholes.src.arcu$4:
    142:142:void <init>(java.lang.String,int,char,int) -> <init>
    147:147:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$13 -> com.volmit.wormholes.src.arcu$5:
    153:153:void <init>(java.lang.String,int,char,int) -> <init>
    158:158:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$14 -> com.volmit.wormholes.src.arcu$6:
    164:164:void <init>(java.lang.String,int,char,int) -> <init>
    169:169:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$15 -> com.volmit.wormholes.src.arcu$7:
    175:175:void <init>(java.lang.String,int,char,int) -> <init>
    180:180:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$16 -> com.volmit.wormholes.src.arcu$8:
    186:186:void <init>(java.lang.String,int,char,int) -> <init>
    191:191:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$17 -> com.volmit.wormholes.src.arcu$9:
    197:197:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    202:202:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$18 -> com.volmit.wormholes.src.arcu$10:
    208:208:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    213:213:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$19 -> com.volmit.wormholes.src.arcu$11:
    219:219:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    224:224:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$2 -> com.volmit.wormholes.src.arcu$12:
    32:32:void <init>(java.lang.String,int,char,int) -> <init>
    37:37:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$20 -> com.volmit.wormholes.src.arcu$13:
    230:230:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    235:235:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$21 -> com.volmit.wormholes.src.arcu$14:
    241:241:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    246:246:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$22 -> com.volmit.wormholes.src.arcu$15:
    253:253:void <init>(java.lang.String,int,char,int) -> <init>
    258:258:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$23 -> com.volmit.wormholes.src.arcu$16:
    int[] $SwitchMap$com$volmit$wormholes$util$C -> S
    631:631:void <clinit>() -> <clinit>
com.volmit.wormholes.util.C$3 -> com.volmit.wormholes.src.arcu$17:
    43:43:void <init>(java.lang.String,int,char,int) -> <init>
    48:48:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$4 -> com.volmit.wormholes.src.arcu$18:
    54:54:void <init>(java.lang.String,int,char,int) -> <init>
    59:59:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$5 -> com.volmit.wormholes.src.arcu$19:
    65:65:void <init>(java.lang.String,int,char,int) -> <init>
    70:70:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$6 -> com.volmit.wormholes.src.arcu$20:
    76:76:void <init>(java.lang.String,int,char,int) -> <init>
    81:81:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$7 -> com.volmit.wormholes.src.arcu$21:
    87:87:void <init>(java.lang.String,int,char,int) -> <init>
    92:92:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$8 -> com.volmit.wormholes.src.arcu$22:
    98:98:void <init>(java.lang.String,int,char,int) -> <init>
    103:103:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$9 -> com.volmit.wormholes.src.arcu$23:
    109:109:void <init>(java.lang.String,int,char,int) -> <init>
    114:114:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.CDou -> com.volmit.wormholes.src.varius:
    double number -> T
    double max -> max
    9:12:void <init>(double) -> <init>
    16:18:com.volmit.wormholes.util.CDou set(double) -> dolor
    23:25:com.volmit.wormholes.util.CDou add(double) -> sit
    30:32:com.volmit.wormholes.util.CDou sub(double) -> amet
    37:37:double get() -> get
    42:48:void circ() -> leading
com.volmit.wormholes.util.CNum -> com.volmit.wormholes.src.placerat:
    int number -> U
    int max -> max
    9:12:void <init>(int) -> <init>
    16:18:com.volmit.wormholes.util.CNum set(int) -> mi
    23:25:com.volmit.wormholes.util.CNum add(int) -> euismod
    30:32:com.volmit.wormholes.util.CNum sub(int) -> Pellentesque
    37:37:int get() -> get
    42:48:void circ() -> leading
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> setMax
com.volmit.wormholes.util.CancellablePhantomEvent -> com.volmit.wormholes.src.Nunc:
    boolean cancelled -> V
    15:17:void <init>() -> <init>
    25:25:boolean isCancelled() -> isCancelled
    34:35:void setCancelled(boolean) -> setCancelled
    42:43:void cancel() -> cancel
    50:51:void uncancel() -> magnetic
com.volmit.wormholes.util.ChunkPacketProcessor -> com.volmit.wormholes.src.Ut:
    int BYTES_PER_NIBBLE_PART -> W
    int CHUNK_SEGMENTS -> X
    int NIBBLES_REQUIRED -> Y
    int BLOCK_ID_LENGHT -> Z
    int DATA_LENGHT -> aa
    int BIOME_ARRAY_LENGTH -> ab
    int chunkX -> chunkX
    int chunkZ -> chunkZ
    int chunkMask -> ae
    int extraMask -> af
    int chunkSectionNumber -> ag
    int extraSectionNumber -> ah
    boolean hasContinous -> ai
    int startIndex -> startIndex
    int size -> size
    byte[] data -> data
    org.bukkit.World world -> world
    200:210:void <init>() -> <init>
    220:240:com.volmit.wormholes.util.ChunkPacketProcessor fromMapPacket(com.comphenix.protocol.events.PacketContainer,org.bukkit.World) -> Lorem
    296:335:void process(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> Lorem
    348:348:int getSkylightCount() -> mission
    352:352:int getOffset(int) -> at
    358:383:void translate(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> ipsum
    386:386:boolean isChunkLoaded(org.bukkit.World,int,int) -> Lorem
com.volmit.wormholes.util.ChunkPacketProcessor$1 -> com.volmit.wormholes.src.Ut$1:
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets -> com.volmit.wormholes.src.Ut$Lorem:
    int blockIdOffset -> aj
    int dataOffset -> ak
    int lightOffset -> al
    int skylightOffset -> am
    int extraOffset -> an
    48:54:void <init>(int,int,int,int,int) -> <init>
    57:64:void incrementIdIndex() -> critical
    67:70:void incrementExtraIndex() -> generation
    81:81:int getBlockIdOffset() -> one
    93:93:int getDataOffset() -> source
    106:106:int getLightOffset() -> out
    118:118:int getSkylightOffset() -> the
    127:127:boolean hasSkylightOffset() -> box
    139:139:int getExtraOffset() -> plug
    148:148:boolean hasExtraOffset() -> play
    40:40:void <init>(int,int,int,int,int,com.volmit.wormholes.util.ChunkPacketProcessor$1) -> <init>
    40:40:void access$100(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    40:40:void access$200(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> ipsum
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor -> com.volmit.wormholes.src.Ut$ipsum:
    void processChunklet(org.bukkit.Location,byte[],com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    void processBiomeArray(org.bukkit.Location,byte[],int) -> Lorem
com.volmit.wormholes.util.Chunklet -> com.volmit.wormholes.src.eleifend:
    int x -> x
    int z -> z
    org.bukkit.World world -> world
    34:38:void <init>(int,int,org.bukkit.World) -> <init>
    47:47:com.volmit.wormholes.util.GList inThisChunk() -> proactive
    57:61:void <init>(org.bukkit.Location) -> <init>
    70:83:com.volmit.wormholes.util.GList getPlayers() -> real
    93:103:com.volmit.wormholes.util.GList getEntities() -> fringilla
    113:113:org.bukkit.Chunk getChunk() -> getChunk
    125:125:boolean contains(org.bukkit.Location) -> pulvinar
    137:137:boolean contains(org.bukkit.entity.Player) -> enim
    149:149:boolean contains(org.bukkit.Chunk) -> Lorem
    159:159:org.bukkit.Location getMin() -> time
    169:169:org.bukkit.Location getMax() -> revolutionary
    179:179:java.util.Iterator iterator() -> iterator
    191:191:com.volmit.wormholes.util.Chunklet getRelative(com.volmit.wormholes.util.Direction) -> Lorem
    201:208:com.volmit.wormholes.util.GList getNeighbors() -> rich
    220:254:com.volmit.wormholes.util.GList getCircle(int) -> iaculis
    259:273:boolean equals(java.lang.Object) -> equals
    287:295:com.volmit.wormholes.util.GList getBorder(int,com.volmit.wormholes.util.Direction) -> Lorem
    305:305:int getX() -> getX
    316:317:void setX(int) -> setX
    326:326:int getZ() -> getZ
    337:338:void setZ(int) -> setZ
    347:347:org.bukkit.World getWorld() -> getWorld
    358:359:void setWorld(org.bukkit.World) -> setWorld
com.volmit.wormholes.util.ChunkletMesh -> com.volmit.wormholes.src.nibh:
    org.bukkit.World world -> world
    com.volmit.wormholes.util.GMap chunklets -> ao
    com.volmit.wormholes.util.GList all -> ap
    27:31:void <init>(org.bukkit.World) -> <init>
    38:42:void rebuildReferences() -> robust
    51:51:com.volmit.wormholes.util.GList getChunklets() -> scalable
    63:71:boolean contains(org.bukkit.Location) -> pulvinar
    83:83:boolean contains(org.bukkit.entity.Player) -> enim
    95:95:boolean contains(org.bukkit.entity.Entity) -> in
    105:112:com.volmit.wormholes.util.GList getPlayers() -> real
    122:129:com.volmit.wormholes.util.GList getEntities() -> fringilla
    140:153:void add(com.volmit.wormholes.util.Chunklet) -> Lorem
com.volmit.wormholes.util.Click -> com.volmit.wormholes.src.faucibus:
    com.volmit.wormholes.util.Click LEFT -> aq
    com.volmit.wormholes.util.Click RIGHT -> ar
    com.volmit.wormholes.util.Click MIDDLE -> as
    com.volmit.wormholes.util.Click SHIFT_LEFT -> au
    com.volmit.wormholes.util.Click SHIFT_RIGHT -> av
    com.volmit.wormholes.util.Click[] $VALUES -> aw
    11:11:com.volmit.wormholes.util.Click[] values() -> values
    11:11:com.volmit.wormholes.util.Click valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    47:60:com.volmit.wormholes.util.Click fromClickType(org.bukkit.event.inventory.ClickType) -> Lorem
    11:36:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Click$1 -> com.volmit.wormholes.src.faucibus$1:
    int[] $SwitchMap$org$bukkit$event$inventory$ClickType -> ax
    47:47:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ClustAsyncAlreadyLoadingException -> com.volmit.wormholes.src.Class:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustAsyncException -> com.volmit.wormholes.src.aptent:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustException -> com.volmit.wormholes.src.taciti:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Cluster -> com.volmit.wormholes.src.sociosqu:
    long serialVersionUID -> serialVersionUID
    com.volmit.wormholes.util.DataCluster$ClusterType type -> ay
    java.lang.Double value -> az
    18:21:void <init>(com.volmit.wormholes.util.DataCluster$ClusterType,java.lang.Double) -> <init>
    25:25:com.volmit.wormholes.util.DataCluster$ClusterType getType() -> seamless
    30:35:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.ClusterBoolean -> com.volmit.wormholes.src.ad:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(boolean) -> <init>
    24:24:boolean get() -> get
    29:30:void set(boolean) -> set
com.volmit.wormholes.util.ClusterDouble -> com.volmit.wormholes.src.litora:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Double) -> <init>
    24:24:double get() -> get
    29:30:void set(double) -> set
com.volmit.wormholes.util.ClusterInteger -> com.volmit.wormholes.src.torquent:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Integer) -> <init>
    24:24:int get() -> get
    29:30:void set(int) -> set
com.volmit.wormholes.util.ClusterLong -> com.volmit.wormholes.src.per:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Long) -> <init>
    24:24:long get() -> get
    29:30:void set(long) -> set
com.volmit.wormholes.util.ClusterString -> com.volmit.wormholes.src.conubia:
    long serialVersionUID -> serialVersionUID
    java.lang.String string -> string
    20:22:void <init>(java.lang.String) -> <init>
    26:26:java.lang.String get() -> get
    31:33:void set(java.lang.String) -> set
com.volmit.wormholes.util.ClusterStringList -> com.volmit.wormholes.src.nostra:
    long serialVersionUID -> serialVersionUID
    java.util.List strings -> aA
    21:23:void <init>(java.util.List) -> <init>
    27:27:java.util.List get() -> sexy
    32:34:void set(java.util.List) -> Lorem
com.volmit.wormholes.util.ColdLoad -> com.volmit.wormholes.src.inceptos:
com.volmit.wormholes.util.ColoredParticleEffect -> com.volmit.wormholes.src.himenaeos:
    org.bukkit.Color color -> aB
    boolean alpha -> aC
    12:15:void <init>(org.bukkit.Color) -> <init>
    20:20:com.volmit.wormholes.util.GList getEffects() -> sticky
    26:37:void play(org.bukkit.Location) -> Pellentesque
    43:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
    47:47:org.bukkit.Color getColor() -> getColor
    52:53:void setColor(org.bukkit.Color) -> setColor
    57:57:boolean isAlpha() -> strategic
    62:63:void setAlpha(boolean) -> pulvinar
com.volmit.wormholes.util.ColoredString -> com.volmit.wormholes.src.Cras:
    com.volmit.wormholes.util.C c -> aD
    java.lang.String s -> aE
    22:25:void <init>(com.volmit.wormholes.util.C,java.lang.String) -> <init>
    29:29:java.lang.String toString() -> toString
    34:34:com.volmit.wormholes.util.C getC() -> synergistic
    39:40:void setC(com.volmit.wormholes.util.C) -> Lorem
    44:44:java.lang.String getS() -> transparent
    49:50:void setS(java.lang.String) -> euismod
com.volmit.wormholes.util.Comment -> com.volmit.wormholes.src.pellentesque:
    java.lang.String value() -> value
com.volmit.wormholes.util.CompoundTag -> com.volmit.wormholes.src.ut:
    java.util.Map value -> aF
    57:59:void <init>(java.lang.String,java.util.Map) -> <init>
    63:63:java.util.Map getValue() -> getValue
    68:79:java.lang.String toString() -> toString
    44:44:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Config -> com.volmit.wormholes.src.finibus:
    7:8:void <init>(java.lang.String) -> <init>
    12:13:void <init>() -> <init>
com.volmit.wormholes.util.Configurable -> com.volmit.wormholes.src.fermentum:
    void onNewConfig() -> turn
    void onReadConfig() -> key
    com.volmit.wormholes.util.DataCluster getConfiguration() -> ubiquitous
    java.lang.String getCodeName() -> user
com.volmit.wormholes.util.ConfigurableController -> com.volmit.wormholes.src.augue:
    java.lang.String codeName -> aG
    com.volmit.wormholes.util.DataCluster cc -> aH
    23:27:void <init>(com.volmit.wormholes.util.Controllable,java.lang.String) -> <init>
    33:33:void onNewConfig() -> turn
    39:39:void onReadConfig() -> key
    44:44:com.volmit.wormholes.util.DataCluster getConfiguration() -> ubiquitous
    50:50:java.lang.String getCodeName() -> user
    void onStart() -> onStart
    void onStop() -> non
com.volmit.wormholes.util.ConfigurableObject -> com.volmit.wormholes.src.erat:
    java.lang.String codeName -> aG
    com.volmit.wormholes.util.DataCluster cc -> aH
    20:23:void <init>(java.lang.String) -> <init>
    29:29:void onNewConfig() -> turn
    35:35:void onReadConfig() -> key
    40:40:com.volmit.wormholes.util.DataCluster getConfiguration() -> ubiquitous
    46:46:java.lang.String getCodeName() -> user
com.volmit.wormholes.util.ConfigurationHandler -> com.volmit.wormholes.src.Aenean:
    17:17:void <init>() -> <init>
    28:83:void toFields(com.volmit.wormholes.util.Configurable) -> Lorem
    94:137:void fromFields(com.volmit.wormholes.util.Configurable) -> ipsum
    148:200:boolean isValidType(java.lang.Class) -> ipsum
    217:272:void read(java.io.File,com.volmit.wormholes.util.Configurable) -> Lorem
    286:318:void compatRead(java.io.File,com.volmit.wormholes.util.Configurable) -> ipsum
    332:379:void fastRead(java.io.File,com.volmit.wormholes.util.Configurable) -> dolor
    393:412:void fastWrite(java.io.File,com.volmit.wormholes.util.Configurable) -> sit
    426:445:void save(java.io.File,com.volmit.wormholes.util.Configurable) -> amet
    449:468:void savenc(java.io.File,com.volmit.wormholes.util.Configurable) -> consectetur
com.volmit.wormholes.util.ConfigurationHandler$1 -> com.volmit.wormholes.src.Aenean$1:
    com.volmit.wormholes.util.Configurable val$c -> aI
    240:240:void <init>(com.volmit.wormholes.util.Configurable) -> <init>
    244:245:void run() -> run
com.volmit.wormholes.util.ConfigurationHandler$2 -> com.volmit.wormholes.src.Aenean$2:
    com.volmit.wormholes.util.Configurable val$c -> aI
    java.io.File val$config -> aJ
    249:249:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    253:269:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$2$1 -> com.volmit.wormholes.src.Aenean$2$1:
    com.volmit.wormholes.util.ConfigurationHandler$2 this$0 -> aK
    254:254:void <init>(com.volmit.wormholes.util.ConfigurationHandler$2) -> <init>
    260:267:void async() -> revolutionize
com.volmit.wormholes.util.ConfigurationHandler$3 -> com.volmit.wormholes.src.Aenean$3:
    com.volmit.wormholes.util.Configurable val$c -> aI
    java.io.File val$config -> aJ
    356:356:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    360:376:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$3$1 -> com.volmit.wormholes.src.Aenean$3$1:
    com.volmit.wormholes.util.ConfigurationHandler$3 this$0 -> aL
    361:361:void <init>(com.volmit.wormholes.util.ConfigurationHandler$3) -> <init>
    367:374:void async() -> revolutionize
com.volmit.wormholes.util.Controllable -> com.volmit.wormholes.src.blandit:
    void tick() -> tick
    void start() -> start
    void stop() -> stop
    com.volmit.wormholes.util.Controllable getParent() -> centric
    com.volmit.wormholes.util.GList getChildren() -> added
    java.lang.String getName() -> getName
    boolean isRoot() -> isRoot
    boolean isActive() -> isActive
    void register(com.volmit.wormholes.util.Controllable) -> Lorem
    boolean isTicked() -> vertical
    double getTickRate() -> viral
    com.volmit.wormholes.util.TickHandler getTickHandler() -> virtual
com.volmit.wormholes.util.ControllablePlugin -> com.volmit.wormholes.src.risus:
    com.volmit.wormholes.util.Controller base -> aM
    7:7:void <init>() -> <init>
    14:16:void onLoad() -> onLoad
    21:45:void onEnable() -> onEnable
    50:84:void destroyOldThreads() -> visionary
    88:93:void readCurrentTick() -> web
    97:107:void setupTicker() -> enabled
    void onStart() -> onStart
    void onStop() -> non
    116:116:void onTick() -> mi
    121:122:void onDisable() -> onDisable
    128:128:void tick() -> tick
    void onConstruct() -> at
    135:138:void start() -> start
    143:144:void stop() -> stop
    149:149:com.volmit.wormholes.util.Controllable getParent() -> centric
    155:155:com.volmit.wormholes.util.GList getChildren() -> added
    161:161:boolean isRoot() -> isRoot
    167:167:boolean isActive() -> isActive
    173:174:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    179:179:boolean isTicked() -> vertical
    185:185:double getTickRate() -> viral
    191:191:com.volmit.wormholes.util.TickHandler getTickHandler() -> virtual
    196:202:void preStart() -> wireless
    206:206:boolean findTicked() -> world
    211:216:double findTickValue() -> class
    221:226:com.volmit.wormholes.util.TickHandler findTickHandle() -> action
com.volmit.wormholes.util.ControllablePlugin$1 -> com.volmit.wormholes.src.risus$1:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> aN
    24:24:void <init>(com.volmit.wormholes.util.ControllablePlugin,com.volmit.wormholes.util.Controllable) -> <init>
    28:29:void onStop() -> non
    34:35:void onStart() -> onStart
    40:41:void onTick() -> mi
com.volmit.wormholes.util.ControllablePlugin$2 -> com.volmit.wormholes.src.risus$2:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> aN
    98:98:void <init>(com.volmit.wormholes.util.ControllablePlugin) -> <init>
    102:103:void run() -> run
com.volmit.wormholes.util.Controller -> com.volmit.wormholes.src.Fusce:
    com.volmit.wormholes.util.Controllable parent -> aO
    com.volmit.wormholes.util.GList children -> aP
    java.lang.String name -> name
    boolean active -> active
    boolean root -> aQ
    boolean ticked -> aR
    double tickRate -> aS
    com.volmit.wormholes.util.TickHandler tickHandle -> aT
    com.volmit.wormholes.util.Task task -> aU
    com.volmit.wormholes.util.D d -> aV
    20:31:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    35:36:void i(java.lang.String[]) -> ipsum
    40:41:void s(java.lang.String[]) -> dolor
    45:46:void f(java.lang.String[]) -> sit
    50:51:void w(java.lang.String[]) -> amet
    55:56:void v(java.lang.String[]) -> consectetur
    60:61:void o(java.lang.String[]) -> adipiscing
    72:73:void loadCluster(com.volmit.wormholes.util.Configurable) -> dolor
    77:78:void saveCluster(com.volmit.wormholes.util.Configurable) -> sit
    82:108:void saveCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> Lorem
    121:180:void loadCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> ipsum
    184:195:void preStart() -> wireless
    199:199:boolean findTicked() -> world
    204:209:double findTickValue() -> class
    214:219:com.volmit.wormholes.util.TickHandler findTickHandle() -> action
    224:231:boolean findAutoRegister() -> items
    236:272:void activate() -> activate
    276:277:void deactivate() -> deactivate
    282:286:void tick() -> tick
    291:302:void start() -> start
    307:319:void stop() -> stop
    324:324:void onTick() -> mi
    void onStart() -> onStart
    void onStop() -> non
    333:333:com.volmit.wormholes.util.Controllable getParent() -> centric
    339:339:com.volmit.wormholes.util.GList getChildren() -> added
    345:345:java.lang.String getName() -> getName
    351:351:boolean isRoot() -> isRoot
    357:357:boolean isActive() -> isActive
    363:364:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    369:369:boolean isTicked() -> vertical
    375:375:double getTickRate() -> viral
    381:381:com.volmit.wormholes.util.TickHandler getTickHandler() -> virtual
com.volmit.wormholes.util.Controller$1 -> com.volmit.wormholes.src.Fusce$1:
    java.io.File val$abase -> aW
    com.volmit.wormholes.util.Configurable val$c -> aI
    com.volmit.wormholes.util.Controller this$0 -> aX
    136:136:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    142:149:void async() -> revolutionize
com.volmit.wormholes.util.Controller$2 -> com.volmit.wormholes.src.Fusce$2:
    java.io.File val$b -> aY
    com.volmit.wormholes.util.Configurable val$c -> aI
    com.volmit.wormholes.util.Controller this$0 -> aX
    158:158:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    164:171:void sync() -> sync
com.volmit.wormholes.util.Controller$3 -> com.volmit.wormholes.src.Fusce$3:
    com.volmit.wormholes.util.Controller this$0 -> aX
    242:242:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    246:257:void run() -> run
com.volmit.wormholes.util.Controller$4 -> com.volmit.wormholes.src.Fusce$4:
    com.volmit.wormholes.util.Controller this$0 -> aX
    261:261:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    265:266:void run() -> run
com.volmit.wormholes.util.Controller$5 -> com.volmit.wormholes.src.Fusce$5:
    int[] $SwitchMap$com$volmit$wormholes$util$TickHandler -> aZ
    238:238:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid -> com.volmit.wormholes.src.maximus:
    java.lang.String worldName -> ba
    int x1 -> bb
    int y1 -> bc
    int z1 -> bd
    int x2 -> be
    int y2 -> bf
    int z2 -> bg
    40:53:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    57:67:int depth(com.volmit.wormholes.util.Axis) -> Lorem
    80:86:void set(org.bukkit.Location,org.bukkit.Location) -> dolor
    90:90:boolean hasPlayers() -> applications
    95:107:com.volmit.wormholes.util.GList getPlayers() -> real
    112:163:com.volmit.wormholes.util.GList getEntities() -> fringilla
    174:175:void <init>(org.bukkit.Location) -> <init>
    179:179:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Direction,int) -> Lorem
    184:184:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Axis,int) -> Lorem
    195:196:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    217:225:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    246:254:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    257:265:void <init>(java.util.Map) -> <init>
    270:278:java.util.Map serialize() -> serialize
    283:283:com.volmit.wormholes.util.Cuboid flatten(int) -> urna
    294:294:org.bukkit.Location getLowerNE() -> architectures
    305:305:org.bukkit.Location getUpperSW() -> bandwidth
    315:318:org.bukkit.Location getCenter() -> getCenter
    330:335:org.bukkit.World getWorld() -> getWorld
    345:345:int getSizeX() -> channels
    355:355:int getSizeY() -> communities
    365:365:int getSizeZ() -> content
    375:375:com.volmit.wormholes.util.Dimension getDimension() -> convergence
    385:385:int getLowerX() -> deliverables
    395:395:int getLowerY() -> commerce
    405:405:int getLowerZ() -> markets
    415:415:int getUpperX() -> services
    425:425:int getUpperY() -> tailers
    435:435:int getUpperZ() -> experiences
    445:455:org.bukkit.block.Block[] corners() -> eyeballs
    472:487:com.volmit.wormholes.util.Cuboid expand(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> Lorem
    502:502:com.volmit.wormholes.util.Cuboid shift(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> ipsum
    518:532:com.volmit.wormholes.util.Cuboid outset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> dolor
    548:548:com.volmit.wormholes.util.Cuboid inset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> sit
    564:564:boolean contains(int,int,int) -> Lorem
    576:576:boolean contains(org.bukkit.block.Block) -> Lorem
    588:588:boolean contains(org.bukkit.Location) -> pulvinar
    598:598:int volume() -> functionalities
    609:619:byte averageLightLevel() -> infomediaries
    630:630:com.volmit.wormholes.util.Cuboid contract() -> infrastructures
    644:684:com.volmit.wormholes.util.Cuboid contract(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> Lorem
    698:713:com.volmit.wormholes.util.Cuboid getFace(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> ipsum
    726:733:boolean containsOnly(org.bukkit.Material) -> Lorem
    746:758:com.volmit.wormholes.util.Cuboid getBoundingCuboid(com.volmit.wormholes.util.Cuboid) -> ipsum
    774:774:org.bukkit.block.Block getRelativeBlock(int,int,int) -> ipsum
    794:794:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> Lorem
    805:819:java.util.List getChunks() -> initiatives
    834:838:void fill(int,byte) -> Lorem
    861:861:java.util.Iterator iterator() -> iterator
    871:871:com.volmit.wormholes.util.Cuboid clone() -> interfaces
    881:881:java.lang.String toString() -> toString
    977:986:int hashCode() -> hashCode
    992:1052:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object clone() -> clone
com.volmit.wormholes.util.Cuboid$1 -> com.volmit.wormholes.src.maximus$1:
    com.volmit.wormholes.util.Cuboid this$0 -> bh
    96:96:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    100:105:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    96:96:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Cuboid$2 -> com.volmit.wormholes.src.maximus$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> bi
    int[] $SwitchMap$com$volmit$wormholes$util$Cuboid$CuboidDirection -> bj
    57:472:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid$CuboidDirection -> com.volmit.wormholes.src.maximus$Lorem:
    com.volmit.wormholes.util.Cuboid$CuboidDirection North -> bk
    com.volmit.wormholes.util.Cuboid$CuboidDirection East -> bl
    com.volmit.wormholes.util.Cuboid$CuboidDirection South -> bm
    com.volmit.wormholes.util.Cuboid$CuboidDirection West -> bn
    com.volmit.wormholes.util.Cuboid$CuboidDirection Up -> bo
    com.volmit.wormholes.util.Cuboid$CuboidDirection Down -> bp
    com.volmit.wormholes.util.Cuboid$CuboidDirection Horizontal -> bq
    com.volmit.wormholes.util.Cuboid$CuboidDirection Vertical -> br
    com.volmit.wormholes.util.Cuboid$CuboidDirection Both -> bs
    com.volmit.wormholes.util.Cuboid$CuboidDirection Unknown -> bt
    com.volmit.wormholes.util.Cuboid$CuboidDirection[] $VALUES -> bu
    932:932:com.volmit.wormholes.util.Cuboid$CuboidDirection[] values() -> values
    932:932:com.volmit.wormholes.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    932:932:void <init>(java.lang.String,int) -> <init>
    948:969:com.volmit.wormholes.util.Cuboid$CuboidDirection opposite() -> methodologies
    932:944:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid$CuboidIterator -> com.volmit.wormholes.src.maximus$ipsum:
    org.bukkit.World w -> bv
    int baseX -> bw
    int baseY -> bx
    int baseZ -> by
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> bz
    int sizeY -> bA
    int sizeZ -> bB
    com.volmit.wormholes.util.Cuboid this$0 -> bh
    892:901:void <init>(com.volmit.wormholes.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    906:906:boolean hasNext() -> hasNext
    912:922:org.bukkit.block.Block next() -> next
    929:929:void remove() -> remove
    884:884:java.lang.Object next() -> next
com.volmit.wormholes.util.CuboidException -> com.volmit.wormholes.src.ex:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.CustomGZIPOutputStream -> com.volmit.wormholes.src.porttitor:
    11:12:void <init>(java.io.OutputStream) -> <init>
    16:17:void setLevel(int) -> setLevel
com.volmit.wormholes.util.D -> com.volmit.wormholes.src.nisi:
    boolean rdebug -> bC
    boolean fool -> bD
    java.lang.String name -> name
    com.volmit.wormholes.util.GList listeners -> bE
    com.volmit.wormholes.util.GList queue -> bF
    com.volmit.wormholes.util.GList globalListeners -> bG
    java.lang.Boolean silent -> bH
    24:30:void d(java.lang.Object,java.lang.String) -> Lorem
    34:38:void d(java.lang.Class,java.lang.String) -> Lorem
    47:50:void <init>(java.lang.String) -> <init>
    71:71:com.volmit.wormholes.util.GList getListeners() -> metrics
    81:81:com.volmit.wormholes.util.GList getGlobalListeners() -> mindshare
    86:119:void log(com.volmit.wormholes.util.D$DispatchType,java.lang.String,java.lang.String[]) -> Lorem
    123:153:void flush() -> flush
    163:164:void info(java.lang.String[]) -> elit
    174:175:void i(java.lang.String[]) -> ipsum
    185:186:void success(java.lang.String[]) -> Morbi
    196:197:void s(java.lang.String[]) -> dolor
    207:208:void failure(java.lang.String[]) -> pulvinar
    218:219:void f(java.lang.String[]) -> sit
    229:230:void warning(java.lang.String[]) -> vulputate
    240:241:void w(java.lang.String[]) -> amet
    251:252:void verbose(java.lang.String[]) -> dictum
    262:263:void v(java.lang.String[]) -> consectetur
    273:274:void overbose(java.lang.String[]) -> Vestibulum
    284:285:void o(java.lang.String[]) -> adipiscing
    294:294:java.lang.String getName() -> getName
    305:306:void setName(java.lang.String) -> setName
    315:315:java.lang.Boolean isSilent() -> models
    326:327:void setSilent(java.lang.Boolean) -> ipsum
    338:341:int hashCode() -> hashCode
    347:377:boolean equals(java.lang.Object) -> equals
    15:333:void <clinit>() -> <clinit>
com.volmit.wormholes.util.D$DispatchType -> com.volmit.wormholes.src.nisi$Lorem:
    com.volmit.wormholes.util.D$DispatchType INFO -> bI
    com.volmit.wormholes.util.D$DispatchType SUCCESS -> bJ
    com.volmit.wormholes.util.D$DispatchType FAILURE -> bK
    com.volmit.wormholes.util.D$DispatchType WARNING -> bL
    com.volmit.wormholes.util.D$DispatchType VERBOSE -> bM
    com.volmit.wormholes.util.D$DispatchType OVERBOSE -> bN
    com.volmit.wormholes.util.D$DispatchType[] $VALUES -> bO
    52:52:com.volmit.wormholes.util.D$DispatchType[] values() -> values
    52:52:com.volmit.wormholes.util.D$DispatchType valueOf(java.lang.String) -> valueOf
    52:52:void <init>(java.lang.String,int) -> <init>
    52:59:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DBoolean -> com.volmit.wormholes.src.justo:
    java.lang.Boolean integer -> bP
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Boolean) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Boolean get() -> niches
com.volmit.wormholes.util.DByte -> com.volmit.wormholes.src.Suspendisse:
    java.lang.Byte integer -> bQ
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Byte) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Byte get() -> paradigms
com.volmit.wormholes.util.DBytes -> com.volmit.wormholes.src.elementum:
    byte[] integer -> bR
    10:12:void <init>() -> <init>
    15:17:void <init>(byte[]) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:byte[] get() -> get
com.volmit.wormholes.util.DChar -> com.volmit.wormholes.src.mattis:
    java.lang.Character integer -> bS
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Character) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Character get() -> partnerships
com.volmit.wormholes.util.DDouble -> com.volmit.wormholes.src.primis:
    java.lang.Double integer -> bT
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Double) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Double get() -> platforms
com.volmit.wormholes.util.DFloat -> com.volmit.wormholes.src.cubilia:
    java.lang.Float integer -> bU
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Float) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Float get() -> portals
com.volmit.wormholes.util.DInteger -> com.volmit.wormholes.src.Curae:
    java.lang.Integer integer -> bV
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Integer) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Integer get() -> relationships
com.volmit.wormholes.util.DLong -> com.volmit.wormholes.src.habitant:
    java.lang.Long integer -> bW
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Long) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Long get() -> ROI
com.volmit.wormholes.util.DOP -> com.volmit.wormholes.src.morbi:
    java.lang.String type -> type
    10:12:void <init>(java.lang.String) -> <init>
    org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
    18:18:java.lang.String getType() -> getType
com.volmit.wormholes.util.DShort -> com.volmit.wormholes.src.senectus:
    java.lang.Short integer -> bX
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Short) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.Short get() -> synergies
com.volmit.wormholes.util.DString -> com.volmit.wormholes.src.netus:
    java.lang.String string -> string
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.String) -> <init>
    22:27:byte[] toData() -> Class
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> networks
    54:54:java.lang.String get() -> get
com.volmit.wormholes.util.DStringList -> com.volmit.wormholes.src.fames:
    com.volmit.wormholes.util.GList string -> bY
    10:12:void <init>() -> <init>
    15:17:void <init>(com.volmit.wormholes.util.GList) -> <init>
    22:33:byte[] toData() -> Class
    39:59:void fromData(byte[]) -> elit
    64:64:byte getDataType() -> networks
    69:69:com.volmit.wormholes.util.GList get() -> montes
com.volmit.wormholes.util.DataCluster -> com.volmit.wormholes.src.pharetra:
    java.util.Map data -> bZ
    java.util.Map comments -> ca
    long perm -> cb
    long permX -> cc
    long totalSize -> cd
    long totalNodes -> ce
    long totalClusters -> cf
    long bytes -> cg
    long nodes -> ch
    48:55:void <init>() -> <init>
    65:68:void <init>(com.volmit.wormholes.util.JSONObject) -> <init>
    78:124:void fromDataPack(com.volmit.wormholes.util.DataPack) -> Lorem
    133:170:com.volmit.wormholes.util.DataPack toDataPack() -> readiness
    181:184:void <init>(org.bukkit.configuration.file.FileConfiguration) -> <init>
    196:199:void <init>(byte[]) -> <init>
    209:213:void addYaml(org.bukkit.configuration.file.FileConfiguration) -> Lorem
    220:224:void <init>(java.util.Map) -> <init>
    236:237:void comment(java.lang.String,java.lang.String) -> sit
    248:255:byte[] compress() -> Nam
    268:274:void addCompressed(byte[]) -> Lorem
    283:290:com.volmit.wormholes.util.JSONObject toJSON() -> schemas
    300:331:com.volmit.wormholes.util.GMap makeNodes() -> solutions
    341:345:void addJson(com.volmit.wormholes.util.JSONObject) -> Lorem
    352:356:void clear() -> clear
    360:367:long byteSize() -> supply
    374:413:long byteSize(java.lang.String) -> Pellentesque
    425:425:boolean hasComment(java.lang.String) -> at
    437:437:java.lang.String getComment(java.lang.String) -> iaculis
    449:467:java.util.List getComments(java.lang.String) -> urna
    477:477:com.volmit.wormholes.util.GSet getRoots() -> chains
    489:525:com.volmit.wormholes.util.GSet getRoots(java.lang.String) -> Proin
    562:582:com.volmit.wormholes.util.DataCluster crop(java.lang.String) -> ac
    592:592:int size() -> size
    602:602:com.volmit.wormholes.util.GList keys() -> systems
    614:650:com.volmit.wormholes.util.GList toLines(boolean) -> vulputate
    660:667:org.bukkit.configuration.file.FileConfiguration toYaml() -> technologies
    681:682:boolean isString(java.lang.String) -> isString
    696:697:boolean isStringList(java.lang.String) -> enim
    711:712:boolean isInteger(java.lang.String) -> posuere
    726:727:boolean isDouble(java.lang.String) -> isDouble
    741:742:boolean isLong(java.lang.String) -> isLong
    756:757:boolean isBoolean(java.lang.String) -> isBoolean
    772:773:boolean contains(java.lang.String,com.volmit.wormholes.util.DataCluster$ClusterType) -> Lorem
    788:791:void trySet(java.lang.String,java.lang.Object,java.lang.String) -> Lorem
    803:858:void trySet(java.lang.String,java.lang.Object) -> Lorem
    870:876:void set(java.lang.String,int) -> dolor
    888:894:void set(java.lang.String,long) -> Lorem
    906:912:void set(java.lang.String,double) -> Lorem
    924:930:void set(java.lang.String,boolean) -> Lorem
    942:948:void set(java.lang.String,java.lang.String) -> set
    960:966:void set(java.lang.String,java.util.List) -> Lorem
    978:979:void set(java.lang.String,com.volmit.wormholes.util.MetaObject) -> Lorem
    995:1005:com.volmit.wormholes.util.MetaObject getObject(java.lang.String,java.lang.Class) -> Lorem
    1018:1019:void set(java.lang.String,java.lang.Enum) -> Lorem
    1032:1040:java.lang.Enum getEnum(java.lang.String,java.lang.Class) -> ipsum
    1055:1057:void set(java.lang.String,int,java.lang.String) -> Lorem
    1071:1073:void set(java.lang.String,long,java.lang.String) -> Lorem
    1087:1089:void set(java.lang.String,double,java.lang.String) -> Lorem
    1103:1105:void set(java.lang.String,boolean,java.lang.String) -> Lorem
    1119:1121:void set(java.lang.String,java.lang.String,java.lang.String) -> Lorem
    1135:1137:void set(java.lang.String,java.util.List,java.lang.String) -> Lorem
    1148:1154:java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    1168:1172:void add(com.volmit.wormholes.util.DataCluster,java.lang.String) -> Lorem
    1182:1183:void add(com.volmit.wormholes.util.DataCluster) -> sit
    1194:1205:java.lang.Long getLong(java.lang.String) -> getLong
    1217:1223:java.lang.Integer getInt(java.lang.String) -> molestie
    1235:1247:java.lang.Double getDouble(java.lang.String) -> getDouble
    1259:1265:java.lang.String getString(java.lang.String) -> getString
    1277:1283:java.util.List getStringList(java.lang.String) -> getStringList
    1295:1296:boolean contains(java.lang.String) -> contains
    1307:1309:void remove(java.lang.String) -> remove
    1320:1351:java.lang.Object getAbstract(java.lang.String) -> odio
    1363:1367:com.volmit.wormholes.util.Cluster get(java.lang.String) -> a
    1379:1380:com.volmit.wormholes.util.DataCluster$ClusterType getType(java.lang.String) -> facilisis
    1390:1391:java.util.Map getData() -> getData
    1402:1407:void setData(java.util.Map) -> setData
    1416:1416:com.volmit.wormholes.util.DataCluster copy() -> users
    1422:1428:int hashCode() -> hashCode
    1434:1487:boolean equals(java.lang.Object) -> equals
    36:40:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DataCluster$ClusterType -> com.volmit.wormholes.src.pharetra$Lorem:
    com.volmit.wormholes.util.DataCluster$ClusterType INTEGER -> ci
    com.volmit.wormholes.util.DataCluster$ClusterType DOUBLE -> cj
    com.volmit.wormholes.util.DataCluster$ClusterType BOOLEAN -> ck
    com.volmit.wormholes.util.DataCluster$ClusterType STRING -> cl
    com.volmit.wormholes.util.DataCluster$ClusterType STRING_LIST -> cm
    com.volmit.wormholes.util.DataCluster$ClusterType LONG -> cn
    com.volmit.wormholes.util.DataCluster$ClusterType[] $VALUES -> co
    24:24:com.volmit.wormholes.util.DataCluster$ClusterType[] values() -> values
    24:24:com.volmit.wormholes.util.DataCluster$ClusterType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DataController -> com.volmit.wormholes.src.potenti:
    com.volmit.wormholes.util.GMap cache -> generation
    18:21:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    26:42:com.volmit.wormholes.util.Configurable get(java.lang.Object) -> dolor
    48:52:void load(java.lang.Object) -> sit
    57:62:void save(java.lang.Object) -> save
    com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
    void onSave(java.lang.Object) -> consectetur
    73:79:void saveAll() -> saveAll
    84:84:boolean contains(java.lang.Object) -> contains
    90:90:com.volmit.wormholes.util.GMap getCache() -> vortals
    12:12:java.lang.Object onLoad(java.lang.Object) -> adipiscing
    12:12:java.lang.Object get(java.lang.Object) -> get
com.volmit.wormholes.util.DataEntity -> com.volmit.wormholes.src.pretium:
    byte[] toData() -> Class
    void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataFile -> com.volmit.wormholes.src.dui:
    13:13:void <init>() -> <init>
    25:34:void load(java.io.File) -> load
    46:55:void save(java.io.File) -> save
    60:60:byte[] toData() -> Class
    66:67:void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataHandle -> com.volmit.wormholes.src.massa:
    byte[] toData() -> Class
    void fromData(byte[]) -> elit
    byte getDataType() -> networks
    20:25:byte[] compress(byte[]) -> Morbi
    30:33:byte[] decompress(byte[]) -> pulvinar
com.volmit.wormholes.util.DataInput -> com.volmit.wormholes.src.gravida:
    11:11:void <init>() -> <init>
    16:28:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataInputtable -> com.volmit.wormholes.src.id:
    void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataOutput -> com.volmit.wormholes.src.fringilla:
    11:11:void <init>() -> <init>
    16:29:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataOutputtable -> com.volmit.wormholes.src.Nulla:
    void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataPack -> com.volmit.wormholes.src.facilisi:
    com.volmit.wormholes.util.GList entities -> dis
    10:12:void <init>() -> <init>
    16:17:void put(com.volmit.wormholes.util.DataHandle) -> Lorem
    22:33:byte[] toData() -> Class
    39:64:void fromData(byte[]) -> elit
    69:69:byte getDataType() -> networks
    74:74:com.volmit.wormholes.util.GList getEntities() -> fringilla
    80:87:java.lang.String toString() -> toString
com.volmit.wormholes.util.Database -> com.volmit.wormholes.src.libero:
    java.sql.Connection connection -> cp
    26:28:void <init>() -> <init>
    java.sql.Connection openConnection() -> obfuscate
    50:50:boolean checkConnection() -> star
    60:60:java.sql.Connection getConnection() -> getConnection
    72:77:boolean closeConnection() -> see
    95:104:java.sql.ResultSet querySQL(java.lang.String) -> In
    122:131:int updateSQL(java.lang.String) -> hac
com.volmit.wormholes.util.DatabaseConnection -> com.volmit.wormholes.src.condimentum:
    java.lang.String address -> address
    int port -> port
    java.lang.String database -> database
    java.lang.String username -> username
    java.lang.String password -> password
    31:32:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    48:49:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    63:64:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    81:87:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    91:91:java.lang.String getAddress() -> getAddress
    96:97:void setAddress(java.lang.String) -> setAddress
    101:101:int getPort() -> getPort
    106:107:void setPort(int) -> setPort
    111:111:java.lang.String getUsername() -> getUsername
    116:117:void setUsername(java.lang.String) -> setUsername
    121:121:java.lang.String getPassword() -> getPassword
    126:127:void setPassword(java.lang.String) -> setPassword
    131:131:java.lang.String getDatabase() -> getDatabase
    136:137:void setDatabase(java.lang.String) -> habitasse
com.volmit.wormholes.util.Depend -> com.volmit.wormholes.src.interdum:
    com.volmit.wormholes.util.Depend VAULT -> cq
    com.volmit.wormholes.util.Depend FAWE -> cr
    com.volmit.wormholes.util.Depend WORLDEDIT -> cs
    com.volmit.wormholes.util.Depend PROTOLIB -> ct
    com.volmit.wormholes.util.Depend CITIZENS -> cu
    java.lang.String name -> name
    com.volmit.wormholes.util.Depend[] $VALUES -> cv
    5:5:com.volmit.wormholes.util.Depend[] values() -> values
    5:5:com.volmit.wormholes.util.Depend valueOf(java.lang.String) -> valueOf
    16:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    5:11:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Dialog -> com.volmit.wormholes.src.dapibus:
    com.volmit.wormholes.util.Dialog setCancellable(boolean) -> dictum
    void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
com.volmit.wormholes.util.Dimension -> com.volmit.wormholes.src.sollicitudin:
    int width -> width
    int height -> height
    int depth -> depth
    25:29:void <init>(int,int,int) -> <init>
    40:44:void <init>(int,int) -> <init>
    54:69:com.volmit.wormholes.util.DimensionFace getPane() -> definition
    74:74:int getWidth() -> getWidth
    79:79:int getHeight() -> getHeight
    84:84:int getDepth() -> getDepth
com.volmit.wormholes.util.DimensionFace -> com.volmit.wormholes.src.Aliquam:
    com.volmit.wormholes.util.DimensionFace X -> cw
    com.volmit.wormholes.util.DimensionFace Y -> cx
    com.volmit.wormholes.util.DimensionFace Z -> cy
    com.volmit.wormholes.util.DimensionFace[] $VALUES -> cz
    8:8:com.volmit.wormholes.util.DimensionFace[] values() -> values
    8:8:com.volmit.wormholes.util.DimensionFace valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction -> com.volmit.wormholes.src.auctor:
    com.volmit.wormholes.util.Direction U -> cA
    com.volmit.wormholes.util.Direction D -> cB
    com.volmit.wormholes.util.Direction N -> cC
    com.volmit.wormholes.util.Direction S -> cD
    com.volmit.wormholes.util.Direction E -> cE
    com.volmit.wormholes.util.Direction W -> cF
    com.volmit.wormholes.util.GMap permute -> cG
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Cuboid$CuboidDirection f -> cH
    com.volmit.wormholes.util.Direction[] $VALUES -> cI
    11:11:com.volmit.wormholes.util.Direction[] values() -> values
    11:11:com.volmit.wormholes.util.Direction valueOf(java.lang.String) -> valueOf
    29:29:boolean isVertical() -> isVertical
    34:49:com.volmit.wormholes.util.Direction closest(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction[]) -> Lorem
    54:54:org.bukkit.util.Vector toVector() -> toVector
    59:69:boolean isCrooked(com.volmit.wormholes.util.Direction) -> ipsum
    73:78:void <init>(java.lang.String,int,int,int,int,com.volmit.wormholes.util.Cuboid$CuboidDirection) -> <init>
    82:92:org.bukkit.util.Vector angle(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction) -> Lorem
    97:115:com.volmit.wormholes.util.Direction reverse() -> show
    120:120:int x() -> verb
    125:125:int y() -> confuse
    130:130:int z() -> baffle
    135:135:com.volmit.wormholes.util.Cuboid$CuboidDirection f() -> Relevance
    140:140:com.volmit.wormholes.util.GList news() -> A
    145:155:com.volmit.wormholes.util.Direction getDirection(org.bukkit.util.Vector) -> adipiscing
    160:160:com.volmit.wormholes.util.GList udnews() -> ZComplexity
    174:206:com.volmit.wormholes.util.Direction fromByte(byte) -> sit
    217:235:byte byteValue() -> byteValue
    240:377:void calculatePermutations() -> Length
    381:397:com.volmit.wormholes.util.Axis getAxis() -> placerat
    11:20:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction$1 -> com.volmit.wormholes.src.auctor$1:
    256:256:void <init>(java.lang.String) -> <init>
    260:260:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$10 -> com.volmit.wormholes.src.auctor$2:
    367:367:void <init>(java.lang.String) -> <init>
    371:371:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$11 -> com.volmit.wormholes.src.auctor$3:
    int[] $SwitchMap$com$volmit$wormholes$util$Direction -> cJ
    97:97:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction$2 -> com.volmit.wormholes.src.auctor$4:
    270:270:void <init>(java.lang.String) -> <init>
    274:274:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$3 -> com.volmit.wormholes.src.auctor$5:
    282:282:void <init>(java.lang.String) -> <init>
    286:286:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$4 -> com.volmit.wormholes.src.auctor$6:
    295:295:void <init>(java.lang.String) -> <init>
    299:299:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$5 -> com.volmit.wormholes.src.auctor$7:
    307:307:void <init>(java.lang.String) -> <init>
    311:311:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$6 -> com.volmit.wormholes.src.auctor$8:
    319:319:void <init>(java.lang.String) -> <init>
    323:323:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$7 -> com.volmit.wormholes.src.auctor$9:
    331:331:void <init>(java.lang.String) -> <init>
    335:335:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$8 -> com.volmit.wormholes.src.auctor$10:
    343:343:void <init>(java.lang.String) -> <init>
    347:347:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$9 -> com.volmit.wormholes.src.auctor$11:
    355:355:void <init>(java.lang.String) -> <init>
    359:359:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.DoubleTag -> com.volmit.wormholes.src.Curabitur:
    double value -> value
    54:56:void <init>(java.lang.String,double) -> <init>
    60:60:java.lang.Double getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Element -> com.volmit.wormholes.src.feugiat:
    com.volmit.wormholes.util.Element addText(java.lang.String) -> platea
    org.bukkit.Material getType() -> getType
    com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    java.lang.Byte getMetadata() -> lists
    com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Element setTitle(java.lang.String) -> dictumst
    com.volmit.wormholes.util.GList getText() -> blocks
    com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    java.lang.Short getDurability() -> Common
    com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    com.volmit.wormholes.util.Slot getSlot() -> Informal
    com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    java.lang.Integer getCount() -> getCount
    com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    com.volmit.wormholes.util.Element copy() -> Synonyms
    com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    org.bukkit.inventory.ItemStack getStack() -> for
    void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    void setGlowing(boolean) -> Vestibulum
    boolean isGlowing() -> b
    java.util.UUID getId() -> getId
com.volmit.wormholes.util.EndTag -> com.volmit.wormholes.src.efficitur:
    47:48:void <init>() -> <init>
    52:52:java.lang.Object getValue() -> getValue
    57:57:java.lang.String toString() -> toString
com.volmit.wormholes.util.EntityHologram -> com.volmit.wormholes.src.laoreet:
    com.volmit.wormholes.util.GList lock -> cK
    org.bukkit.entity.Entity base -> cL
    org.bukkit.entity.Player exc -> cM
    26:30:void <init>(org.bukkit.entity.Entity) -> <init>
    35:35:org.bukkit.entity.Entity getHandle() -> c
    41:41:java.lang.String getDisplay() -> getDisplay
    47:55:void setDisplay(java.lang.String) -> setDisplay
    60:61:void setLocation(org.bukkit.Location) -> setLocation
    66:67:void setTextLocation(org.bukkit.Location) -> at
    72:74:void destroy() -> destroy
    79:79:org.bukkit.Location getLocation() -> getLocation
    85:96:void setExclusive(org.bukkit.entity.Player) -> posuere
    101:101:org.bukkit.entity.Player getExclusive() -> d
    15:15:void <clinit>() -> <clinit>
com.volmit.wormholes.util.EntityHud -> com.volmit.wormholes.src.nunc:
    org.bukkit.entity.Entity track -> cN
    double maxDist -> cO
    15:19:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity,double) -> <init>
    23:24:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> <init>
    29:32:org.bukkit.Location getBaseLocation() -> mortar
    38:44:void onUpdateInternal() -> platform
com.volmit.wormholes.util.Execution -> com.volmit.wormholes.src.venenatis:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ExecutiveIterator -> com.volmit.wormholes.src.rutrum:
    java.util.Iterator it -> cP
    java.lang.Boolean cancelled -> cQ
    java.lang.Object repeated -> cR
    java.lang.Integer size -> cS
    31:36:void <init>(java.util.List) -> <init>
    47:52:void <init>(java.util.Iterator) -> <init>
    void onIterate(java.lang.Object) -> elit
    59:59:boolean hasNext() -> hasNext
    65:79:java.lang.Object next() -> next
    89:89:int size() -> size
    99:99:boolean isCancelled() -> isCancelled
    107:108:void cancel() -> cancel
com.volmit.wormholes.util.ExecutivePool -> com.volmit.wormholes.src.mauris:
    com.volmit.wormholes.util.GList tasks -> cT
    com.volmit.wormholes.util.Task task -> aU
    23:56:void <init>(java.lang.Double,java.lang.Integer) -> <init>
    65:65:boolean isIdle() -> f
    76:77:void add(com.volmit.wormholes.util.ExecutiveIterator) -> Lorem
    86:93:int size() -> size
    101:107:void cancel() -> cancel
    116:116:boolean isRunning() -> isRunning
    9:9:com.volmit.wormholes.util.GList access$000(com.volmit.wormholes.util.ExecutivePool) -> Lorem
com.volmit.wormholes.util.ExecutivePool$1 -> com.volmit.wormholes.src.mauris$1:
    java.lang.Double val$limit -> cU
    com.volmit.wormholes.util.ExecutivePool this$0 -> cV
    26:26:void <init>(com.volmit.wormholes.util.ExecutivePool,int,java.lang.Double) -> <init>
    29:54:void run() -> run
com.volmit.wormholes.util.ExecutiveRunnable -> com.volmit.wormholes.src.lobortis:
    java.lang.Object next -> cW
    java.lang.Boolean cancelled -> cQ
    java.lang.Boolean repeated -> cX
    11:11:void <init>() -> <init>
    25:29:void run(java.lang.Object) -> Morbi
    35:35:void run() -> run
    45:45:java.lang.Object next() -> next
    53:54:void cancel() -> cancel
    63:63:boolean isCancelled() -> isCancelled
    72:73:void repeat() -> g
    82:82:boolean isRepeated() -> h
com.volmit.wormholes.util.ExecutiveTask -> com.volmit.wormholes.src.bibendum:
    com.volmit.wormholes.util.ExecutiveIterator it -> cY
    java.lang.Double limit -> cZ
    java.lang.Integer interval -> da
    java.lang.Runnable finish -> db
    com.volmit.wormholes.util.Task task -> aU
    33:57:void <init>(com.volmit.wormholes.util.ExecutiveIterator,java.lang.Double,java.lang.Integer,java.lang.Runnable) -> <init>
    64:66:void cancel() -> cancel
    75:75:boolean isRunning() -> isRunning
    12:12:com.volmit.wormholes.util.ExecutiveIterator access$000(com.volmit.wormholes.util.ExecutiveTask) -> Lorem
    12:12:java.lang.Double access$100(com.volmit.wormholes.util.ExecutiveTask) -> ipsum
    12:12:java.lang.Runnable access$200(com.volmit.wormholes.util.ExecutiveTask) -> dolor
com.volmit.wormholes.util.ExecutiveTask$1 -> com.volmit.wormholes.src.bibendum$1:
    com.volmit.wormholes.util.ExecutiveTask this$0 -> dc
    40:40:void <init>(com.volmit.wormholes.util.ExecutiveTask,int) -> <init>
    43:55:void run() -> run
com.volmit.wormholes.util.Explosion -> com.volmit.wormholes.src.Orci:
    float power -> dd
    boolean pushBlocks -> de
    15:18:void <init>() -> <init>
    22:23:com.volmit.wormholes.util.Explosion power(float) -> ipsum
    28:29:com.volmit.wormholes.util.Explosion pushBlocks() -> i
    34:40:void boom(org.bukkit.Location) -> iaculis
    45:47:void on(org.bukkit.event.entity.EntityExplodeEvent) -> Lorem
com.volmit.wormholes.util.F -> com.volmit.wormholes.src.natoque:
    java.text.NumberFormat NF -> df
    java.text.DecimalFormat DF -> dg
    java.lang.String[] NAMES -> dh
    java.math.BigInteger THOUSAND -> di
    java.util.NavigableMap MAP -> dj
    19:19:void <init>() -> <init>
    39:39:java.lang.String b(int) -> b
    44:44:java.lang.String b(long) -> sit
    49:49:java.lang.String b(double) -> consectetur
    54:71:java.lang.String b(java.math.BigInteger) -> Lorem
    76:80:void instantiate() -> j
    91:91:java.lang.String color(java.lang.String) -> Nam
    106:121:com.volmit.wormholes.util.GList colorSplit(java.lang.String) -> metus
    134:134:java.lang.String fileSize(long) -> amet
    147:147:java.lang.String memSize(long) -> consectetur
    160:161:java.lang.String stamp(long) -> adipiscing
    171:171:java.lang.String stamp() -> k
    187:214:java.lang.String ofSize(long,int) -> Lorem
    227:227:com.volmit.wormholes.util.GList wrap(java.lang.String) -> nisl
    242:259:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    274:279:java.lang.String trim(java.lang.String,int) -> amet
    292:312:java.lang.String cname(java.lang.String) -> magna
    328:363:com.volmit.wormholes.util.GList getParameters(java.lang.String,char) -> Lorem
    377:389:java.lang.String repeat(java.lang.String,int) -> repeat
    401:408:java.lang.String mem(long) -> elit
    421:439:java.lang.String memx(long) -> Morbi
    453:454:java.lang.String f(long) -> pulvinar
    466:467:java.lang.String f(int) -> Proin
    481:490:java.lang.String f(double,int) -> Lorem
    506:515:java.lang.String fd(double,int) -> ipsum
    529:538:java.lang.String f(float,int) -> Lorem
    549:549:java.lang.String f(double) -> adipiscing
    560:560:java.lang.String f(float) -> dolor
    575:575:java.lang.String pc(double,int) -> dolor
    590:590:java.lang.String pc(float,int) -> ipsum
    603:603:java.lang.String pc(double) -> elit
    616:616:java.lang.String pc(float) -> sit
    632:632:java.lang.String pc(int,int,int) -> dolor
    646:646:java.lang.String pc(int,int) -> dolor
    662:662:java.lang.String pc(long,long,int) -> Lorem
    676:676:java.lang.String pc(long,long) -> Lorem
    688:688:java.lang.String msSeconds(long) -> vulputate
    702:702:java.lang.String msSeconds(long,int) -> ipsum
    714:714:java.lang.String nsMs(long) -> dictum
    728:728:java.lang.String nsMs(long,int) -> dolor
    742:742:java.lang.String nsMsd(long,int) -> sit
    754:761:com.volmit.wormholes.util.GList color(java.util.List) -> ipsum
    24:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.FM -> com.volmit.wormholes.src.penatibus:
    18:18:void <init>() -> <init>
    22:48:void createAll(java.io.File,java.io.File) -> sit
    52:78:void parseAll(java.io.File,java.io.File) -> amet
    82:92:void create(java.io.File,java.io.File) -> consectetur
    96:109:void parse(java.io.File,java.io.File) -> adipiscing
com.volmit.wormholes.util.FOP -> com.volmit.wormholes.src.magnis:
    void operate() -> l
    void reverse() -> reverse
    void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.FU -> com.volmit.wormholes.src.dis:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> Lorem
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> ipsum
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:806:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:830:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:862:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> amet
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> consectetur
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
    95:95:void <clinit>() -> <clinit>
com.volmit.wormholes.util.FileHack -> com.volmit.wormholes.src.parturient:
    com.volmit.wormholes.util.GList queue -> bF
    8:10:void <init>() -> <init>
    14:15:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    19:23:void execute() -> execute
com.volmit.wormholes.util.FinalDouble -> com.volmit.wormholes.src.montes:
    double i -> dk
    19:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> Morbi
com.volmit.wormholes.util.FinalFloat -> com.volmit.wormholes.src.nascetur:
    float i -> i
    19:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> amet
    52:53:void add(float) -> add
    63:64:void sub(float) -> consectetur
com.volmit.wormholes.util.FinalInteger -> com.volmit.wormholes.src.ridiculus:
    int i -> i
    19:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> ac
com.volmit.wormholes.util.FinalLong -> com.volmit.wormholes.src.mus:
    long i -> dl
    19:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> Vestibulum
com.volmit.wormholes.util.FinalString -> com.volmit.wormholes.src.Interdum:
    java.lang.String string -> string
    19:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
com.volmit.wormholes.util.FloatTag -> com.volmit.wormholes.src.aggregate:
    float value -> value
    54:56:void <init>(java.lang.String,float) -> <init>
    60:60:java.lang.Float getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Formula -> com.volmit.wormholes.src.architect:
    java.lang.String expression -> dm
    31:33:void <init>(java.lang.String) -> <init>
    48:48:double evaluate(java.lang.Double[]) -> Lorem
com.volmit.wormholes.util.ForwardedPluginMessage -> com.volmit.wormholes.src.benchmark:
    27:31:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
    35:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,byte[]) -> <init>
    53:54:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
com.volmit.wormholes.util.Frustrum -> com.volmit.wormholes.src.brand:
    int ox -> dn
    int oy -> do
    int oz -> dp
    int maxX -> dq
    int maxY -> dr
    int maxZ -> ds
    int minX -> minX
    int minY -> minY
    int minZ -> dt
    org.bukkit.World world -> world
    org.bukkit.util.Vector vMin -> du
    org.bukkit.util.Vector vMax -> dv
    org.bukkit.util.Vector vDirect -> dw
    org.bukkit.Location origin -> dx
    com.volmit.wormholes.util.Cuboid frame -> dy
    com.volmit.wormholes.util.Direction direction -> dz
    com.volmit.wormholes.util.Axis axis -> risus
    32:50:void <init>(org.bukkit.World,int,int,int,int,int,int,int,int,int) -> <init>
    54:55:void <init>(org.bukkit.Location,org.bukkit.Location,org.bukkit.Location) -> <init>
    59:60:void <init>(org.bukkit.Location,com.volmit.wormholes.util.Cuboid) -> <init>
    64:76:com.volmit.wormholes.util.GList getPlayers(int) -> enim
    81:99:com.volmit.wormholes.util.GList getEntities(int) -> posuere
    104:128:com.volmit.wormholes.util.GList getBlocks(int) -> molestie
    133:168:boolean w(org.bukkit.Location) -> urna
    173:173:boolean w(int,int,int) -> sit
    178:178:int getOx() -> m
    183:183:int getOy() -> n
    188:188:int getOz() -> o
    193:193:int getMaxX() -> p
    198:198:int getMaxY() -> q
    203:203:int getMaxZ() -> r
    208:208:int getMinX() -> getMinX
    213:213:int getMinY() -> getMinY
    218:218:int getMinZ() -> s
    223:223:org.bukkit.World getWorld() -> getWorld
    228:228:org.bukkit.util.Vector getvMin() -> t
    233:233:org.bukkit.util.Vector getvMax() -> u
    238:238:org.bukkit.util.Vector getvDirect() -> v
    243:243:org.bukkit.Location getOrigin() -> w
    248:248:com.volmit.wormholes.util.Cuboid getFrame() -> x
    253:253:com.volmit.wormholes.util.Direction getDirection() -> y
    258:258:com.volmit.wormholes.util.Axis getAxis() -> placerat
com.volmit.wormholes.util.Frustrum$1 -> com.volmit.wormholes.src.brand$1:
    com.volmit.wormholes.util.Frustrum this$0 -> dA
    65:65:void <init>(com.volmit.wormholes.util.Frustrum) -> <init>
    69:74:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    65:65:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Frustrum$2 -> com.volmit.wormholes.src.brand$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Direction -> cJ
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> bi
    110:136:void <clinit>() -> <clinit>
com.volmit.wormholes.util.GAdapter -> com.volmit.wormholes.src.cultivate:
    12:12:void <init>() -> <init>
    17:17:java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GBiset -> com.volmit.wormholes.src.deliver:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> dB
    java.lang.Object b -> dC
    30:33:void <init>(java.lang.Object,java.lang.Object) -> <init>
    42:42:java.lang.Object getA() -> z
    53:54:void setA(java.lang.Object) -> pulvinar
    63:63:java.lang.Object getB() -> B
    73:74:void setB(java.lang.Object) -> vulputate
    79:83:int hashCode() -> hashCode
    89:125:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.GBook -> com.volmit.wormholes.src.deploy:
    com.volmit.wormholes.util.GList pages -> dD
    java.lang.String title -> title
    java.lang.String author -> author
    28:32:void <init>(java.lang.String,java.lang.String) -> <init>
    36:36:java.lang.String getTitle() -> getTitle
    41:42:void setTitle(java.lang.String) -> setTitle
    46:46:java.lang.String getAuthor() -> getAuthor
    51:52:void setAuthor(java.lang.String) -> setAuthor
    56:57:void setPages(com.volmit.wormholes.util.GList) -> adipiscing
    61:63:com.volmit.wormholes.util.GBook addPage(com.volmit.wormholes.util.GPage) -> Lorem
    68:68:com.volmit.wormholes.util.GList getPages() -> C
    73:87:com.volmit.wormholes.util.GList toPages() -> D
    97:104:org.bukkit.inventory.ItemStack toBook() -> E
    116:128:com.volmit.wormholes.util.GList read(org.bukkit.inventory.ItemStack) -> ipsum
com.volmit.wormholes.util.GChunk -> com.volmit.wormholes.src.disintermediate:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> dE
    java.lang.Integer z -> dF
    java.lang.String world -> dG
    28:29:void <init>(org.bukkit.Chunk) -> <init>
    38:39:void <init>(org.bukkit.Location) -> <init>
    52:56:void <init>(int,int,java.lang.String) -> <init>
    61:66:int hashCode() -> hashCode
    72:128:boolean equals(java.lang.Object) -> equals
    140:145:boolean isChunk(org.bukkit.Chunk) -> ipsum
    155:155:java.lang.Integer getX() -> F
    166:167:void setX(java.lang.Integer) -> ipsum
    176:176:java.lang.Integer getZ() -> G
    187:188:void setZ(java.lang.Integer) -> dolor
    197:197:java.lang.String getWorld() -> H
    208:209:void setWorld(java.lang.String) -> setWorld
    218:218:org.bukkit.Chunk toChunk() -> I
    227:227:java.lang.String toString() -> toString
com.volmit.wormholes.util.GFile -> com.volmit.wormholes.src.drive:
    long serialVersionUID -> serialVersionUID
    27:28:void <init>(java.io.File,java.lang.String) -> <init>
    38:39:void <init>(java.net.URI) -> <init>
    51:52:void <init>(java.lang.String,java.lang.String) -> <init>
    64:65:void <init>(com.volmit.wormholes.util.GFile,java.lang.String[]) -> <init>
    75:76:void <init>(java.lang.String) -> <init>
    83:88:boolean createNewFile() -> createNewFile
com.volmit.wormholes.util.GList -> com.volmit.wormholes.src.e:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    40:46:void <init>(java.util.Set) -> <init>
    56:62:void <init>(java.util.Collection) -> <init>
    72:78:void <init>(java.util.Iterator) -> <init>
    88:90:void <init>(java.lang.Object[]) -> <init>
    101:109:void <init>(java.util.List) -> <init>
    118:145:java.lang.Object mostCommon() -> J
    155:157:com.volmit.wormholes.util.GList shuffleCopy() -> K
    165:166:void shuffle() -> L
    189:215:com.volmit.wormholes.util.GList split() -> M
    227:227:boolean hasIndex(int) -> hasIndex
    237:238:java.lang.Object pickRandom() -> N
    249:256:com.volmit.wormholes.util.GList stringList() -> O
    266:266:int last() -> last
    280:285:int getIndexOrLast(int) -> odio
    303:303:com.volmit.wormholes.util.GList cropFrom(int) -> a
    308:340:com.volmit.wormholes.util.GList split(int) -> facilisis
    358:358:com.volmit.wormholes.util.GList cropTo(int) -> In
    377:387:com.volmit.wormholes.util.GList crop(int,int) -> sit
    398:402:com.volmit.wormholes.util.GList removeDuplicates() -> P
    413:417:void removeAll(java.lang.Object) -> dictum
    426:426:boolean hasDuplicates() -> Q
    434:442:void sort() -> sort
    455:461:void push(java.lang.Object,int) -> Lorem
    472:476:void add(java.lang.Object[]) -> add
    487:488:com.volmit.wormholes.util.GList qadd(java.lang.Object) -> Vestibulum
    499:503:void add(java.util.List) -> dolor
    516:548:java.lang.String toString(java.lang.String) -> toString
    558:560:com.volmit.wormholes.util.GList reverse() -> R
    569:569:java.lang.String toString() -> toString
    579:586:com.volmit.wormholes.util.GList copy() -> S
    598:599:com.volmit.wormholes.util.GList qdel(java.lang.Object) -> in
    609:616:java.lang.Object pop() -> pop
    621:630:java.lang.Object popRandom() -> T
com.volmit.wormholes.util.GList$1 -> com.volmit.wormholes.src.e$1:
    com.volmit.wormholes.util.GList this$0 -> dH
    435:435:void <init>(com.volmit.wormholes.util.GList) -> <init>
    439:439:int compare(java.lang.Object,java.lang.Object) -> compare
com.volmit.wormholes.util.GListAdapter -> com.volmit.wormholes.src.enable:
    14:14:void <init>() -> <init>
    25:37:java.util.List adapt(java.util.List) -> sit
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GMCA -> com.volmit.wormholes.src.embrace:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> dE
    java.lang.Integer z -> dF
    java.lang.String world -> dG
    29:33:void <init>(int,int,java.lang.String) -> <init>
    38:43:int hashCode() -> hashCode
    49:105:boolean equals(java.lang.Object) -> equals
    115:115:java.lang.Integer getX() -> F
    126:127:void setX(java.lang.Integer) -> ipsum
    136:136:java.lang.Integer getZ() -> G
    147:148:void setZ(java.lang.Integer) -> dolor
    157:157:java.lang.String getWorld() -> H
    168:169:void setWorld(java.lang.String) -> setWorld
    177:177:java.lang.String toString() -> toString
com.volmit.wormholes.util.GMap -> com.volmit.wormholes.src.empower:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:23:void <init>(java.util.Map) -> <init>
    32:39:com.volmit.wormholes.util.GMap copy() -> U
    53:54:com.volmit.wormholes.util.GMap qput(java.lang.Object,java.lang.Object) -> Lorem
    64:81:com.volmit.wormholes.util.GMap flip() -> V
    87:94:java.lang.String toString() -> toString
    106:111:com.volmit.wormholes.util.GMap append(com.volmit.wormholes.util.GMap) -> ipsum
    121:121:com.volmit.wormholes.util.GList k() -> W
    131:131:com.volmit.wormholes.util.GSet kset() -> X
    141:141:com.volmit.wormholes.util.GList v() -> Y
    151:151:com.volmit.wormholes.util.GSet vset() -> Z
    164:168:void putNVD(java.lang.Object,java.lang.Object) -> ipsum
    176:176:boolean contains(java.lang.Object) -> contains
    188:198:com.volmit.wormholes.util.GList get(com.volmit.wormholes.util.GList) -> elit
    209:219:com.volmit.wormholes.util.GMap removeDuplicateValues() -> aa
    233:242:void put(com.volmit.wormholes.util.GList,com.volmit.wormholes.util.GList) -> Lorem
    251:267:com.volmit.wormholes.util.GList sortK() -> ab
    277:293:com.volmit.wormholes.util.GList sortV() -> ae
com.volmit.wormholes.util.GPage -> com.volmit.wormholes.src.engage:
    com.volmit.wormholes.util.GMap elements -> dI
    16:18:void <init>() -> <init>
    31:42:com.volmit.wormholes.util.GPage put(java.lang.String,java.lang.String) -> amet
    47:47:com.volmit.wormholes.util.GMap getElements() -> af
    52:53:void setElements(com.volmit.wormholes.util.GMap) -> dolor
com.volmit.wormholes.util.GQuadraset -> com.volmit.wormholes.src.engineer:
    java.lang.Object a -> dB
    java.lang.Object b -> dC
    java.lang.Object c -> dJ
    java.lang.Object d -> dK
    12:17:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    21:21:java.lang.Object getA() -> z
    26:27:void setA(java.lang.Object) -> pulvinar
    31:31:java.lang.Object getB() -> B
    36:37:void setB(java.lang.Object) -> vulputate
    41:41:java.lang.Object getC() -> ag
    46:47:void setC(java.lang.Object) -> purus
    51:51:java.lang.Object getD() -> ah
    56:57:void setD(java.lang.Object) -> non
com.volmit.wormholes.util.GSet -> com.volmit.wormholes.src.enhance:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
com.volmit.wormholes.util.GSound -> com.volmit.wormholes.src.envisioneer:
    java.lang.String sound -> dL
    org.bukkit.Sound iSound -> dM
    java.lang.Float volume -> dN
    java.lang.Float pitch -> dO
    33:37:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    52:57:void <init>(org.bukkit.Sound,java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    66:70:void <init>(java.lang.String) -> <init>
    80:84:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    93:97:void <init>(org.bukkit.Sound) -> <init>
    102:102:void prePlay() -> ai
    114:127:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    137:138:void play(org.bukkit.entity.Player) -> ac
    145:145:com.volmit.wormholes.util.Audible clone() -> of
    156:169:void play(org.bukkit.Location) -> Pellentesque
    181:196:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    205:205:java.lang.String getSound() -> aj
    216:217:void setSound(java.lang.String) -> tortor
    226:226:org.bukkit.Sound getiSound() -> ak
    237:238:void setiSound(org.bukkit.Sound) -> Lorem
    247:247:java.lang.Float getVolume() -> end
    258:259:void setVolume(java.lang.Float) -> Lorem
    268:268:java.lang.Float getPitch() -> best
    279:280:void setPitch(java.lang.Float) -> ipsum
    15:15:java.lang.Object clone() -> clone
com.volmit.wormholes.util.GText -> com.volmit.wormholes.src.evolve:
    com.volmit.wormholes.util.RTX t -> dP
    19:21:void <init>() -> <init>
    33:44:void add(java.lang.String) -> add
    58:86:void addWithHover(java.lang.String,java.lang.String) -> consectetur
    102:130:void addWithHoverCommand(java.lang.String,java.lang.String,java.lang.String) -> ipsum
    146:174:void addWithHoverSuggestCommand(java.lang.String,java.lang.String,java.lang.String) -> dolor
    190:218:void addWithHoverURL(java.lang.String,java.lang.String,java.lang.String) -> sit
    222:222:com.volmit.wormholes.util.GText pack() -> al
    232:232:com.volmit.wormholes.util.JSONArray toJSON() -> am
    243:244:void tellRawTo(org.bukkit.entity.Player) -> molestie
com.volmit.wormholes.util.GTime -> com.volmit.wormholes.src.expedite:
    long serialVersionUID -> serialVersionUID
    long days -> dQ
    long hours -> dR
    long minutes -> dS
    long seconds -> dT
    long milliseconds -> dU
    33:34:void <init>(long,long,long,long,long) -> <init>
    43:54:void <init>(long) -> <init>
    63:98:void <init>(java.lang.String) -> <init>
    102:129:int getMult(java.lang.String) -> tempus
    135:135:long getDays() -> an
    140:140:long getHours() -> ao
    145:145:long getMinutes() -> ap
    150:150:long getSeconds() -> getSeconds
    155:155:long getMilliseconds() -> aq
    160:160:long getTotalDuration() -> ar
    170:187:java.lang.String shortDescription() -> as
    193:198:java.lang.String s(long) -> in
    208:208:java.lang.String to() -> to
    220:258:java.lang.String to(java.lang.String) -> sem
    268:288:java.lang.String ago() -> au
    293:315:java.lang.String toString() -> toString
com.volmit.wormholes.util.GTriset -> com.volmit.wormholes.src.exploit:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> dB
    java.lang.Object b -> dC
    java.lang.Object c -> dJ
    14:18:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    22:22:java.lang.Object getA() -> z
    27:28:void setA(java.lang.Object) -> pulvinar
    32:32:java.lang.Object getB() -> B
    37:38:void setB(java.lang.Object) -> vulputate
    42:42:java.lang.Object getC() -> ag
    47:48:void setC(java.lang.Object) -> purus
com.volmit.wormholes.util.GVector -> com.volmit.wormholes.src.extend:
    double x -> x
    double y -> y
    double z -> z
    int blockX -> dV
    int blockY -> dW
    int blockZ -> dX
    26:33:void <init>(org.bukkit.util.Vector) -> <init>
    37:38:void <init>() -> <init>
    47:47:org.bukkit.util.Vector toVector() -> toVector
    57:57:double getX() -> getX
    68:69:void setX(double) -> setX
    78:78:double getY() -> getY
    89:90:void setY(double) -> setY
    99:99:double getZ() -> getZ
    110:111:void setZ(double) -> setZ
    120:120:int getBlockX() -> getBlockX
    130:130:int getBlockY() -> getBlockY
    140:140:int getBlockZ() -> getBlockZ
    146:155:int hashCode() -> hashCode
    161:208:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.GameProfileBuilder -> com.volmit.wormholes.src.facilitate:
    java.lang.String SERVICE_URL -> dY
    java.lang.String JSON_SKIN -> dZ
    java.lang.String JSON_CAPE -> ea
    com.google.gson.Gson gson -> gson
    java.util.HashMap cache -> eb
    long cacheTime -> ec
    31:31:void <init>() -> <init>
    45:45:com.mojang.authlib.GameProfile fetch(java.util.UUID) -> consectetur
    50:75:com.mojang.authlib.GameProfile fetch(java.util.UUID,boolean) -> Lorem
    82:82:com.mojang.authlib.GameProfile getProfile(java.util.UUID,java.lang.String,java.lang.String) -> Lorem
    87:101:com.mojang.authlib.GameProfile getProfile(java.util.UUID,java.lang.String,java.lang.String,java.lang.String) -> Lorem
    106:107:void setCacheTime(long) -> purus
    31:31:long access$200() -> av
    37:41:void <clinit>() -> <clinit>
com.volmit.wormholes.util.GameProfileBuilder$1 -> com.volmit.wormholes.src.facilitate$1:
com.volmit.wormholes.util.GameProfileBuilder$CachedProfile -> com.volmit.wormholes.src.facilitate$Lorem:
    long timestamp -> timestamp
    com.mojang.authlib.GameProfile profile -> ed
    183:189:void <init>(com.mojang.authlib.GameProfile) -> <init>
    193:193:boolean isValid() -> isValid
    181:181:com.mojang.authlib.GameProfile access$100(com.volmit.wormholes.util.GameProfileBuilder$CachedProfile) -> Lorem
com.volmit.wormholes.util.GameProfileBuilder$GameProfileSerializer -> com.volmit.wormholes.src.facilitate$ipsum:
    109:109:void <init>() -> <init>
    114:142:com.mojang.authlib.GameProfile deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> Lorem
    148:177:com.google.gson.JsonElement serialize(com.mojang.authlib.GameProfile,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> Lorem
    109:109:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    109:109:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    109:109:void <init>(com.volmit.wormholes.util.GameProfileBuilder$1) -> <init>
com.volmit.wormholes.util.Guis -> com.volmit.wormholes.src.generate:
    8:8:void <init>() -> <init>
    21:57:com.volmit.wormholes.util.GList getCentered(int,int) -> amet
    69:91:com.volmit.wormholes.util.GList sortLTR(com.volmit.wormholes.util.GList) -> Morbi
com.volmit.wormholes.util.HTTP -> com.volmit.wormholes.src.grow:
    java.lang.String CRLF -> ee
    34:34:void <init>() -> <init>
    72:103:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    128:161:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.HTTPTokener -> com.volmit.wormholes.src.harness:
    40:41:void <init>(java.lang.String) -> <init>
    52:74:java.lang.String nextToken() -> nextToken
com.volmit.wormholes.util.HandledConfig -> com.volmit.wormholes.src.implement:
com.volmit.wormholes.util.Heaft -> com.volmit.wormholes.src.incentivize:
    com.volmit.wormholes.util.Heaft TINY -> ef
    com.volmit.wormholes.util.Heaft SMALL -> eg
    com.volmit.wormholes.util.Heaft NORMAL -> eh
    com.volmit.wormholes.util.Heaft BIG -> ei
    com.volmit.wormholes.util.Heaft MASSIVE -> ej
    com.volmit.wormholes.util.Heaft[] $VALUES -> ek
    3:3:com.volmit.wormholes.util.Heaft[] values() -> values
    3:3:com.volmit.wormholes.util.Heaft valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Health -> com.volmit.wormholes.src.incubate:
    double hp -> el
    20:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> aw
    41:41:double getHearts() -> ax
    51:51:double getHalfHearts() -> ay
    61:61:int getFlatHalfHearts() -> az
com.volmit.wormholes.util.Hologram -> com.volmit.wormholes.src.innovate:
    org.bukkit.entity.Entity getHandle() -> c
    void setExclusive(org.bukkit.entity.Player) -> posuere
    org.bukkit.entity.Player getExclusive() -> d
    java.lang.String getDisplay() -> getDisplay
    void setLocation(org.bukkit.Location) -> setLocation
    void setTextLocation(org.bukkit.Location) -> at
    void setDisplay(java.lang.String) -> setDisplay
    void destroy() -> destroy
    org.bukkit.Location getLocation() -> getLocation
com.volmit.wormholes.util.Hud -> com.volmit.wormholes.src.integrate:
    void open() -> open
    void close() -> close
    void setContents(com.volmit.wormholes.util.GList) -> sit
    com.volmit.wormholes.util.GList getContents() -> collaborative
    java.lang.String getSelection() -> compelling
    int getSelectionRow() -> cross
    void onUpdate() -> exploit
    void onOpen() -> extend
    java.lang.String onDisable(java.lang.String) -> elit
    java.lang.String onEnable(java.lang.String) -> adipiscing
    void onClose() -> facilitate
    void onSelect(java.lang.String,int) -> Lorem
    void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.util.ICopy -> com.volmit.wormholes.src.iterate:
    java.io.File target -> em
    java.io.File destination -> en
    13:17:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    22:47:void operate() -> l
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDeflate -> com.volmit.wormholes.src.leverage:
    java.io.File target -> em
    java.io.File destination -> en
    17:21:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    28:63:void operate() -> l
    69:69:void reverse() -> reverse
com.volmit.wormholes.util.IDelete -> com.volmit.wormholes.src.matrix:
    java.io.File target -> em
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:46:void operate() -> l
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDirectory -> com.volmit.wormholes.src.maximize:
    java.io.File target -> em
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:21:void operate() -> l
    27:27:void reverse() -> reverse
com.volmit.wormholes.util.IEncrypt -> com.volmit.wormholes.src.mesh:
    java.io.File target -> em
    java.io.File destination -> en
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:44:void operate() -> l
    50:50:void reverse() -> reverse
com.volmit.wormholes.util.IInflate -> com.volmit.wormholes.src.monetize:
    java.io.File target -> em
    java.io.File destination -> en
    20:24:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    31:47:void operate() -> l
    51:121:void add(java.io.File,java.util.jar.JarOutputStream) -> Lorem
    127:127:void reverse() -> reverse
com.volmit.wormholes.util.IModify -> com.volmit.wormholes.src.morph:
    java.io.File target -> em
    java.lang.String key -> key
    java.lang.Object value -> value
    15:20:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.Object) -> <init>
    27:38:void operate() -> l
    44:44:void reverse() -> reverse
com.volmit.wormholes.util.IMove -> com.volmit.wormholes.src.optimize:
    java.io.File target -> em
    java.io.File destination -> en
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:23:void operate() -> l
    29:29:void reverse() -> reverse
com.volmit.wormholes.util.IO -> com.volmit.wormholes.src.orchestrate:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    97:117:void <clinit>() -> <clinit>
com.volmit.wormholes.util.IOP -> com.volmit.wormholes.src.productize:
    com.volmit.wormholes.util.D d -> aV
    com.volmit.wormholes.util.FileHack h -> eo
    11:14:void <init>(com.volmit.wormholes.util.FileHack) -> <init>
    18:19:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    24:32:void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.IPatch -> com.volmit.wormholes.src.recontextualize:
    java.io.File target -> em
    java.lang.String key -> key
    java.lang.String value -> value
    13:18:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.String) -> <init>
    23:42:void operate() -> l
    48:48:void reverse() -> reverse
com.volmit.wormholes.util.IntTag -> com.volmit.wormholes.src.redefine:
    int value -> value
    54:56:void <init>(java.lang.String,int) -> <init>
    60:60:java.lang.Integer getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Intersection -> com.volmit.wormholes.src.reintermediate:
    7:7:void <init>() -> <init>
    48:66:boolean intersectRayWithSquare(com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3) -> Lorem
    71:77:boolean intersects(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector) -> Lorem
com.volmit.wormholes.util.Intersection$MVector3 -> com.volmit.wormholes.src.reintermediate$Lorem:
    float x -> x
    float y -> y
    float z -> z
    14:18:void <init>(float,float,float) -> <init>
    22:22:com.volmit.wormholes.util.Intersection$MVector3 add(com.volmit.wormholes.util.Intersection$MVector3) -> Lorem
    27:27:com.volmit.wormholes.util.Intersection$MVector3 sub(com.volmit.wormholes.util.Intersection$MVector3) -> ipsum
    32:32:com.volmit.wormholes.util.Intersection$MVector3 scale(float) -> adipiscing
    37:37:com.volmit.wormholes.util.Intersection$MVector3 cross(com.volmit.wormholes.util.Intersection$MVector3) -> dolor
    42:42:float dot(com.volmit.wormholes.util.Intersection$MVector3) -> sit
com.volmit.wormholes.util.Inventories -> com.volmit.wormholes.src.reinvent:
    12:12:void <init>() -> <init>
    23:23:boolean hasSpace(org.bukkit.inventory.Inventory) -> Lorem
    37:37:boolean hasSpace(org.bukkit.inventory.Inventory,int) -> Lorem
    50:60:com.volmit.wormholes.util.GList getActualContents(org.bukkit.inventory.Inventory) -> ipsum
    76:92:boolean hasSpace(org.bukkit.inventory.Inventory,org.bukkit.inventory.ItemStack) -> Lorem
    104:114:int getEmptySlots(org.bukkit.inventory.Inventory) -> dolor
com.volmit.wormholes.util.Items -> com.volmit.wormholes.src.repurpose:
    18:18:void <init>() -> <init>
    29:29:boolean is(org.bukkit.inventory.ItemStack) -> dolor
    43:43:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> Lorem
    58:58:boolean is(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    74:74:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> Lorem
    95:107:org.bukkit.inventory.ItemStack getSkull(java.lang.String) -> volutpat
    123:123:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> Lorem
    135:135:boolean hasMeta(org.bukkit.inventory.ItemStack) -> sit
    147:147:boolean hasName(org.bukkit.inventory.ItemStack) -> amet
    159:159:boolean hasLore(org.bukkit.inventory.ItemStack) -> consectetur
    173:173:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> Lorem
    187:187:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> Lorem
    201:201:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> Lorem
    217:222:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> Lorem
    234:239:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> adipiscing
    252:257:com.volmit.wormholes.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> elit
    269:269:boolean isBroken(org.bukkit.inventory.ItemStack) -> Morbi
    281:281:boolean hasDurability(org.bukkit.inventory.ItemStack) -> pulvinar
    293:303:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> vulputate
    316:329:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> Lorem
    340:345:short getMaxDurability(org.bukkit.inventory.ItemStack) -> dictum
    357:362:short getDurability(org.bukkit.inventory.ItemStack) -> Vestibulum
    375:381:void setDurability(org.bukkit.inventory.ItemStack,short) -> Lorem
    393:399:void setDurability(org.bukkit.inventory.ItemStack,int) -> Lorem
    411:417:void damage(org.bukkit.inventory.ItemStack,int) -> ipsum
    431:474:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> Lorem
com.volmit.wormholes.util.JSONArray -> com.volmit.wormholes.src.revolutionize:
    java.util.ArrayList myArrayList -> ep
    92:94:void <init>() -> <init>
    105:133:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    146:147:void <init>(java.lang.String) -> <init>
    155:163:void <init>(java.util.Collection) -> <init>
    172:182:void <init>(java.lang.Object) -> <init>
    186:186:java.util.Iterator iterator() -> iterator
    199:203:java.lang.Object get(int) -> get
    218:228:boolean getBoolean(int) -> getBoolean
    242:247:double getDouble(int) -> getDouble
    264:273:java.lang.Enum getEnum(java.lang.Class,int) -> Lorem
    287:291:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    307:311:java.math.BigInteger getBigInteger(int) -> hac
    326:331:int getInt(int) -> getInt
    346:350:com.volmit.wormholes.util.JSONArray getJSONArray(int) -> habitasse
    364:368:com.volmit.wormholes.util.JSONObject getJSONObject(int) -> platea
    382:387:long getLong(int) -> getLong
    401:405:java.lang.String getString(int) -> getString
    416:416:boolean isNull(int) -> isNull
    431:440:java.lang.String join(java.lang.String) -> rhoncus
    449:449:int length() -> length
    460:461:java.lang.Object opt(int) -> dictumst
    474:474:boolean optBoolean(int) -> Nam
    490:492:boolean optBoolean(int,boolean) -> Lorem
    506:506:double optDouble(int) -> metus
    522:524:double optDouble(int,double) -> Lorem
    538:538:int optInt(int) -> nisl
    554:556:int optInt(int,int) -> consectetur
    570:570:java.lang.Enum optEnum(java.lang.Class,int) -> ipsum
    587:607:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> Lorem
    625:627:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> Lorem
    644:646:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> Lorem
    659:660:com.volmit.wormholes.util.JSONArray optJSONArray(int) -> magna
    673:674:com.volmit.wormholes.util.JSONObject optJSONObject(int) -> tortor
    687:687:long optLong(int) -> tempus
    703:705:long optLong(int,long) -> Lorem
    719:719:java.lang.String optString(int) -> sem
    733:735:java.lang.String optString(int,java.lang.String) -> ipsum
    746:747:com.volmit.wormholes.util.JSONArray put(boolean) -> in
    759:760:com.volmit.wormholes.util.JSONArray put(java.util.Collection) -> Lorem
    773:776:com.volmit.wormholes.util.JSONArray put(double) -> pulvinar
    787:788:com.volmit.wormholes.util.JSONArray put(int) -> sed
    799:800:com.volmit.wormholes.util.JSONArray put(long) -> non
    812:813:com.volmit.wormholes.util.JSONArray put(java.util.Map) -> Lorem
    826:827:com.volmit.wormholes.util.JSONArray put(java.lang.Object) -> mi
    844:845:com.volmit.wormholes.util.JSONArray put(int,boolean) -> ipsum
    861:862:com.volmit.wormholes.util.JSONArray put(int,java.util.Collection) -> Lorem
    879:880:com.volmit.wormholes.util.JSONArray put(int,double) -> ipsum
    897:898:com.volmit.wormholes.util.JSONArray put(int,int) -> adipiscing
    915:916:com.volmit.wormholes.util.JSONArray put(int,long) -> ipsum
    933:934:com.volmit.wormholes.util.JSONArray put(int,java.util.Map) -> Lorem
    954:966:com.volmit.wormholes.util.JSONArray put(int,java.lang.Object) -> Lorem
    978:979:java.lang.Object remove(int) -> remove
    991:1013:boolean similar(java.lang.Object) -> euismod
    1029:1036:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.JSONArray) -> Lorem
    1052:1054:java.lang.String toString() -> toString
    1071:1074:java.lang.String toString(int) -> toString
    1087:1087:java.io.Writer write(java.io.Writer) -> Lorem
    1106:1136:java.io.Writer write(java.io.Writer,int,int) -> Lorem
com.volmit.wormholes.util.JSONDataInput -> com.volmit.wormholes.src.scale:
    8:8:void <init>() -> <init>
    12:40:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.JSONDataOutput -> com.volmit.wormholes.src.seize:
    7:7:void <init>() -> <init>
    12:24:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.JSONException -> com.volmit.wormholes.src.strategize:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> eq
    20:21:void <init>(java.lang.String) -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    41:41:java.lang.Throwable getCause() -> getCause
com.volmit.wormholes.util.JSONML -> com.volmit.wormholes.src.streamline:
    38:38:void <init>() -> <init>
    56:230:java.lang.Object parse(com.volmit.wormholes.util.XMLTokener,boolean,com.volmit.wormholes.util.JSONArray) -> Lorem
    251:251:com.volmit.wormholes.util.JSONArray toJSONArray(java.lang.String) -> sapien
    268:268:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.XMLTokener) -> Lorem
    286:286:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.XMLTokener) -> ipsum
    304:304:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    321:386:java.lang.String toString(com.volmit.wormholes.util.JSONArray) -> ipsum
    399:467:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.JSONObject -> com.volmit.wormholes.src.syndicate:
    java.util.Map map -> map
    java.lang.Object NULL -> er
    160:162:void <init>() -> <init>
    180:191:void <init>(com.volmit.wormholes.util.JSONObject,java.lang.String[]) -> <init>
    204:250:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    264:279:void <init>(java.util.Map) -> <init>
    304:306:void <init>(java.lang.Object) -> <init>
    324:337:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    353:354:void <init>(java.lang.String) -> <init>
    368:403:void <init>(java.lang.String,java.util.Locale) -> <init>
    426:441:com.volmit.wormholes.util.JSONObject accumulate(java.lang.String,java.lang.Object) -> ipsum
    461:476:com.volmit.wormholes.util.JSONObject append(java.lang.String,java.lang.Object) -> dolor
    489:508:java.lang.String doubleToString(double) -> vulputate
    522:531:java.lang.Object get(java.lang.String) -> get
    548:556:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    571:581:boolean getBoolean(java.lang.String) -> getBoolean
    596:603:java.math.BigInteger getBigInteger(java.lang.String) -> orci
    619:626:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    642:649:double getDouble(java.lang.String) -> getDouble
    665:672:int getInt(java.lang.String) -> getInt
    687:692:com.volmit.wormholes.util.JSONArray getJSONArray(java.lang.String) -> ligula
    706:711:com.volmit.wormholes.util.JSONObject getJSONObject(java.lang.String) -> Sed
    726:733:long getLong(java.lang.String) -> getLong
    744:757:java.lang.String[] getNames(com.volmit.wormholes.util.JSONObject) -> dolor
    767:783:java.lang.String[] getNames(java.lang.Object) -> Pellentesque
    797:802:java.lang.String getString(java.lang.String) -> getString
    814:814:boolean has(java.lang.String) -> has
    831:870:com.volmit.wormholes.util.JSONObject increment(java.lang.String) -> ultrices
    884:884:boolean isNull(java.lang.String) -> isNull
    894:894:java.util.Iterator keys() -> keys
    904:904:java.util.Set keySet() -> keySet
    914:914:int length() -> length
    926:932:com.volmit.wormholes.util.JSONArray names() -> aA
    946:966:java.lang.String numberToString(java.lang.Number) -> Lorem
    978:978:java.lang.Object opt(java.lang.String) -> imperdiet
    992:992:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> ipsum
    1011:1033:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> Lorem
    1047:1047:boolean optBoolean(java.lang.String) -> turpis
    1065:1069:boolean optBoolean(java.lang.String,boolean) -> ipsum
    1084:1084:double optDouble(java.lang.String) -> Nullam
    1102:1106:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> Lorem
    1125:1129:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> Lorem
    1148:1152:double optDouble(java.lang.String,double) -> ipsum
    1167:1167:int optInt(java.lang.String) -> vehicula
    1185:1189:int optInt(java.lang.String,int) -> consectetur
    1203:1204:com.volmit.wormholes.util.JSONArray optJSONArray(java.lang.String) -> porta
    1217:1218:com.volmit.wormholes.util.JSONObject optJSONObject(java.lang.String) -> ultricies
    1232:1232:long optLong(java.lang.String) -> vestibulum
    1250:1254:long optLong(java.lang.String,long) -> ipsum
    1269:1269:java.lang.String optString(java.lang.String) -> felis
    1284:1285:java.lang.String optString(java.lang.String,java.lang.String) -> adipiscing
    1290:1346:void populateMap(java.lang.Object) -> at
    1361:1362:com.volmit.wormholes.util.JSONObject put(java.lang.String,boolean) -> dolor
    1378:1379:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Collection) -> Lorem
    1395:1396:com.volmit.wormholes.util.JSONObject put(java.lang.String,double) -> dolor
    1412:1413:com.volmit.wormholes.util.JSONObject put(java.lang.String,int) -> adipiscing
    1429:1430:com.volmit.wormholes.util.JSONObject put(java.lang.String,long) -> dolor
    1446:1447:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Map) -> Lorem
    1466:1479:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.lang.Object) -> sit
    1497:1505:com.volmit.wormholes.util.JSONObject putOnce(java.lang.String,java.lang.Object) -> amet
    1524:1528:com.volmit.wormholes.util.JSONObject putOpt(java.lang.String,java.lang.Object) -> consectetur
    1543:1555:java.lang.String quote(java.lang.String) -> quote
    1560:1621:java.io.Writer quote(java.lang.String,java.io.Writer) -> Lorem
    1634:1634:java.lang.Object remove(java.lang.String) -> nec
    1650:1690:boolean similar(java.lang.Object) -> euismod
    1705:1760:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1773:1791:void testValidity(java.lang.Object) -> iaculis
    1806:1815:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.JSONArray) -> dolor
    1834:1838:java.lang.String toString() -> toString
    1858:1862:java.lang.String toString(int) -> toString
    1891:1936:java.lang.String valueToString(java.lang.Object) -> valueToString
    1955:1990:java.lang.Object wrap(java.lang.Object) -> wrap
    2005:2005:java.io.Writer write(java.io.Writer) -> Lorem
    2010:2071:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> Lorem
    2076:2080:void indent(java.io.Writer,int) -> Lorem
    2095:2147:java.io.Writer write(java.io.Writer,int,int) -> Lorem
    154:154:void <clinit>() -> <clinit>
com.volmit.wormholes.util.JSONObject$1 -> com.volmit.wormholes.src.syndicate$1:
com.volmit.wormholes.util.JSONObject$Null -> com.volmit.wormholes.src.syndicate$Lorem:
    103:103:void <init>() -> <init>
    115:115:java.lang.Object clone() -> clone
    129:129:boolean equals(java.lang.Object) -> equals
    139:139:java.lang.String toString() -> toString
    103:103:void <init>(com.volmit.wormholes.util.JSONObject$1) -> <init>
com.volmit.wormholes.util.JSONString -> com.volmit.wormholes.src.synergize:
    java.lang.String toJSONString() -> toJSONString
com.volmit.wormholes.util.JSONStringer -> com.volmit.wormholes.src.synthesize:
    64:65:void <init>() -> <init>
    76:76:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONTokener -> com.volmit.wormholes.src.target:
    long character -> es
    boolean eof -> eof
    long index -> ev
    long line -> ew
    char previous -> ey
    java.io.Reader reader -> reader
    boolean usePrevious -> ez
    57:67:void <init>(java.io.Reader) -> <init>
    75:76:void <init>(java.io.InputStream) -> <init>
    85:86:void <init>(java.lang.String) -> <init>
    95:102:void back() -> back
    112:121:int dehexchar(char) -> sit
    125:125:boolean end() -> aB
    135:140:boolean more() -> aC
    151:177:char next() -> next
    189:194:char next(char) -> amet
    208:222:java.lang.String next(int) -> volutpat
    233:237:char nextClean() -> aD
    254:297:java.lang.String nextString(char) -> consectetur
    310:320:java.lang.String nextTo(char) -> adipiscing
    332:342:java.lang.String nextTo(java.lang.String) -> tristique
    355:390:java.lang.Object nextValue() -> aE
    404:422:char skipTo(char) -> elit
    433:433:com.volmit.wormholes.util.JSONException syntaxError(java.lang.String) -> lacinia
    443:443:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONWriter -> com.volmit.wormholes.src.transform:
    int maxdepth -> eA
    boolean comma -> eB
    char mode -> eC
    com.volmit.wormholes.util.JSONObject[] stack -> eD
    int top -> top
    java.io.Writer writer -> writer
    96:102:void <init>(java.io.Writer) -> <init>
    111:129:com.volmit.wormholes.util.JSONWriter append(java.lang.String) -> Duis
    142:148:com.volmit.wormholes.util.JSONWriter array() -> aF
    159:171:com.volmit.wormholes.util.JSONWriter end(char,char) -> Lorem
    181:181:com.volmit.wormholes.util.JSONWriter endArray() -> aG
    191:191:com.volmit.wormholes.util.JSONWriter endObject() -> aH
    203:221:com.volmit.wormholes.util.JSONWriter key(java.lang.String) -> tempor
    235:244:com.volmit.wormholes.util.JSONWriter object() -> aI
    255:268:void pop(char) -> Morbi
    276:282:void push(com.volmit.wormholes.util.JSONObject) -> sit
    293:293:com.volmit.wormholes.util.JSONWriter value(boolean) -> purus
    303:303:com.volmit.wormholes.util.JSONWriter value(double) -> dictum
    313:313:com.volmit.wormholes.util.JSONWriter value(long) -> mi
    325:325:com.volmit.wormholes.util.JSONWriter value(java.lang.Object) -> urna
com.volmit.wormholes.util.Keyed -> com.volmit.wormholes.src.transition:
    java.lang.String value() -> value
com.volmit.wormholes.util.Lang -> com.volmit.wormholes.src.unleash:
    java.lang.String value() -> value
com.volmit.wormholes.util.LineParticleManipulator -> com.volmit.wormholes.src.utilize:
    13:13:void <init>() -> <init>
    30:41:void play(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> Lorem
com.volmit.wormholes.util.ListTag -> com.volmit.wormholes.src.visualize:
    java.lang.Class type -> type
    java.util.List value -> value
    63:66:void <init>(java.lang.String,java.lang.Class,java.util.List) -> <init>
    73:73:java.lang.Class getType() -> getType
    78:78:java.util.List getValue() -> getValue
    83:94:java.lang.String toString() -> toString
    44:44:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ListViewWindow -> com.volmit.wormholes.src.whiteboard:
    com.volmit.wormholes.util.GList binds -> eE
    16:19:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    23:25:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.LongTag -> com.volmit.wormholes.src.B2B:
    long value -> value
    54:56:void <init>(java.lang.String,long) -> <init>
    60:60:java.lang.Long getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.M -> com.volmit.wormholes.src.B2C:
    int precision -> eF
    int modulus -> eG
    float[] sin -> eH
    18:18:void <init>() -> <init>
    35:38:double evaluate(java.lang.String) -> eget
    50:55:boolean r(java.lang.Double) -> ipsum
    77:87:double evaluate(java.lang.String,java.lang.Double[]) -> Lorem
    92:115:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> Lorem
    130:130:double tps(long,int) -> amet
    142:142:double ticksFromNS(long) -> euismod
    154:180:java.lang.String toRoman(int) -> rhoncus
    194:206:java.lang.String repeat(java.lang.String,int) -> repeat
    211:211:int rand(int,int) -> elit
    223:295:int fromRoman(java.lang.String) -> semper
    305:305:long ns() -> aJ
    315:315:long ms() -> aK
    327:334:double avg(com.volmit.wormholes.util.GList) -> pulvinar
    347:351:void lim(com.volmit.wormholes.util.GList,int) -> ipsum
    364:364:double distance(org.bukkit.Location,org.bukkit.Location) -> sit
    382:382:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> ipsum
    394:394:float sin(float) -> sin
    406:406:float cos(float) -> cos
    418:428:int max(int[]) -> max
    440:450:int min(int[]) -> min
    466:466:boolean within(int,int,int) -> amet
    479:479:float sinLookup(int) -> sapien
    22:475:void <clinit>() -> <clinit>
com.volmit.wormholes.util.MFADistortion -> com.volmit.wormholes.src.back:
    int span -> eI
    float to -> eJ
    9:12:void <init>(int,float) -> <init>
    17:37:com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.MSound -> com.volmit.wormholes.src.end:
    com.volmit.wormholes.util.MSound AMBIENCE_CAVE -> eK
    com.volmit.wormholes.util.MSound AMBIENCE_RAIN -> eL
    com.volmit.wormholes.util.MSound AMBIENCE_THUNDER -> eM
    com.volmit.wormholes.util.MSound ANVIL_BREAK -> eN
    com.volmit.wormholes.util.MSound ANVIL_LAND -> eO
    com.volmit.wormholes.util.MSound ANVIL_USE -> eP
    com.volmit.wormholes.util.MSound ARROW_HIT -> eQ
    com.volmit.wormholes.util.MSound BURP -> eR
    com.volmit.wormholes.util.MSound CHEST_CLOSE -> eS
    com.volmit.wormholes.util.MSound CHEST_OPEN -> eT
    com.volmit.wormholes.util.MSound CLICK -> eU
    com.volmit.wormholes.util.MSound DOOR_CLOSE -> eV
    com.volmit.wormholes.util.MSound DOOR_OPEN -> eW
    com.volmit.wormholes.util.MSound DRINK -> eX
    com.volmit.wormholes.util.MSound EAT -> eY
    com.volmit.wormholes.util.MSound EXPLODE -> eZ
    com.volmit.wormholes.util.MSound FALL_BIG -> fa
    com.volmit.wormholes.util.MSound FALL_SMALL -> fb
    com.volmit.wormholes.util.MSound FIRE -> fc
    com.volmit.wormholes.util.MSound FIRE_IGNITE -> fd
    com.volmit.wormholes.util.MSound FIZZ -> fe
    com.volmit.wormholes.util.MSound FUSE -> ff
    com.volmit.wormholes.util.MSound GLASS -> fg
    com.volmit.wormholes.util.MSound HURT_FLESH -> fh
    com.volmit.wormholes.util.MSound ITEM_BREAK -> fi
    com.volmit.wormholes.util.MSound ITEM_PICKUP -> fj
    com.volmit.wormholes.util.MSound LAVA -> fk
    com.volmit.wormholes.util.MSound LAVA_POP -> fl
    com.volmit.wormholes.util.MSound LEVEL_UP -> fm
    com.volmit.wormholes.util.MSound MINECART_BASE -> fn
    com.volmit.wormholes.util.MSound MINECART_INSIDE -> fo
    com.volmit.wormholes.util.MSound NOTE_BASS -> fp
    com.volmit.wormholes.util.MSound NOTE_PIANO -> fq
    com.volmit.wormholes.util.MSound NOTE_BASS_DRUM -> fr
    com.volmit.wormholes.util.MSound NOTE_STICKS -> fs
    com.volmit.wormholes.util.MSound NOTE_BASS_GUITAR -> ft
    com.volmit.wormholes.util.MSound NOTE_SNARE_DRUM -> fu
    com.volmit.wormholes.util.MSound NOTE_PLING -> fv
    com.volmit.wormholes.util.MSound ORB_PICKUP -> fw
    com.volmit.wormholes.util.MSound PISTON_EXTEND -> fx
    com.volmit.wormholes.util.MSound PISTON_RETRACT -> fy
    com.volmit.wormholes.util.MSound PORTAL -> fz
    com.volmit.wormholes.util.MSound PORTAL_TRAVEL -> fA
    com.volmit.wormholes.util.MSound PORTAL_TRIGGER -> fB
    com.volmit.wormholes.util.MSound SHOOT_ARROW -> fC
    com.volmit.wormholes.util.MSound SPLASH -> fD
    com.volmit.wormholes.util.MSound SPLASH2 -> fE
    com.volmit.wormholes.util.MSound STEP_GRASS -> fF
    com.volmit.wormholes.util.MSound STEP_GRAVEL -> fG
    com.volmit.wormholes.util.MSound STEP_LADDER -> fH
    com.volmit.wormholes.util.MSound STEP_SAND -> fI
    com.volmit.wormholes.util.MSound STEP_SNOW -> fJ
    com.volmit.wormholes.util.MSound STEP_STONE -> fK
    com.volmit.wormholes.util.MSound STEP_WOOD -> fL
    com.volmit.wormholes.util.MSound STEP_WOOL -> fM
    com.volmit.wormholes.util.MSound SWIM -> fN
    com.volmit.wormholes.util.MSound WATER -> fO
    com.volmit.wormholes.util.MSound WOOD_CLICK -> fP
    com.volmit.wormholes.util.MSound BAT_DEATH -> fQ
    com.volmit.wormholes.util.MSound BAT_HURT -> fR
    com.volmit.wormholes.util.MSound BAT_IDLE -> fS
    com.volmit.wormholes.util.MSound BAT_LOOP -> fT
    com.volmit.wormholes.util.MSound BAT_TAKEOFF -> fU
    com.volmit.wormholes.util.MSound BLAZE_BREATH -> fV
    com.volmit.wormholes.util.MSound BLAZE_DEATH -> fW
    com.volmit.wormholes.util.MSound BLAZE_HIT -> fX
    com.volmit.wormholes.util.MSound CAT_HISS -> fY
    com.volmit.wormholes.util.MSound CAT_HIT -> fZ
    com.volmit.wormholes.util.MSound CAT_MEOW -> ga
    com.volmit.wormholes.util.MSound CAT_PURR -> gb
    com.volmit.wormholes.util.MSound CAT_PURREOW -> gc
    com.volmit.wormholes.util.MSound CHICKEN_IDLE -> gd
    com.volmit.wormholes.util.MSound CHICKEN_HURT -> ge
    com.volmit.wormholes.util.MSound CHICKEN_EGG_POP -> gf
    com.volmit.wormholes.util.MSound CHICKEN_WALK -> gg
    com.volmit.wormholes.util.MSound COW_IDLE -> gh
    com.volmit.wormholes.util.MSound COW_HURT -> gi
    com.volmit.wormholes.util.MSound COW_WALK -> gj
    com.volmit.wormholes.util.MSound CREEPER_HISS -> gk
    com.volmit.wormholes.util.MSound CREEPER_DEATH -> gl
    com.volmit.wormholes.util.MSound ENDERDRAGON_DEATH -> gm
    com.volmit.wormholes.util.MSound ENDERDRAGON_GROWL -> gn
    com.volmit.wormholes.util.MSound ENDERDRAGON_HIT -> go
    com.volmit.wormholes.util.MSound ENDERDRAGON_WINGS -> gp
    com.volmit.wormholes.util.MSound ENDERMAN_DEATH -> gq
    com.volmit.wormholes.util.MSound ENDERMAN_HIT -> gr
    com.volmit.wormholes.util.MSound ENDERMAN_IDLE -> gs
    com.volmit.wormholes.util.MSound ENDERMAN_TELEPORT -> gt
    com.volmit.wormholes.util.MSound ENDERMAN_SCREAM -> gu
    com.volmit.wormholes.util.MSound ENDERMAN_STARE -> gv
    com.volmit.wormholes.util.MSound GHAST_SCREAM -> gw
    com.volmit.wormholes.util.MSound GHAST_SCREAM2 -> gx
    com.volmit.wormholes.util.MSound GHAST_CHARGE -> gy
    com.volmit.wormholes.util.MSound GHAST_DEATH -> gz
    com.volmit.wormholes.util.MSound GHAST_FIREBALL -> gA
    com.volmit.wormholes.util.MSound GHAST_MOAN -> gB
    com.volmit.wormholes.util.MSound IRONGOLEM_DEATH -> gC
    com.volmit.wormholes.util.MSound IRONGOLEM_HIT -> gD
    com.volmit.wormholes.util.MSound IRONGOLEM_THROW -> gE
    com.volmit.wormholes.util.MSound IRONGOLEM_WALK -> gF
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK -> gG
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK2 -> gH
    com.volmit.wormholes.util.MSound MAGMACUBE_JUMP -> gI
    com.volmit.wormholes.util.MSound PIG_IDLE -> gJ
    com.volmit.wormholes.util.MSound PIG_DEATH -> gK
    com.volmit.wormholes.util.MSound PIG_WALK -> gL
    com.volmit.wormholes.util.MSound SHEEP_IDLE -> gM
    com.volmit.wormholes.util.MSound SHEEP_SHEAR -> gN
    com.volmit.wormholes.util.MSound SHEEP_WALK -> gO
    com.volmit.wormholes.util.MSound SILVERFISH_HIT -> gP
    com.volmit.wormholes.util.MSound SILVERFISH_KILL -> gQ
    com.volmit.wormholes.util.MSound SILVERFISH_IDLE -> gR
    com.volmit.wormholes.util.MSound SILVERFISH_WALK -> gS
    com.volmit.wormholes.util.MSound SKELETON_IDLE -> gT
    com.volmit.wormholes.util.MSound SKELETON_DEATH -> gU
    com.volmit.wormholes.util.MSound SKELETON_HURT -> gV
    com.volmit.wormholes.util.MSound SKELETON_WALK -> gW
    com.volmit.wormholes.util.MSound SLIME_ATTACK -> gX
    com.volmit.wormholes.util.MSound SLIME_WALK -> gY
    com.volmit.wormholes.util.MSound SLIME_WALK2 -> gZ
    com.volmit.wormholes.util.MSound SPIDER_IDLE -> ha
    com.volmit.wormholes.util.MSound SPIDER_DEATH -> hb
    com.volmit.wormholes.util.MSound SPIDER_WALK -> hc
    com.volmit.wormholes.util.MSound WITHER_DEATH -> hd
    com.volmit.wormholes.util.MSound WITHER_HURT -> he
    com.volmit.wormholes.util.MSound WITHER_IDLE -> hf
    com.volmit.wormholes.util.MSound WITHER_SHOOT -> hg
    com.volmit.wormholes.util.MSound WITHER_SPAWN -> hh
    com.volmit.wormholes.util.MSound WOLF_BARK -> hi
    com.volmit.wormholes.util.MSound WOLF_DEATH -> hj
    com.volmit.wormholes.util.MSound WOLF_GROWL -> hk
    com.volmit.wormholes.util.MSound WOLF_HOWL -> hl
    com.volmit.wormholes.util.MSound WOLF_HURT -> hm
    com.volmit.wormholes.util.MSound WOLF_PANT -> hn
    com.volmit.wormholes.util.MSound WOLF_SHAKE -> ho
    com.volmit.wormholes.util.MSound WOLF_WALK -> hp
    com.volmit.wormholes.util.MSound WOLF_WHINE -> hq
    com.volmit.wormholes.util.MSound ZOMBIE_METAL -> hr
    com.volmit.wormholes.util.MSound ZOMBIE_WOOD -> hs
    com.volmit.wormholes.util.MSound ZOMBIE_WOODBREAK -> ht
    com.volmit.wormholes.util.MSound ZOMBIE_IDLE -> hu
    com.volmit.wormholes.util.MSound ZOMBIE_DEATH -> hv
    com.volmit.wormholes.util.MSound ZOMBIE_HURT -> hw
    com.volmit.wormholes.util.MSound ZOMBIE_INFECT -> hx
    com.volmit.wormholes.util.MSound ZOMBIE_UNFECT -> hy
    com.volmit.wormholes.util.MSound ZOMBIE_REMEDY -> hz
    com.volmit.wormholes.util.MSound ZOMBIE_WALK -> hA
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_IDLE -> hB
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_ANGRY -> hC
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_DEATH -> hD
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_HURT -> hE
    com.volmit.wormholes.util.MSound DIG_WOOL -> hF
    com.volmit.wormholes.util.MSound DIG_GRASS -> hG
    com.volmit.wormholes.util.MSound DIG_GRAVEL -> hH
    com.volmit.wormholes.util.MSound DIG_SAND -> hI
    com.volmit.wormholes.util.MSound DIG_SNOW -> hJ
    com.volmit.wormholes.util.MSound DIG_STONE -> hK
    com.volmit.wormholes.util.MSound DIG_WOOD -> hL
    com.volmit.wormholes.util.MSound FIREWORK_BLAST -> hM
    com.volmit.wormholes.util.MSound FIREWORK_BLAST2 -> hN
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST -> hO
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST2 -> hP
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE -> hQ
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE2 -> hR
    com.volmit.wormholes.util.MSound FIREWORK_LAUNCH -> hS
    com.volmit.wormholes.util.MSound SUCCESSFUL_HIT -> hT
    com.volmit.wormholes.util.MSound HORSE_ANGRY -> hU
    com.volmit.wormholes.util.MSound HORSE_ARMOR -> hV
    com.volmit.wormholes.util.MSound HORSE_BREATHE -> hW
    com.volmit.wormholes.util.MSound HORSE_DEATH -> hX
    com.volmit.wormholes.util.MSound HORSE_GALLOP -> hY
    com.volmit.wormholes.util.MSound HORSE_HIT -> hZ
    com.volmit.wormholes.util.MSound HORSE_IDLE -> ia
    com.volmit.wormholes.util.MSound HORSE_JUMP -> ib
    com.volmit.wormholes.util.MSound HORSE_LAND -> ic
    com.volmit.wormholes.util.MSound HORSE_SADDLE -> ie
    com.volmit.wormholes.util.MSound HORSE_SOFT -> if
    com.volmit.wormholes.util.MSound HORSE_WOOD -> ig
    com.volmit.wormholes.util.MSound DONKEY_ANGRY -> ih
    com.volmit.wormholes.util.MSound DONKEY_DEATH -> ii
    com.volmit.wormholes.util.MSound DONKEY_HIT -> ij
    com.volmit.wormholes.util.MSound DONKEY_IDLE -> ik
    com.volmit.wormholes.util.MSound HORSE_SKELETON_DEATH -> il
    com.volmit.wormholes.util.MSound HORSE_SKELETON_HIT -> im
    com.volmit.wormholes.util.MSound HORSE_SKELETON_IDLE -> io
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_DEATH -> ip
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_HIT -> iq
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_IDLE -> ir
    com.volmit.wormholes.util.MSound VILLAGER_DEATH -> is
    com.volmit.wormholes.util.MSound VILLAGER_HAGGLE -> it
    com.volmit.wormholes.util.MSound VILLAGER_HIT -> iu
    com.volmit.wormholes.util.MSound VILLAGER_IDLE -> iv
    com.volmit.wormholes.util.MSound VILLAGER_NO -> iw
    com.volmit.wormholes.util.MSound VILLAGER_YES -> ix
    java.lang.String pre19sound -> iy
    java.lang.String post19sound -> iz
    org.bukkit.Sound resolvedSound -> iA
    com.volmit.wormholes.util.MSound[] $VALUES -> iB
    8:8:com.volmit.wormholes.util.MSound[] values() -> values
    8:8:com.volmit.wormholes.util.MSound valueOf(java.lang.String) -> valueOf
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:230:org.bukkit.Sound bukkitSound() -> aL
    8:203:void <clinit>() -> <clinit>
com.volmit.wormholes.util.MaterialBlock -> com.volmit.wormholes.src.best:
    org.bukkit.Material material -> iC
    java.lang.Byte data -> iD
    26:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    32:35:void <init>(org.bukkit.Material) -> <init>
    38:41:void <init>(org.bukkit.Location) -> <init>
    44:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> aM
    66:67:void setData(java.lang.Byte) -> ipsum
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.MessageBuilder -> com.volmit.wormholes.src.of:
    java.lang.String tag -> tag
    java.lang.String hoverText -> iE
    20:23:void <init>() -> <init>
    32:35:void <init>(com.volmit.wormholes.util.TagProvider) -> <init>
    47:78:void message(org.bukkit.command.CommandSender,java.lang.String) -> Lorem
    89:90:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String) -> aliquam
    104:107:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String,java.lang.String) -> elit
    112:112:java.lang.String getHoverText() -> aN
    117:118:void setHoverText(java.lang.String) -> lectus
    122:122:java.lang.String getTag() -> getTag
com.volmit.wormholes.util.MetaObject -> com.volmit.wormholes.src.breed:
    void write(com.volmit.wormholes.util.DataCluster,java.lang.String) -> ipsum
    void read(com.volmit.wormholes.util.DataCluster,java.lang.String) -> dolor
com.volmit.wormholes.util.MultiDataHandler -> com.volmit.wormholes.src.bleeding:
    java.lang.Object get(java.lang.Object) -> get
    void load(java.lang.Object) -> sit
    void save(java.lang.Object) -> save
    java.lang.Object onLoad(java.lang.Object) -> adipiscing
    void onSave(java.lang.Object) -> consectetur
    boolean contains(java.lang.Object) -> contains
    com.volmit.wormholes.util.GMap getCache() -> vortals
    void saveAll() -> saveAll
com.volmit.wormholes.util.NBTConstants -> com.volmit.wormholes.src.edge:
    java.nio.charset.Charset CHARSET -> CHARSET
    int TYPE_END -> TYPE_END
    int TYPE_BYTE -> TYPE_BYTE
    int TYPE_SHORT -> TYPE_SHORT
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_BYTE_ARRAY -> TYPE_BYTE_ARRAY
    int TYPE_STRING -> TYPE_STRING
    int TYPE_LIST -> TYPE_LIST
    int TYPE_COMPOUND -> TYPE_COMPOUND
    int TYPE_BOOLEAN -> iF
    69:71:void <init>() -> <init>
    48:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.NBTInputStream -> com.volmit.wormholes.src.bricks:
    java.io.DataInputStream is -> iG
    70:72:void <init>(java.io.InputStream) -> <init>
    80:80:com.volmit.wormholes.util.Tag readTag() -> aO
    90:102:com.volmit.wormholes.util.Tag readTag(int) -> orci
    114:172:com.volmit.wormholes.util.Tag readTagPayload(int,java.lang.String,int) -> Lorem
    178:179:void close() -> close
com.volmit.wormholes.util.NBTOutputStream -> com.volmit.wormholes.src.and:
    java.io.DataOutputStream os -> iH
    67:69:void <init>(java.io.OutputStream) -> <init>
    77:90:void writeTag(com.volmit.wormholes.util.Tag) -> Lorem
    98:139:void writeTagPayload(com.volmit.wormholes.util.Tag) -> ipsum
    147:148:void writeByteTagPayload(com.volmit.wormholes.util.ByteTag) -> Lorem
    156:159:void writeByteArrayTagPayload(com.volmit.wormholes.util.ByteArrayTag) -> Lorem
    167:171:void writeCompoundTagPayload(com.volmit.wormholes.util.CompoundTag) -> Lorem
    179:188:void writeListTagPayload(com.volmit.wormholes.util.ListTag) -> Lorem
    196:199:void writeStringTagPayload(com.volmit.wormholes.util.StringTag) -> Lorem
    207:208:void writeDoubleTagPayload(com.volmit.wormholes.util.DoubleTag) -> Lorem
    216:217:void writeBooleanTagPayload(com.volmit.wormholes.util.BooleanTag) -> Lorem
    225:226:void writeFloatTagPayload(com.volmit.wormholes.util.FloatTag) -> Lorem
    234:235:void writeLongTagPayload(com.volmit.wormholes.util.LongTag) -> Lorem
    243:244:void writeIntTagPayload(com.volmit.wormholes.util.IntTag) -> Lorem
    252:253:void writeShortTagPayload(com.volmit.wormholes.util.ShortTag) -> Lorem
    262:262:void writeEndTagPayload(com.volmit.wormholes.util.EndTag) -> Lorem
    266:267:void close() -> close
com.volmit.wormholes.util.NBTUtils -> com.volmit.wormholes.src.clicks:
    47:97:java.lang.String getTypeName(java.lang.Class) -> getTypeName
    112:162:int getTypeCode(java.lang.Class) -> getTypeCode
    177:204:java.lang.Class getTypeClass(int) -> getTypeClass
    212:214:void <init>() -> <init>
com.volmit.wormholes.util.NMSClass -> com.volmit.wormholes.src.mortar:
    boolean init -> iI
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> iJ
    java.lang.Class IChatBaseComponent -> iK
    java.lang.Class ChatSerializer -> iL
    java.lang.Class PacketPlayOutPlayerInfo -> iM
    java.lang.Class PlayerInfoData -> iN
    java.lang.Class EnumPlayerInfoAction -> iO
    java.lang.Class GameProfile -> iP
    java.lang.Class EnumGamemode -> iQ
    java.lang.Class TileEntitySkull -> iR
    java.lang.Class LoadingCache -> iS
    8:8:void <init>() -> <init>
    11:130:void <clinit>() -> <clinit>
com.volmit.wormholes.util.NMSX -> com.volmit.wormholes.src.collaborative:
    com.volmit.wormholes.util.NMSX instance -> iT
    boolean useOldMethods -> iU
    java.lang.String nmsver -> iV
    com.volmit.wormholes.util.GList colors -> iW
    29:29:void <init>() -> <init>
    38:40:java.lang.String getVersion() -> getVersion
    47:55:java.lang.Object serializeChat(java.lang.String) -> consequat
    66:71:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> ipsum
    86:104:void setChestState(org.bukkit.Location,boolean) -> Lorem
    108:122:java.lang.Class getCraftClass(java.lang.String) -> neque
    133:135:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> Lorem
    147:161:java.lang.Class getCBNMSClass(java.lang.String) -> sagittis
    173:187:java.lang.Class getOBCClass(java.lang.String) -> lorem
    194:202:java.lang.Object getHandle(java.lang.Object) -> Proin
    209:219:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    224:233:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    238:254:boolean ClassListEqual(java.lang.Class[],java.lang.Class[]) -> Lorem
    269:278:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> Lorem
    294:303:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    317:318:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    330:331:void launchFirework(org.bukkit.Location,org.bukkit.Color) -> Lorem
    344:345:void playRecord(org.bukkit.entity.Player,org.bukkit.Material) -> Lorem
    360:361:void playRecord(org.bukkit.entity.Player,org.bukkit.Location,org.bukkit.Material) -> Lorem
    371:372:void launchFirework(org.bukkit.Location) -> Proin
    387:391:void spreadParticles(org.bukkit.Location,org.bukkit.Material,int) -> Lorem
    406:410:void breakParticles(org.bukkit.Location,org.bukkit.Material,int) -> ipsum
    422:432:java.lang.Class getNMSClass(java.lang.String) -> vel
    447:452:java.lang.Class getPacket(java.lang.String) -> Quisque
    464:465:void setWeatherDownfall(org.bukkit.entity.Player) -> odio
    475:476:void setWeatherClear(org.bukkit.entity.Player) -> a
    486:487:void resetWeather(org.bukkit.entity.Player) -> facilisis
    499:500:void setTime(org.bukkit.entity.Player,long) -> Lorem
    510:511:void resetTime(org.bukkit.entity.Player) -> In
    525:525:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> ipsum
    537:537:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location) -> ac
    549:549:long getPlayerTime(org.bukkit.entity.Player) -> hac
    575:612:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> Lorem
    622:623:void clearTitle(org.bukkit.entity.Player) -> habitasse
    637:669:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> ipsum
    681:736:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> Lorem
    747:747:java.lang.String getEntityName(org.bukkit.entity.Entity) -> non
    752:752:java.lang.String getNBTV() -> aP
    762:762:java.lang.String getBukkitVersion() -> getBukkitVersion
    772:772:java.lang.String nmsPackage() -> aQ
    782:782:java.lang.String craftPackage() -> aR
    795:808:void showEnd(org.bukkit.entity.Player) -> platea
    820:832:void showDemo(org.bukkit.entity.Player) -> dictumst
    846:858:void showBrightness(org.bukkit.entity.Player,float) -> Lorem
    872:884:void showWeather(org.bukkit.entity.Player,float) -> ipsum
    890:900:java.lang.Object getBlockPosition(org.bukkit.Location) -> enim
    907:920:void showBlockBreakAnimation(org.bukkit.entity.Player,org.bukkit.Location,int) -> Lorem
    932:944:void showControls(org.bukkit.entity.Player) -> Nam
    958:970:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> Lorem
    983:996:int ping(org.bukkit.entity.Player) -> metus
    1001:1027:void <clinit>() -> <clinit>
com.volmit.wormholes.util.P -> com.volmit.wormholes.src.compelling:
    22:22:void <init>() -> <init>
    33:33:boolean isOnline(java.lang.String) -> congue
    45:45:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    55:55:org.bukkit.entity.Player getAnyPlayer() -> aS
    65:65:boolean isAnyOnline() -> aT
    77:77:com.volmit.wormholes.util.GList inWorld(org.bukkit.World) -> Lorem
    89:101:com.volmit.wormholes.util.GList inChunk(org.bukkit.Chunk) -> dolor
    115:115:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,double) -> Lorem
    129:129:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,int) -> Lorem
    140:141:void disable(org.bukkit.entity.Player) -> nisl
    151:152:void enable(org.bukkit.entity.Player) -> magna
    165:165:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> dolor
    179:179:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> sit
    191:192:boolean hasInventoryOpen(org.bukkit.entity.Player) -> tortor
    208:240:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> Lorem
    254:263:int getTotalExperience(org.bukkit.entity.Player) -> tempus
    278:286:void setTotalExperience(org.bukkit.entity.Player,int) -> amet
    297:297:boolean canFindPlayer(java.lang.String) -> vitae
    309:325:org.bukkit.entity.Player findPlayer(java.lang.String) -> ornare
    335:342:com.volmit.wormholes.util.GList onlinePlayers() -> aU
    354:354:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> sem
    365:368:void clear(org.bukkit.entity.Player) -> sed
    378:382:void clearEffects(org.bukkit.entity.Player) -> volutpat
    394:395:void heal(org.bukkit.entity.Player,double) -> Lorem
    405:406:void heal(org.bukkit.entity.Player) -> rhoncus
    416:417:void resetMaxHeath(org.bukkit.entity.Player) -> sapien
    427:428:void resetHunger(org.bukkit.entity.Player) -> orci
    438:439:void kill(org.bukkit.entity.Player) -> ligula
    450:450:com.volmit.wormholes.util.Shape getShape(org.bukkit.entity.Player) -> Sed
    462:462:org.bukkit.Location getHand(org.bukkit.entity.Player) -> ultrices
    478:487:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> Lorem
com.volmit.wormholes.util.P$1 -> com.volmit.wormholes.src.compelling$1:
    90:90:void <init>() -> <init>
    94:99:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    90:90:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.P$2 -> com.volmit.wormholes.src.compelling$2:
    java.lang.Double val$doff -> iX
    org.bukkit.entity.Player val$e -> iY
    org.bukkit.entity.Entity[] val$result -> iZ
    222:222:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    226:237:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.util.PE -> com.volmit.wormholes.src.cross:
    com.volmit.wormholes.util.PE ABSORPTION -> ja
    com.volmit.wormholes.util.PE BLINDNESS -> jb
    com.volmit.wormholes.util.PE CONFUSION -> jc
    com.volmit.wormholes.util.PE DAMAGE_RESISTANCE -> jd
    com.volmit.wormholes.util.PE FAST_DIGGING -> je
    com.volmit.wormholes.util.PE FIRE_RESISTANCE -> jf
    com.volmit.wormholes.util.PE GLOWING -> jg
    com.volmit.wormholes.util.PE HARM -> jh
    com.volmit.wormholes.util.PE HEAL -> ji
    com.volmit.wormholes.util.PE HEALTH_BOOST -> jj
    com.volmit.wormholes.util.PE HUNGER -> jk
    com.volmit.wormholes.util.PE INCREASE_DAMAGE -> jl
    com.volmit.wormholes.util.PE INVISIBILITY -> jm
    com.volmit.wormholes.util.PE JUMP -> jn
    com.volmit.wormholes.util.PE LEVITATION -> jo
    com.volmit.wormholes.util.PE LUCK -> jp
    com.volmit.wormholes.util.PE NIGHT_VISION -> jq
    com.volmit.wormholes.util.PE POISON -> jr
    com.volmit.wormholes.util.PE REGENERATION -> js
    com.volmit.wormholes.util.PE SATURATION -> jt
    com.volmit.wormholes.util.PE SLOW -> ju
    com.volmit.wormholes.util.PE SLOW_DIGGING -> jv
    com.volmit.wormholes.util.PE SPEED -> jw
    com.volmit.wormholes.util.PE UNLUCK -> jx
    com.volmit.wormholes.util.PE WATER_BREATHING -> jy
    com.volmit.wormholes.util.PE WEAKNESS -> jz
    com.volmit.wormholes.util.PE WITHER -> jA
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:com.volmit.wormholes.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> Lorem
    144:144:com.volmit.wormholes.util.PE d(int) -> ligula
    156:156:com.volmit.wormholes.util.PE a(int) -> Sed
    166:166:org.bukkit.potion.PotionEffect c() -> aV
    177:178:void c(org.bukkit.entity.LivingEntity) -> Lorem
    182:183:void crm(org.bukkit.entity.LivingEntity) -> ipsum
    187:188:void rm(org.bukkit.entity.LivingEntity) -> dolor
    192:215:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PackageType -> com.volmit.wormholes.src.platform:
    com.volmit.wormholes.util.PackageType STRING -> jB
    com.volmit.wormholes.util.PackageType SHORT -> jC
    com.volmit.wormholes.util.PackageType LONG -> jD
    com.volmit.wormholes.util.PackageType INTEGER -> jE
    com.volmit.wormholes.util.PackageType FLOAT -> jF
    com.volmit.wormholes.util.PackageType DOUBLE -> jG
    com.volmit.wormholes.util.PackageType CHAR -> jH
    com.volmit.wormholes.util.PackageType BYTES -> jI
    com.volmit.wormholes.util.PackageType BYTE -> jJ
    com.volmit.wormholes.util.PackageType BOOLEAN -> jK
    com.volmit.wormholes.util.PackageType DATA_PACK -> jL
    byte type -> type
    java.lang.Class clazz -> clazz
    com.volmit.wormholes.util.PackageType[] $VALUES -> jM
    3:3:com.volmit.wormholes.util.PackageType[] values() -> values
    3:3:com.volmit.wormholes.util.PackageType valueOf(java.lang.String) -> valueOf
    21:24:void <init>(java.lang.String,int,byte,java.lang.Class) -> <init>
    28:28:byte getType() -> getType
    33:33:java.lang.Class getClazz() -> getClazz
    40:48:com.volmit.wormholes.util.DataHandle getInstance() -> aW
    53:61:com.volmit.wormholes.util.PackageType getType(byte) -> amet
    66:73:com.volmit.wormholes.util.DataHandle getInstance(byte) -> consectetur
    3:15:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PacketWrapper -> com.volmit.wormholes.src.media:
    23:23:void <init>() -> <init>
    27:27:void onEnable() -> onEnable
com.volmit.wormholes.util.ParallelPoolManager -> com.volmit.wormholes.src.customized:
    com.volmit.wormholes.util.QueueMode mode -> jN
    com.volmit.wormholes.util.GList threads -> jO
    int next -> jP
    int threadCount -> jQ
    java.util.Queue squeue -> jR
    java.lang.String key -> key
    com.volmit.wormholes.util.ThreadInformation info -> jS
    17:18:void syncQueue(com.volmit.wormholes.util.Execution) -> Lorem
    22:26:void tickSyncQueue() -> aX
    30:33:void <init>(java.lang.String,int,com.volmit.wormholes.util.QueueMode) -> <init>
    36:53:void <init>(int,com.volmit.wormholes.util.QueueMode) -> <init>
    57:72:long lock() -> aY
    77:78:void start() -> start
    82:86:void shutdown() -> shutdown
    90:91:void <init>(int) -> <init>
    95:96:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    100:100:int getSize() -> getSize
    105:112:int getQueueSize() -> aZ
    117:117:com.volmit.wormholes.util.ParallelThread[] getThreads() -> ba
    122:143:void updateThreadInformation() -> bb
    147:179:com.volmit.wormholes.util.ParallelThread nextThread() -> bc
    184:190:void createThreads(int) -> ultrices
    194:194:com.volmit.wormholes.util.QueueMode getMode() -> bd
    199:199:int getNext() -> be
    204:204:int getThreadCount() -> getThreadCount
    209:209:java.util.Queue getSqueue() -> bf
    214:214:java.lang.String getKey() -> getKey
    219:219:com.volmit.wormholes.util.ThreadInformation getAverageInfo() -> bg
com.volmit.wormholes.util.ParallelPoolManager$1 -> com.volmit.wormholes.src.customized$1:
    int[] $SwitchMap$com$volmit$wormholes$util$QueueMode -> jT
    156:156:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParallelThread -> com.volmit.wormholes.src.cutting:
    java.util.Queue queue -> jU
    com.volmit.wormholes.util.ThreadInformation info -> jS
    12:17:void <init>(java.lang.String,int) -> <init>
    22:54:void run() -> run
    58:62:void conditionallySleep(double) -> Vestibulum
    68:75:void execute(com.volmit.wormholes.util.Execution) -> dolor
    79:89:void execute() -> execute
    93:94:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    98:98:java.util.Queue getQueue() -> bh
    103:103:com.volmit.wormholes.util.ThreadInformation getInfo() -> bi
com.volmit.wormholes.util.ParameterAdapter -> com.volmit.wormholes.src.distributed:
    11:13:void <init>() -> <init>
    24:29:java.lang.String adapt(java.lang.String) -> Integer
    java.lang.String onParameterRequested(java.lang.String) -> commodo
com.volmit.wormholes.util.ParticleEffect -> com.volmit.wormholes.src.dot:
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_NORMAL -> jV
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_LARGE -> jW
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_HUGE -> jX
    com.volmit.wormholes.util.ParticleEffect FIREWORKS_SPARK -> jY
    com.volmit.wormholes.util.ParticleEffect WATER_BUBBLE -> jZ
    com.volmit.wormholes.util.ParticleEffect WATER_SPLASH -> ka
    com.volmit.wormholes.util.ParticleEffect WATER_WAKE -> kb
    com.volmit.wormholes.util.ParticleEffect SUSPENDED -> kc
    com.volmit.wormholes.util.ParticleEffect SUSPENDED_DEPTH -> kd
    com.volmit.wormholes.util.ParticleEffect CRIT -> ke
    com.volmit.wormholes.util.ParticleEffect CRIT_MAGIC -> kf
    com.volmit.wormholes.util.ParticleEffect SMOKE_NORMAL -> kg
    com.volmit.wormholes.util.ParticleEffect SMOKE_LARGE -> kh
    com.volmit.wormholes.util.ParticleEffect SPELL -> ki
    com.volmit.wormholes.util.ParticleEffect SPELL_INSTANT -> kj
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB -> kk
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB_AMBIENT -> kl
    com.volmit.wormholes.util.ParticleEffect SPELL_WITCH -> km
    com.volmit.wormholes.util.ParticleEffect DRIP_WATER -> kn
    com.volmit.wormholes.util.ParticleEffect DRIP_LAVA -> ko
    com.volmit.wormholes.util.ParticleEffect VILLAGER_ANGRY -> kp
    com.volmit.wormholes.util.ParticleEffect VILLAGER_HAPPY -> kq
    com.volmit.wormholes.util.ParticleEffect TOWN_AURA -> kr
    com.volmit.wormholes.util.ParticleEffect NOTE -> ks
    com.volmit.wormholes.util.ParticleEffect PORTAL -> kt
    com.volmit.wormholes.util.ParticleEffect ENCHANTMENT_TABLE -> ku
    com.volmit.wormholes.util.ParticleEffect FLAME -> kv
    com.volmit.wormholes.util.ParticleEffect LAVA -> kw
    com.volmit.wormholes.util.ParticleEffect FOOTSTEP -> kx
    com.volmit.wormholes.util.ParticleEffect CLOUD -> ky
    com.volmit.wormholes.util.ParticleEffect REDSTONE -> kz
    com.volmit.wormholes.util.ParticleEffect SNOWBALL -> kA
    com.volmit.wormholes.util.ParticleEffect SNOW_SHOVEL -> kB
    com.volmit.wormholes.util.ParticleEffect SLIME -> kC
    com.volmit.wormholes.util.ParticleEffect HEART -> kD
    com.volmit.wormholes.util.ParticleEffect BARRIER -> kE
    com.volmit.wormholes.util.ParticleEffect ITEM_CRACK -> kF
    com.volmit.wormholes.util.ParticleEffect BLOCK_CRACK -> kG
    com.volmit.wormholes.util.ParticleEffect BLOCK_DUST -> kH
    com.volmit.wormholes.util.ParticleEffect WATER_DROP -> kI
    com.volmit.wormholes.util.ParticleEffect ITEM_TAKE -> kJ
    com.volmit.wormholes.util.ParticleEffect MOB_APPEARANCE -> kK
    com.volmit.wormholes.util.ParticleEffect DRAGON_BREATH -> kL
    com.volmit.wormholes.util.ParticleEffect END_ROD -> kM
    com.volmit.wormholes.util.ParticleEffect DAMAGE_INDICATOR -> kN
    com.volmit.wormholes.util.ParticleEffect SWEEP_ATTACK -> kO
    java.util.Map NAME_MAP -> kP
    java.util.Map ID_MAP -> kQ
    java.lang.String name -> name
    int id -> id
    int requiredVersion -> kR
    java.util.List properties -> kS
    com.volmit.wormholes.util.ParticleEffect[] $VALUES -> kT
    50:50:com.volmit.wormholes.util.ParticleEffect[] values() -> values
    50:50:com.volmit.wormholes.util.ParticleEffect valueOf(java.lang.String) -> valueOf
    483:488:void <init>(java.lang.String,int,java.lang.String,int,int,com.volmit.wormholes.util.ParticleEffect$ParticleProperty[]) -> <init>
    497:497:java.lang.String getName() -> getName
    507:507:int getId() -> getId
    517:517:int getRequiredVersion() -> bj
    527:527:boolean hasProperty(com.volmit.wormholes.util.ParticleEffect$ParticleProperty) -> Lorem
    538:542:boolean isSupported() -> isSupported
    554:562:com.volmit.wormholes.util.ParticleEffect fromName(java.lang.String) -> ante
    574:582:com.volmit.wormholes.util.ParticleEffect fromId(int) -> imperdiet
    594:595:boolean isWater(org.bukkit.Location) -> posuere
    608:618:boolean isLongDistance(org.bukkit.Location,java.util.List) -> Lorem
    632:632:boolean isDataCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> Lorem
    646:646:boolean isColorCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor) -> Lorem
    682:699:void display(float,int,org.bukkit.Location,double) -> Lorem
    734:747:void display(float,int,org.bukkit.Location,java.util.List) -> Lorem
    781:782:void display(float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    810:827:void display(org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    854:871:void display(org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    896:897:void display(org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    920:933:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,double) -> Lorem
    956:969:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,java.util.List) -> Lorem
    990:991:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1027:1043:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,double) -> Lorem
    1078:1091:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,java.util.List) -> Lorem
    1126:1127:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1154:1167:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    1193:1206:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    1231:1232:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    2133:2154:void phantom(org.bukkit.Location,int) -> ipsum
    50:468:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParticleEffect$1 -> com.volmit.wormholes.src.dot$1:
    int[] val$in -> kU
    org.bukkit.Location val$l -> incentivize
    2136:2136:void <init>(int,int[],org.bukkit.Location) -> <init>
    2140:2152:void run() -> run
com.volmit.wormholes.util.ParticleEffect$BlockData -> com.volmit.wormholes.src.dot$Lorem:
    1388:1393:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$ItemData -> com.volmit.wormholes.src.dot$ipsum:
    1359:1360:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$NoteColor -> com.volmit.wormholes.src.dot$dolor:
    int note -> note
    1587:1597:void <init>(int) -> <init>
    1607:1607:float getValueX() -> bk
    1618:1618:float getValueY() -> bl
    1629:1629:float getValueZ() -> bm
com.volmit.wormholes.util.ParticleEffect$OrdinaryColor -> com.volmit.wormholes.src.dot$sit:
    int red -> red
    int green -> green
    int blue -> blue
    1460:1488:void <init>(int,int,int) -> <init>
    1498:1499:void <init>(org.bukkit.Color) -> <init>
    1508:1508:int getRed() -> getRed
    1518:1518:int getGreen() -> getGreen
    1528:1528:int getBlue() -> getBlue
    1539:1539:float getValueX() -> bk
    1550:1550:float getValueY() -> bl
    1561:1561:float getValueZ() -> bm
com.volmit.wormholes.util.ParticleEffect$ParticleColor -> com.volmit.wormholes.src.dot$amet:
    1407:1407:void <init>() -> <init>
    float getValueX() -> bk
    float getValueY() -> bl
    float getValueZ() -> bm
com.volmit.wormholes.util.ParticleEffect$ParticleColorException -> com.volmit.wormholes.src.dot$consectetur:
    long serialVersionUID -> serialVersionUID
    1684:1685:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleData -> com.volmit.wormholes.src.dot$adipiscing:
    org.bukkit.Material material -> iC
    byte data -> data
    int[] packetData -> kV
    1290:1294:void <init>(org.bukkit.Material,byte) -> <init>
    1303:1303:org.bukkit.Material getMaterial() -> getMaterial
    1313:1313:byte getData() -> getData
    1323:1323:int[] getPacketData() -> bn
    1333:1333:java.lang.String getPacketDataString() -> bo
com.volmit.wormholes.util.ParticleEffect$ParticleDataException -> com.volmit.wormholes.src.dot$elit:
    long serialVersionUID -> serialVersionUID
    1657:1658:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket -> com.volmit.wormholes.src.dot$Morbi:
    int version -> version
    java.lang.Class enumParticle -> kW
    java.lang.reflect.Constructor packetConstructor -> kX
    java.lang.reflect.Method getHandle -> kY
    java.lang.reflect.Field playerConnection -> kZ
    java.lang.reflect.Method sendPacket -> la
    boolean initialized -> initialized
    com.volmit.wormholes.util.ParticleEffect effect -> lb
    float offsetX -> lc
    float offsetY -> ld
    float offsetZ -> le
    float speed -> lf
    int amount -> lg
    boolean longDistance -> lh
    com.volmit.wormholes.util.ParticleEffect$ParticleData data -> li
    java.lang.Object packet -> lj
    1771:1789:void <init>(com.volmit.wormholes.util.ParticleEffect,float,float,float,float,int,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1813:1814:void <init>(com.volmit.wormholes.util.ParticleEffect,org.bukkit.util.Vector,float,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1831:1836:void <init>(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor,boolean) -> <init>
    1852:1888:void initialize() -> initialize
    1897:1901:int getVersion() -> getVersion
    1913:1913:boolean isInitialized() -> isInitialized
    1926:1965:void initializePacket(org.bukkit.Location) -> molestie
    1982:1991:void sendTo(org.bukkit.Location,org.bukkit.entity.Player) -> Lorem
    2006:2014:void sendTo(org.bukkit.Location,java.util.List) -> ipsum
    2031:2045:void sendTo(org.bukkit.Location,double) -> ipsum
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketInstantiationException -> com.volmit.wormholes.src.dot$Morbi$Lorem:
    long serialVersionUID -> serialVersionUID
    2099:2100:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketSendingException -> com.volmit.wormholes.src.dot$Morbi$ipsum:
    long serialVersionUID -> serialVersionUID
    2126:2127:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$VersionIncompatibleException -> com.volmit.wormholes.src.dot$Morbi$dolor:
    long serialVersionUID -> serialVersionUID
    2071:2072:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleProperty -> com.volmit.wormholes.src.dot$pulvinar:
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_WATER -> lk
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_DATA -> ll
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty DIRECTIONAL -> lm
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty COLORABLE -> ln
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] $VALUES -> lo
    1243:1243:com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] values() -> values
    1243:1243:com.volmit.wormholes.util.ParticleEffect$ParticleProperty valueOf(java.lang.String) -> valueOf
    1243:1243:void <init>(java.lang.String,int) -> <init>
    1243:1260:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParticleEffect$ParticleVersionException -> com.volmit.wormholes.src.dot$vulputate:
    long serialVersionUID -> serialVersionUID
    1710:1711:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleManipulator -> com.volmit.wormholes.src.com:
    9:9:void <init>() -> <init>
com.volmit.wormholes.util.PhantomDialog -> com.volmit.wormholes.src.dynamic:
    boolean cancellable -> lp
    27:30:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    34:52:com.volmit.wormholes.util.Window close() -> bp
    62:62:boolean isCancellable() -> isCancellable
    67:69:com.volmit.wormholes.util.Dialog setCancellable(boolean) -> dictum
    76:76:void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
    81:81:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomDialog$1 -> com.volmit.wormholes.src.dynamic$1:
    com.volmit.wormholes.util.PhantomDialog this$0 -> lq
    44:44:void <init>(com.volmit.wormholes.util.PhantomDialog,java.lang.Integer) -> <init>
    47:48:void run() -> run
com.volmit.wormholes.util.PhantomEffect -> com.volmit.wormholes.src.business:
    10:10:void <init>() -> <init>
    15:15:com.volmit.wormholes.util.GList getEffects() -> sticky
    void play(org.bukkit.Location) -> Pellentesque
    25:25:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.PhantomElement -> com.volmit.wormholes.src.efficient:
    org.bukkit.Material type -> lr
    java.lang.Byte metadata -> ls
    java.lang.String title -> title
    com.volmit.wormholes.util.GList text -> lt
    java.lang.Short durability -> lu
    java.lang.Integer count -> lv
    com.volmit.wormholes.util.Slot slot -> lw
    org.bukkit.inventory.ItemStack stack -> lx
    boolean glowing -> ly
    java.util.UUID id -> lz
    39:50:void <init>(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.Slot) -> <init>
    72:94:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    108:109:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    125:126:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    142:143:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    159:160:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    178:179:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    197:198:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    218:219:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short,java.lang.Integer) -> <init>
    224:226:com.volmit.wormholes.util.Element addText(java.lang.String) -> platea
    232:232:org.bukkit.Material getType() -> getType
    238:240:com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    246:246:java.lang.Byte getMetadata() -> lists
    252:254:com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    260:260:java.lang.String getTitle() -> getTitle
    266:268:com.volmit.wormholes.util.Element setTitle(java.lang.String) -> dictumst
    274:274:com.volmit.wormholes.util.GList getText() -> blocks
    280:282:com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    288:288:java.lang.Short getDurability() -> Common
    294:296:com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    302:302:java.lang.Integer getCount() -> getCount
    308:310:com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    316:316:com.volmit.wormholes.util.Slot getSlot() -> Informal
    322:324:com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    331:348:org.bukkit.inventory.ItemStack getStack() -> for
    354:356:com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    362:362:com.volmit.wormholes.util.Element copy() -> Synonyms
    375:375:java.util.UUID getId() -> getId
    382:382:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    387:392:boolean equals(java.lang.Object) -> equals
    398:399:void setGlowing(boolean) -> Vestibulum
    404:404:boolean isGlowing() -> b
com.volmit.wormholes.util.PhantomElement$1 -> com.volmit.wormholes.src.efficient$1:
    com.volmit.wormholes.util.PhantomElement this$0 -> lA
    363:363:void <init>(com.volmit.wormholes.util.PhantomElement,org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    368:368:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.PhantomEvent -> com.volmit.wormholes.src.to:
    org.bukkit.event.HandlerList handlers -> lB
    11:11:void <init>() -> <init>
    20:20:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    28:28:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    13:13:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PhantomHologram -> com.volmit.wormholes.src.enterprise:
    com.volmit.wormholes.util.GList meta -> lC
    java.lang.String text -> text
    org.bukkit.Location base -> lD
    double splitDistance -> lE
    org.bukkit.entity.Player exclusive -> lF
    28:34:void <init>(org.bukkit.Location) -> <init>
    39:39:org.bukkit.entity.Entity getHandle() -> c
    45:45:java.lang.String getDisplay() -> getDisplay
    51:53:void setLocation(org.bukkit.Location) -> setLocation
    58:59:void setTextLocation(org.bukkit.Location) -> at
    64:66:void setDisplay(java.lang.String) -> setDisplay
    74:113:void update() -> update
    118:125:void destroy() -> destroy
    130:130:org.bukkit.Location getLocation() -> getLocation
    135:135:double getSplitDistance() -> bq
    140:142:void setSplitDistance(double) -> in
    147:153:void setExclusive(org.bukkit.entity.Player) -> posuere
    158:158:org.bukkit.entity.Player getExclusive() -> d
com.volmit.wormholes.util.PhantomSelectDialog -> com.volmit.wormholes.src.extensible:
    com.volmit.wormholes.util.GMap bindings -> lG
    30:33:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    37:39:com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    44:49:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    55:55:void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.PhantomSpinner -> com.volmit.wormholes.src.frictionless:
    com.volmit.wormholes.util.ProgressSpinner s -> lH
    com.volmit.wormholes.util.ProgressSpinner c -> lI
    14:17:void <init>(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C) -> <init>
    22:22:java.lang.String toString() -> toString
com.volmit.wormholes.util.PhantomWindow -> com.volmit.wormholes.src.front:
    java.lang.Integer viewport -> lJ
    java.lang.String title -> title
    com.volmit.wormholes.util.GList elements -> lK
    org.bukkit.inventory.Inventory inventory -> inventory
    com.volmit.wormholes.util.Element background -> lL
    boolean open -> see
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID id -> lz
    40:56:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    61:65:com.volmit.wormholes.util.Window open() -> br
    71:78:com.volmit.wormholes.util.Window close() -> bp
    84:88:void update() -> update
    93:113:com.volmit.wormholes.util.Window build() -> bs
    118:150:void rebuild() -> venenatis
    155:163:boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    169:169:boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    175:186:com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    192:197:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    203:205:com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    211:211:java.lang.String getTitle() -> getTitle
    217:219:com.volmit.wormholes.util.Window setTitle(java.lang.String) -> cursus
    225:225:com.volmit.wormholes.util.GList getElements() -> bt
    231:233:com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    239:239:org.bukkit.entity.Player getViewer() -> orci
    245:245:org.bukkit.inventory.Inventory getInventory() -> getInventory
    251:251:java.util.UUID getId() -> getId
    257:257:com.volmit.wormholes.util.Element getBackground() -> bu
    263:265:com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    271:271:java.lang.Integer getViewport() -> bv
    277:279:com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    285:287:com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    293:293:boolean isOpen() -> isOpen
    299:304:void on(org.bukkit.event.inventory.InventoryCloseEvent) -> Lorem
    309:313:void on(org.bukkit.event.inventory.InventoryDragEvent) -> Lorem
    318:343:void on(org.bukkit.event.inventory.InventoryClickEvent) -> Lorem
    348:353:boolean equals(java.lang.Object) -> equals
    359:359:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    366:366:void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomWindow$1 -> com.volmit.wormholes.src.front$1:
    com.volmit.wormholes.util.PhantomWindow this$0 -> lM
    48:48:void <init>(com.volmit.wormholes.util.PhantomWindow,org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    53:53:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.Physical -> com.volmit.wormholes.src.global:
    org.bukkit.Location getLocation() -> getLocation
    org.bukkit.util.Vector getVelocity() -> getVelocity
    org.bukkit.util.Vector getVolume() -> bw
    java.lang.Double getMass() -> bx
    java.lang.Double getDensity() -> by
    void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    void influenceForce(org.bukkit.util.Vector) -> amet
com.volmit.wormholes.util.PhysicalObject -> com.volmit.wormholes.src.granular:
    org.bukkit.Location location -> suscipit
    org.bukkit.util.Vector velocity -> nascetur
    org.bukkit.util.Vector volume -> lN
    java.lang.Double mass -> lO
    30:35:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double) -> <init>
    47:48:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    52:52:org.bukkit.Location getLocation() -> getLocation
    57:57:org.bukkit.util.Vector getVelocity() -> getVelocity
    62:62:org.bukkit.util.Vector getVolume() -> bw
    67:67:java.lang.Double getMass() -> bx
    72:72:java.lang.Double getDensity() -> by
    77:82:void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    87:89:void influenceForce(org.bukkit.util.Vector) -> amet
com.volmit.wormholes.util.PlayerDataHandler -> com.volmit.wormholes.src.holistic:
    17:18:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    com.volmit.wormholes.util.Configurable onLoad(org.bukkit.entity.Player) -> imperdiet
    void onSave(org.bukkit.entity.Player) -> turpis
    12:12:void onSave(java.lang.Object) -> consectetur
    12:12:com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
    12:12:java.lang.Object onLoad(java.lang.Object) -> adipiscing
com.volmit.wormholes.util.PlayerDataSet -> com.volmit.wormholes.src.impactful:
    java.io.File folder -> lP
    24:26:void <init>(java.io.File) -> <init>
    40:42:void load(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> Lorem
    56:58:void save(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> ipsum
com.volmit.wormholes.util.PlayerEvent -> com.volmit.wormholes.src.innovative:
    org.bukkit.entity.Player player -> player
    15:17:void <init>(org.bukkit.entity.Player) -> <init>
    26:26:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.util.PlayerHud -> com.volmit.wormholes.src.integrated:
    boolean closeOnMove -> lQ
    org.bukkit.Location last -> Mauris
    14:18:void <init>(org.bukkit.entity.Player,boolean) -> <init>
    22:23:void <init>(org.bukkit.entity.Player) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> mortar
    37:51:void onUpdateInternal() -> platform
com.volmit.wormholes.util.PlayerInventorySet -> com.volmit.wormholes.src.interactive:
    org.bukkit.entity.Player p -> harness
    org.bukkit.inventory.ItemStack[] contents -> lR
    12:15:void <init>(org.bukkit.entity.Player) -> <init>
    19:35:void pop() -> pop
    39:42:void push() -> push
com.volmit.wormholes.util.PlayerScrollEvent -> com.volmit.wormholes.src.intuitive:
    int from -> lS
    int to -> lT
    int distance -> lU
    int movement -> lV
    com.volmit.wormholes.util.ScrollDirection direction -> lW
    15:47:void <init>(org.bukkit.entity.Player,int,int) -> <init>
    51:51:int getFrom() -> bz
    56:56:int getTo() -> bA
    61:61:int getDistance() -> bB
    66:66:int getMovement() -> bC
    71:71:com.volmit.wormholes.util.ScrollDirection getDirection() -> bD
com.volmit.wormholes.util.PluginMessage -> com.volmit.wormholes.src.killer:
    com.google.common.io.ByteArrayDataOutput out -> lX
    org.bukkit.entity.Player player -> player
    org.bukkit.plugin.Plugin plugin -> plugin
    29:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String[]) -> <init>
    46:52:void send() -> send
com.volmit.wormholes.util.PluginUtil -> com.volmit.wormholes.src.leading:
    34:34:void <init>() -> <init>
    45:49:void enable(org.bukkit.plugin.Plugin) -> ipsum
    56:60:void enableAll() -> bE
    70:74:void disable(org.bukkit.plugin.Plugin) -> dolor
    81:85:void disableAll() -> bF
    96:96:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> sit
    110:116:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> Lorem
    128:135:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> suscipit
    145:151:java.util.List getPluginNames(boolean) -> non
    163:168:java.lang.String getPluginVersion(java.lang.String) -> Mauris
    182:204:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> amet
    219:298:java.util.List findByCommand(java.lang.String) -> mollis
    319:320:void load(org.bukkit.plugin.Plugin) -> consectetur
    324:346:java.lang.String getPluginFileName(java.lang.String) -> convallis
    359:409:boolean load(java.lang.String) -> load
    421:426:void reload(org.bukkit.plugin.Plugin) -> adipiscing
    433:437:void reloadAll() -> bG
    449:577:void unload(org.bukkit.plugin.Plugin) -> elit
    584:707:void unloadNoGC(org.bukkit.plugin.Plugin) -> Morbi
    712:712:org.bukkit.plugin.Plugin getAnyPlugin() -> bH
com.volmit.wormholes.util.Polygon -> com.volmit.wormholes.src.magnetic:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Priority -> com.volmit.wormholes.src.mission:
    com.volmit.wormholes.util.Priority LOWEST -> lY
    com.volmit.wormholes.util.Priority VERY_LOW -> lZ
    com.volmit.wormholes.util.Priority LOW -> ma
    com.volmit.wormholes.util.Priority NORMAL -> mb
    com.volmit.wormholes.util.Priority HIGH -> mc
    com.volmit.wormholes.util.Priority VERY_HIGH -> md
    com.volmit.wormholes.util.Priority HIGHEST -> me
    com.volmit.wormholes.util.Priority[] $VALUES -> mf
    3:3:com.volmit.wormholes.util.Priority[] values() -> values
    3:3:com.volmit.wormholes.util.Priority valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    9:9:com.volmit.wormholes.util.GList topDown() -> bI
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ProgressSpinner -> com.volmit.wormholes.src.critical:
    java.lang.String[] chars -> mg
    int index -> index
    com.volmit.wormholes.util.ProgressSpinner DEFAULT -> mh
    com.volmit.wormholes.util.ProgressSpinner NETWORK -> mj
    com.volmit.wormholes.util.ProgressSpinner CIRCLES -> mk
    com.volmit.wormholes.util.ProgressSpinner RANDOMS -> ml
    com.volmit.wormholes.util.ProgressSpinner MERGERS -> mm
    26:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> bJ
    65:65:int getIndex() -> getIndex
    70:75:void <clinit>() -> <clinit>
com.volmit.wormholes.util.QueueMode -> com.volmit.wormholes.src.next:
    com.volmit.wormholes.util.QueueMode ROUND_ROBIN -> mn
    com.volmit.wormholes.util.QueueMode SMALLEST -> mo
    com.volmit.wormholes.util.QueueMode[] $VALUES -> mp
    3:3:com.volmit.wormholes.util.QueueMode[] values() -> values
    3:3:com.volmit.wormholes.util.QueueMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.util.RTEX -> com.volmit.wormholes.src.generation:
    com.volmit.wormholes.util.GList extras -> mq
    19:21:void <init>(com.volmit.wormholes.util.ColoredString[]) -> <init>
    30:44:com.volmit.wormholes.util.JSONObject toJSON() -> schemas
com.volmit.wormholes.util.RTX -> com.volmit.wormholes.src.one:
    com.volmit.wormholes.util.JSONArray base -> mr
    19:22:void <init>() -> <init>
    32:33:void add(com.volmit.wormholes.util.JSONObject) -> amet
    43:47:void addText(java.lang.String) -> addText
    59:63:void addText(java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    77:86:void addTextHover(java.lang.String,com.volmit.wormholes.util.RTEX,com.volmit.wormholes.util.C) -> Lorem
    100:110:void addTextSuggestedCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    124:134:void addTextOpenURL(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    150:160:void addTextFireCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    178:192:void addTextSuggestedHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    208:222:void addTextOpenHoverURL(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    238:252:void addTextFireHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    261:261:com.volmit.wormholes.util.JSONArray toJSON() -> am
    272:273:void tellRawTo(org.bukkit.entity.Player) -> molestie
com.volmit.wormholes.util.RayTrace -> com.volmit.wormholes.src.open:
    org.bukkit.Location start -> ms
    org.bukkit.util.Vector direction -> ridiculus
    java.lang.Double maxDistance -> mt
    java.lang.Double distanceCovered -> mu
    java.lang.Double step -> mv
    java.lang.Boolean stop -> mw
    37:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> bK
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> adipiscing
    89:89:org.bukkit.Location getStart() -> bL
    94:95:void setStart(org.bukkit.Location) -> odio
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> bM
    114:115:void setMaxDistance(java.lang.Double) -> dolor
    119:119:java.lang.Double getDistanceCovered() -> bN
    124:125:void setDistanceCovered(java.lang.Double) -> sit
    129:129:java.lang.Double getStep() -> bO
    134:135:void setStep(java.lang.Double) -> amet
com.volmit.wormholes.util.RedstonePower -> com.volmit.wormholes.src.source:
    byte power -> mx
    19:21:void <init>(byte) -> <init>
    30:40:byte getPower() -> bP
    51:52:void setPower(byte) -> adipiscing
com.volmit.wormholes.util.ReflectionUtils -> com.volmit.wormholes.src.out:
    34:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Class[]) -> Lorem
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> Lorem
    156:156:java.lang.Object instantiateObject(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Object[]) -> Lorem
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> Lorem
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> Lorem
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> Lorem
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> Lorem
    360:360:java.lang.reflect.Field getField(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> Lorem
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> Lorem
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> Lorem
    509:510:void setValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> Lorem
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> Lorem
com.volmit.wormholes.util.ReflectionUtils$DataType -> com.volmit.wormholes.src.out$Lorem:
    com.volmit.wormholes.util.ReflectionUtils$DataType BYTE -> my
    com.volmit.wormholes.util.ReflectionUtils$DataType SHORT -> mz
    com.volmit.wormholes.util.ReflectionUtils$DataType INTEGER -> mA
    com.volmit.wormholes.util.ReflectionUtils$DataType LONG -> mB
    com.volmit.wormholes.util.ReflectionUtils$DataType CHARACTER -> mC
    com.volmit.wormholes.util.ReflectionUtils$DataType FLOAT -> mD
    com.volmit.wormholes.util.ReflectionUtils$DataType DOUBLE -> mE
    com.volmit.wormholes.util.ReflectionUtils$DataType BOOLEAN -> mF
    java.util.Map CLASS_MAP -> mG
    java.lang.Class primitive -> mH
    java.lang.Class reference -> mI
    com.volmit.wormholes.util.ReflectionUtils$DataType[] $VALUES -> mJ
    630:630:com.volmit.wormholes.util.ReflectionUtils$DataType[] values() -> values
    630:630:com.volmit.wormholes.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
    657:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> bQ
    679:679:java.lang.Class getReference() -> bR
    691:691:com.volmit.wormholes.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> dolor
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> sit
    718:719:java.lang.Class getReference(java.lang.Class) -> amet
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> Lorem
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> ipsum
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> Lorem
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> ipsum
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> ipsum
    630:646:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ReflectionUtils$PackageType -> com.volmit.wormholes.src.out$ipsum:
    com.volmit.wormholes.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> mK
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT -> mL
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> mM
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> mN
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> mO
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> mP
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> mQ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> mR
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> mS
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> mT
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> mU
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> mV
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> mW
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> mX
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> mY
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> mZ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> na
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> nb
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> nc
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> nd
    java.lang.String path -> path
    com.volmit.wormholes.util.ReflectionUtils$PackageType[] $VALUES -> ne
    548:548:com.volmit.wormholes.util.ReflectionUtils$PackageType[] values() -> values
    548:548:com.volmit.wormholes.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
    561:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    548:550:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Registrar -> com.volmit.wormholes.src.the:
    com.volmit.wormholes.util.RegistrarType value() -> bS
com.volmit.wormholes.util.RegistrarType -> com.volmit.wormholes.src.box:
    com.volmit.wormholes.util.RegistrarType AUTO -> nf
    com.volmit.wormholes.util.RegistrarType MANUAL -> ng
    com.volmit.wormholes.util.RegistrarType[] $VALUES -> nh
    3:3:com.volmit.wormholes.util.RegistrarType[] values() -> values
    3:3:com.volmit.wormholes.util.RegistrarType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.RootedHud -> com.volmit.wormholes.src.plug:
    org.bukkit.Location track -> ni
    double maxDist -> cO
    14:18:void <init>(org.bukkit.entity.Player,org.bukkit.Location,double) -> <init>
    22:23:void <init>(org.bukkit.entity.Player,org.bukkit.Location) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> mortar
    37:43:void onUpdateInternal() -> platform
com.volmit.wormholes.util.S -> com.volmit.wormholes.src.play:
    6:15:void <init>() -> <init>
    void sync() -> sync
com.volmit.wormholes.util.S$1 -> com.volmit.wormholes.src.play$1:
    com.volmit.wormholes.util.S this$0 -> nj
    8:8:void <init>(com.volmit.wormholes.util.S) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.SR -> com.volmit.wormholes.src.proactive:
    java.lang.Object t -> nk
    boolean f -> f
    5:32:void <init>() -> <init>
    36:36:java.lang.Object get() -> get
    java.lang.Object sync() -> bT
    3:3:java.lang.Object access$002(com.volmit.wormholes.util.SR,java.lang.Object) -> Lorem
    3:3:boolean access$102(com.volmit.wormholes.util.SR,boolean) -> Lorem
com.volmit.wormholes.util.SR$1 -> com.volmit.wormholes.src.proactive$1:
    com.volmit.wormholes.util.SR this$0 -> nl
    11:11:void <init>(com.volmit.wormholes.util.SR) -> <init>
    15:17:void run() -> run
com.volmit.wormholes.util.SYM -> com.volmit.wormholes.src.real:
    char QUOTE_LEFT -> nm
    char QUOTE_RIGHT -> nn
    char QUOTE_SINGLE_LEFT -> no
    char QUOTE_SINGLE_RIGHT -> np
    char DEGREE_CELCIUS -> nq
    char DEGREE_FAHRENHEIT -> nr
    char BRACKET_LEFT -> ns
    char BRACKET_RIGHT -> nt
    char BRACKET_SHELL_LEFT -> nu
    char BRACKET_SHELL_RIGHT -> nv
    char ARROW_LEFT -> nw
    char ARROW_UP -> nx
    char ARROW_RIGHT -> ny
    char ARROW_DOWN -> nz
    char ARROW_DOUBLE_LEFT -> nA
    char ARROW_DOUBLE_UP -> nB
    char ARROW_DOUBLE_RIGHT -> nC
    char ARROW_DOUBLE_DOWN -> nD
    char ARROW_LEFT_RIGHT -> nE
    char ARROW_UP_DOWN -> nF
    char ARROW_UP_LEFT -> nG
    char ARROW_UP_RIGHT -> nH
    char ARROW_DOWN_RIGHT -> nI
    char ARROW_DOWN_LEFT -> nJ
    char SYMBOL_SNOWFLAKE -> nK
    char SYMBOL_HEART -> nL
    char SYMBOL_COPYRIGHT -> nM
    char SYMBOL_REGISTERED -> nN
    char SYMBOL_WARNING -> nO
    char SYMBOL_DIAMOND -> nP
    char SYMBOL_NIB -> nQ
    char SYMBOL_CUT -> nR
    char SYMBOL_OHM -> nS
    char SYMBOL_GEAR -> nT
    char SYMBOL_PENCIL -> nU
    char SYMBOL_SMILE -> nV
    char SYMBOL_RADIOACTIVE -> nW
    char SYMBOL_PEACE -> nX
    char SYMBOL_FEMALE -> nY
    char SYMBOL_MALE -> nZ
    char SYMBOL_KING -> oa
    char SYNBOL_QUEEN -> ob
    char SYMBOL_CASTLE -> oc
    char SYMBOL_HORSE -> od
    char SYMBOL_CLOVER -> oe
    char SYMBOL_FLAG -> og
    char SYMBOL_VOLTAGE -> oh
    char SYMBOL_EGG -> oi
    char SHAPE_CIRCLE -> oj
    char SHAPE_SQUARE -> ok
    char SHAPE_TRIANGLE -> ol
    char SHAPE_DIAMOND -> om
    char SHAPE_PENTAGON -> on
    char SHAPE_HEXAGON -> oo
    char SHAPE_HEXAGON_HORIZONTAL -> op
    char SHAPE_ELIPSE -> oq
    11:11:void <init>() -> <init>
    83:99:void printSymbols(org.bukkit.entity.Player) -> Nullam
com.volmit.wormholes.util.ScrollDirection -> com.volmit.wormholes.src.time:
    com.volmit.wormholes.util.ScrollDirection UP -> or
    com.volmit.wormholes.util.ScrollDirection DOWN -> os
    com.volmit.wormholes.util.ScrollDirection[] $VALUES -> ot
    3:3:com.volmit.wormholes.util.ScrollDirection[] values() -> values
    3:3:com.volmit.wormholes.util.ScrollDirection valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ScrollingText -> com.volmit.wormholes.src.revolutionary:
    java.lang.String text -> text
    int shift -> ou
    9:12:void <init>(java.lang.String) -> <init>
    15:18:void <init>() -> <init>
    22:23:void shiftLeft(int) -> turpis
    27:28:void shiftRight(int) -> Nullam
    32:32:java.lang.String getText() -> getText
    37:38:void setText(java.lang.String) -> setText
    42:42:int getShift() -> getShift
    47:48:void setShift(int) -> vehicula
    53:65:java.lang.String toString() -> toString
com.volmit.wormholes.util.SelectDialog -> com.volmit.wormholes.src.rich:
    com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.Sequencer -> com.volmit.wormholes.src.robust:
    void add(com.volmit.wormholes.util.Audible,int) -> Lorem
    boolean isPlaying() -> isPlaying
    void setPlayHead(int) -> porta
    int getLength() -> getLength
    int getPlayHead() -> bU
com.volmit.wormholes.util.Serializer -> com.volmit.wormholes.src.scalable:
    21:21:void <init>() -> <init>
    34:40:byte[] serialize(java.io.Serializable) -> serialize
    56:61:java.io.Serializable deserialize(byte[]) -> vulputate
    76:79:void serializeToFile(java.io.Serializable,java.io.File) -> Lorem
    94:98:java.io.Serializable deserializeFromFile(java.io.File) -> adipiscing
com.volmit.wormholes.util.Shape -> com.volmit.wormholes.src.seamless:
    org.bukkit.Location location -> suscipit
    org.bukkit.util.Vector offset -> mus
    org.bukkit.util.Vector size -> ov
    28:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> a
    90:94:org.bukkit.Location randomLocation() -> bV
    104:104:org.bukkit.Location randomSurface() -> bW
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> Nulla
    129:129:org.bukkit.util.Vector getSize() -> bX
com.volmit.wormholes.util.ShockEffect -> com.volmit.wormholes.src.sexy:
    java.lang.Float power -> ow
    11:13:void <init>(java.lang.Float) -> <init>
    17:27:void play(org.bukkit.Location,org.bukkit.util.Vector) -> dolor
    31:31:com.volmit.wormholes.util.LineParticleManipulator getArm() -> bY
com.volmit.wormholes.util.ShockEffect$1 -> com.volmit.wormholes.src.sexy$1:
    com.volmit.wormholes.util.ShockEffect this$0 -> ox
    32:32:void <init>(com.volmit.wormholes.util.ShockEffect) -> <init>
    36:37:void play(org.bukkit.Location) -> Pellentesque
com.volmit.wormholes.util.ShortTag -> com.volmit.wormholes.src.sticky:
    short value -> value
    54:56:void <init>(java.lang.String,short) -> <init>
    60:60:java.lang.Short getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.SkinErrorException -> com.volmit.wormholes.src.strategic:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.SkinProperties -> com.volmit.wormholes.src.synergistic:
    java.lang.String uvd -> oy
    java.lang.String value -> value
    java.lang.String signature -> signature
    16:20:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    23:40:void <init>(java.util.UUID) -> <init>
    45:66:com.volmit.wormholes.util.JSONObject get() -> bZ
    71:71:com.comphenix.protocol.wrappers.WrappedSignedProperty sign() -> ca
    76:76:java.lang.String getUvd() -> cb
    81:81:java.lang.String getValue() -> getValue
    86:86:java.lang.String getSignature() -> getSignature
com.volmit.wormholes.util.Slot -> com.volmit.wormholes.src.transparent:
    java.lang.Integer x -> dE
    java.lang.Integer y -> oz
    java.lang.Integer s -> oA
    24:43:void <init>(java.lang.Integer,java.lang.Integer) -> <init>
    52:56:void <init>(java.lang.Integer) -> <init>
    65:65:java.lang.Integer getSlot() -> cc
    75:75:java.lang.Integer getX() -> F
    85:85:java.lang.Integer getY() -> cd
    90:90:int getPosition(int,int) -> Morbi
    102:105:void setSlot(java.lang.Integer) -> amet
    116:129:void setX(java.lang.Integer) -> ipsum
    139:147:void setY(java.lang.Integer) -> consectetur
    152:152:java.lang.String toString() -> toString
    162:162:com.volmit.wormholes.util.Slot copy() -> ce
    168:173:int hashCode() -> hashCode
    179:235:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.SortedGMap -> com.volmit.wormholes.src.turn:
    long serialVersionUID -> serialVersionUID
    12:12:void <init>() -> <init>
    21:37:com.volmit.wormholes.util.GList k() -> W
    45:61:com.volmit.wormholes.util.GList v() -> Y
com.volmit.wormholes.util.SphereParticleManipulator -> com.volmit.wormholes.src.key:
    11:11:void <init>() -> <init>
    29:52:void play(org.bukkit.Location,java.lang.Double,java.lang.Double) -> Lorem
com.volmit.wormholes.util.StringTag -> com.volmit.wormholes.src.ubiquitous:
    java.lang.String value -> value
    54:56:void <init>(java.lang.String,java.lang.String) -> <init>
    60:60:java.lang.String getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.SubCommand -> com.volmit.wormholes.src.user:
    java.lang.String sub -> oB
    com.volmit.wormholes.util.GList osub -> oC
    java.lang.String description -> description
    13:17:void <init>(java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
    25:25:java.lang.String getSub() -> cf
    30:30:com.volmit.wormholes.util.GList getOsub() -> cg
    35:35:java.lang.String getDescription() -> getDescription
com.volmit.wormholes.util.SubGroup -> com.volmit.wormholes.src.centric:
    com.volmit.wormholes.util.GList subCommands -> oD
    java.lang.String root -> oE
    13:16:void <init>(java.lang.String) -> <init>
    20:21:void add(com.volmit.wormholes.util.SubCommand) -> Lorem
    25:33:void showHelp(org.bukkit.command.CommandSender) -> sit
    37:38:void sendLine(org.bukkit.command.CommandSender,com.volmit.wormholes.util.SubCommand) -> Lorem
    42:72:void hit(org.bukkit.command.CommandSender,java.lang.String[]) -> dolor
com.volmit.wormholes.util.SystemEffect -> com.volmit.wormholes.src.value:
    com.volmit.wormholes.util.GList effects -> oF
    20:22:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getEffects() -> sticky
    33:37:void play(org.bukkit.Location) -> Pellentesque
    42:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.TFColor -> com.volmit.wormholes.src.added:
    com.volmit.wormholes.util.C c -> aD
    8:10:void <init>(com.volmit.wormholes.util.C) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TFRemove -> com.volmit.wormholes.src.vertical:
    java.lang.String grep -> oG
    8:10:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TFReplace -> com.volmit.wormholes.src.viral:
    java.lang.String grep -> oG
    java.lang.String rep -> oH
    9:12:void <init>(java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TICK -> com.volmit.wormholes.src.virtual:
    long tick -> oI
    3:3:void <init>() -> <init>
    5:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.TXT -> com.volmit.wormholes.src.visionary:
    10:10:void <init>() -> <init>
    23:23:java.lang.String repeat(java.lang.String,int) -> repeat
    37:45:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    65:65:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    83:83:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    97:97:java.lang.String line(com.volmit.wormholes.util.C,int) -> Lorem
    111:111:java.lang.String underline(com.volmit.wormholes.util.C,int) -> ipsum
    133:138:java.lang.String getLine(com.volmit.wormholes.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> Lorem
com.volmit.wormholes.util.TabbedWindow -> com.volmit.wormholes.src.web:
    com.volmit.wormholes.util.GMap elements -> dI
    24:27:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    39:45:void bindTab(com.volmit.wormholes.util.Element,java.lang.Integer) -> Lorem
    55:67:void setTab(int) -> ultricies
com.volmit.wormholes.util.Tabled -> com.volmit.wormholes.src.enabled:
    java.lang.String value() -> value
com.volmit.wormholes.util.Tabulator -> com.volmit.wormholes.src.wireless:
    long serialVersionUID -> serialVersionUID
    int tabSize -> oJ
    18:21:void <init>(int) -> <init>
    31:37:void <init>(java.util.Set,int) -> <init>
    47:53:void <init>(java.util.Collection,int) -> <init>
    63:69:void <init>(java.util.Iterator,int) -> <init>
    79:81:void <init>(java.lang.Object[],int) -> <init>
    92:100:void <init>(java.util.List,int) -> <init>
    109:109:int getTabCount() -> getTabCount
    121:126:int getFirstIndex(int) -> vestibulum
    138:143:int getLastIndex(int) -> felis
    155:162:com.volmit.wormholes.util.GList getTab(int) -> nec
    174:174:boolean hasTab(int) -> tristique
    184:184:int getTabSize() -> getTabSize
    195:196:void setTabSize(int) -> setTabSize
com.volmit.wormholes.util.Tag -> com.volmit.wormholes.src.world:
    java.lang.String name -> name
    52:54:void <init>(java.lang.String) -> <init>
    61:61:java.lang.String getName() -> getName
    java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.TagProvider -> com.volmit.wormholes.src.class:
    java.lang.String getChatTag() -> ch
    java.lang.String getChatTagHover() -> ci
com.volmit.wormholes.util.Task -> com.volmit.wormholes.src.action:
    int taskx -> oK
    com.volmit.wormholes.util.FinalInteger task -> oL
    java.lang.Boolean running -> oM
    21:32:void <init>(int) -> <init>
    void run() -> run
    42:45:void cancel() -> cancel
    54:54:boolean isRunning() -> isRunning
    10:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Task$1 -> com.volmit.wormholes.src.action$1:
    com.volmit.wormholes.util.Task this$0 -> oN
    25:25:void <init>(com.volmit.wormholes.util.Task) -> <init>
    29:30:void run() -> run
com.volmit.wormholes.util.TaskLater -> com.volmit.wormholes.src.items:
    int taskx -> oK
    17:18:void <init>() -> <init>
    27:36:void <init>(java.lang.Integer) -> <init>
    void run() -> run
    10:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.TaskLater$1 -> com.volmit.wormholes.src.items$1:
    com.volmit.wormholes.util.TaskLater this$0 -> oO
    29:29:void <init>(com.volmit.wormholes.util.TaskLater) -> <init>
    33:34:void run() -> run
com.volmit.wormholes.util.TaskManager -> com.volmit.wormholes.src.applications:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.TextBlock -> com.volmit.wormholes.src.architectures:
    com.volmit.wormholes.util.GList block -> oP
    8:10:void <init>() -> <init>
    14:15:void add(java.lang.String) -> add
    19:19:com.volmit.wormholes.util.GList getBlock() -> cj
com.volmit.wormholes.util.TextFilter -> com.volmit.wormholes.src.bandwidth:
    java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TextFilterer -> com.volmit.wormholes.src.channels:
    com.volmit.wormholes.util.GList filters -> arcu
    8:10:void <init>() -> <init>
    14:15:void registerFilter(com.volmit.wormholes.util.TextFilter) -> Lorem
    20:27:java.lang.String onFilter(java.lang.String) -> viverra
    32:32:java.lang.String filter(java.lang.String) -> lacus
com.volmit.wormholes.util.TextListener -> com.volmit.wormholes.src.communities:
    org.bukkit.entity.Player player -> player
    13:22:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    27:40:void on(org.bukkit.event.player.AsyncPlayerChatEvent) -> Lorem
    void onTextEntered(java.lang.String) -> eu
com.volmit.wormholes.util.TextListener$1 -> com.volmit.wormholes.src.communities$1:
    org.bukkit.event.player.AsyncPlayerChatEvent val$e -> oQ
    com.volmit.wormholes.util.TextListener this$0 -> oR
    32:32:void <init>(com.volmit.wormholes.util.TextListener,org.bukkit.event.player.AsyncPlayerChatEvent) -> <init>
    36:37:void run() -> run
com.volmit.wormholes.util.TextMap -> com.volmit.wormholes.src.content:
    java.lang.String name -> name
    com.volmit.wormholes.util.GMap mapping -> embrace
    int height -> height
    12:16:void <init>(java.lang.String) -> <init>
    20:21:void addBlock(java.lang.Character,com.volmit.wormholes.util.TextBlock) -> Lorem
    25:25:java.lang.String getName() -> getName
    30:30:com.volmit.wormholes.util.GMap getMapping() -> natoque
    35:75:void check() -> check
    79:98:java.lang.String[] build(java.lang.String) -> Phasellus
    103:125:java.lang.String[] build(java.lang.String,com.volmit.wormholes.util.C[]) -> dolor
    130:142:java.lang.String[] build(char,com.volmit.wormholes.util.C) -> Lorem
    147:159:java.lang.String[] build(char) -> pulvinar
com.volmit.wormholes.util.ThreadInformation -> com.volmit.wormholes.src.convergence:
    double ticksPerSecond -> oS
    int queuedSize -> oT
    boolean processing -> oU
    double utilization -> oV
    com.volmit.wormholes.util.Average ticksPerSecondAverage -> oW
    long tick -> oI
    int id -> id
    14:22:void <init>(int) -> <init>
    26:26:double getTicksPerSecond() -> ck
    31:33:void setTicksPerSecond(double) -> purus
    37:37:int getQueuedSize() -> cl
    42:43:void setQueuedSize(int) -> lacinia
    47:47:boolean isProcessing() -> cm
    52:53:void setProcessing(boolean) -> mi
    57:57:double getUtilization() -> cn
    62:63:void setUtilization(double) -> non
    67:67:double getTicksPerSecondAverage() -> co
    72:72:long getTick() -> getTick
    77:78:void setTick(long) -> setTick
    82:82:long getTickLag() -> cp
    87:87:int getId() -> getId
com.volmit.wormholes.util.TickHandle -> com.volmit.wormholes.src.deliverables:
    com.volmit.wormholes.util.TickHandler value() -> cq
com.volmit.wormholes.util.TickHandler -> com.volmit.wormholes.src.commerce:
    com.volmit.wormholes.util.TickHandler SYNCED -> oX
    com.volmit.wormholes.util.TickHandler REALTIME -> oY
    com.volmit.wormholes.util.TickHandler[] $VALUES -> oZ
    3:3:com.volmit.wormholes.util.TickHandler[] values() -> values
    3:3:com.volmit.wormholes.util.TickHandler valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Ticked -> com.volmit.wormholes.src.markets:
    double value() -> value
com.volmit.wormholes.util.Timed -> com.volmit.wormholes.src.services:
    long time -> time
    java.lang.String id -> id
    com.volmit.wormholes.util.GList timers -> pa
    10:14:void <init>(java.lang.String,long) -> <init>
    18:18:long getTime() -> getTime
    23:24:void setTime(long) -> setTime
    28:28:java.lang.String getId() -> getId
    33:34:void setId(java.lang.String) -> setId
    38:38:com.volmit.wormholes.util.GList getTimers() -> cr
    43:44:void setTimers(com.volmit.wormholes.util.GList) -> dictum
    48:48:double getTimeMS() -> cs
    53:53:double getTotalTimeMS() -> ct
    58:65:long getTotalTime() -> getTotalTime
    70:70:com.volmit.wormholes.util.GList toLines() -> cu
    75:75:com.volmit.wormholes.util.GList toLines(int,int) -> pulvinar
    80:90:com.volmit.wormholes.util.GList toLines(int,int,com.volmit.wormholes.util.GList) -> Lorem
    95:104:com.volmit.wormholes.util.Timed get(java.lang.String) -> accumsan
    109:110:void hit(java.lang.String,long) -> sit
    114:124:void hit(com.volmit.wormholes.util.Timed) -> Lorem
com.volmit.wormholes.util.Timer -> com.volmit.wormholes.src.tailers:
    long tns -> pb
    long cns -> pc
    18:21:void <init>() -> <init>
    28:29:void start() -> start
    36:38:void stop() -> stop
    47:47:long getTime() -> getTime
    57:57:long getLastRun() -> cv
com.volmit.wormholes.util.Title -> com.volmit.wormholes.src.experiences:
    java.lang.String title -> title
    java.lang.String subTitle -> pd
    java.lang.String action -> action
    java.lang.Integer fadeIn -> pe
    java.lang.Integer fadeOut -> pf
    java.lang.Integer stayTime -> pg
    24:28:void <init>() -> <init>
    47:54:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    71:77:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    92:97:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    109:117:void send(org.bukkit.entity.Player) -> vehicula
    121:121:java.lang.String getTitle() -> getTitle
    126:128:com.volmit.wormholes.util.Title setTitle(java.lang.String) -> egestas
    133:133:java.lang.String getSubTitle() -> cw
    138:140:com.volmit.wormholes.util.Title setSubTitle(java.lang.String) -> Praesent
    145:145:java.lang.String getAction() -> getAction
    150:152:com.volmit.wormholes.util.Title setAction(java.lang.String) -> eros
    157:157:java.lang.Integer getFadeIn() -> cx
    162:163:void setFadeIn(java.lang.Integer) -> adipiscing
    167:167:java.lang.Integer getFadeOut() -> cy
    172:173:void setFadeOut(java.lang.Integer) -> elit
    177:177:java.lang.Integer getStayTime() -> cz
    182:183:void setStayTime(java.lang.Integer) -> Morbi
    187:187:java.lang.Integer totalTime() -> cA
com.volmit.wormholes.util.Transmission -> com.volmit.wormholes.src.eyeballs:
    7:12:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    16:16:java.lang.String getType() -> getType
    21:21:java.lang.String getDestination() -> vel
    26:26:java.lang.String getSource() -> getSource
    31:32:void setType(java.lang.String) -> setType
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> dolor
com.volmit.wormholes.util.VariableBlock -> com.volmit.wormholes.src.functionalities:
    com.volmit.wormholes.util.GList blocks -> ph
    15:17:void <init>() -> <init>
    21:24:void <init>(java.lang.String) -> <init>
    33:35:void <init>(com.volmit.wormholes.util.MaterialBlock[]) -> <init>
    47:48:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    58:59:void <init>(org.bukkit.Material) -> <init>
    68:68:com.volmit.wormholes.util.GList getBlocks() -> ridiculus
    73:73:com.volmit.wormholes.util.MaterialBlock random() -> cB
    85:85:boolean is(com.volmit.wormholes.util.MaterialBlock) -> ipsum
    96:100:void addBlock(com.volmit.wormholes.util.MaterialBlock) -> dolor
    110:111:void removeBlock(com.volmit.wormholes.util.MaterialBlock) -> sit
    115:145:void fromString(java.lang.String) -> consectetur
    150:157:java.lang.String toString() -> toString
com.volmit.wormholes.util.VectorMath -> com.volmit.wormholes.src.infomediaries:
    14:14:void <init>() -> <init>
    18:28:org.bukkit.util.Vector scaleStatic(com.volmit.wormholes.util.Axis,org.bukkit.util.Vector,double) -> Lorem
    33:38:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> Lorem
    43:48:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> ipsum
    53:58:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> dolor
    63:65:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> elit
    70:73:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> ipsum
    78:131:org.bukkit.util.Vector rotate(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> ipsum
    136:136:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> Morbi
    141:141:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> pulvinar
    146:146:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> vulputate
    151:151:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> dictum
    156:156:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> Vestibulum
    161:161:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> in
    166:187:org.bukkit.util.Vector getAxis(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> sit
    192:192:double round(double,int) -> sit
    197:200:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> Lorem
    205:218:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> Lorem
    231:316:com.volmit.wormholes.util.GList split(org.bukkit.block.BlockFace) -> Lorem
    330:330:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> amet
    335:335:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> consectetur
    349:349:org.bukkit.util.Vector toVector(float,float) -> dolor
    362:363:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> Lorem
    377:380:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> Lorem
    391:406:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> purus
    418:421:double getSpeed(org.bukkit.util.Vector) -> non
    435:442:com.volmit.wormholes.util.GList shift(org.bukkit.util.Vector,com.volmit.wormholes.util.GList) -> Lorem
    454:496:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> mi
    510:522:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> Lorem
    536:548:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> ipsum
    562:571:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> dolor
    585:594:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> sit
    608:656:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> euismod
com.volmit.wormholes.util.VectorMath$1 -> com.volmit.wormholes.src.infomediaries$1:
    org.bukkit.util.Vector val$vector -> pi
    436:436:void <init>(org.bukkit.util.Vector) -> <init>
    440:440:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> Pellentesque
    436:436:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.VectorMath$2 -> com.volmit.wormholes.src.infomediaries$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> bi
    int[] $SwitchMap$org$bukkit$block$BlockFace -> pj
    18:233:void <clinit>() -> <clinit>
com.volmit.wormholes.util.VectorSchematic -> com.volmit.wormholes.src.infrastructures:
    com.volmit.wormholes.util.GMap schematic -> pk
    19:21:void <init>() -> <init>
    33:41:boolean contains(com.volmit.wormholes.util.MaterialBlock) -> amet
    53:53:boolean containsMultiple(com.volmit.wormholes.util.MaterialBlock) -> consectetur
    65:75:com.volmit.wormholes.util.GList find(com.volmit.wormholes.util.MaterialBlock) -> adipiscing
    87:119:com.volmit.wormholes.util.GMap match(org.bukkit.Location) -> facilisis
    129:129:com.volmit.wormholes.util.GMap getSchematic() -> cC
    135:138:int hashCode() -> hashCode
    144:168:boolean equals(java.lang.Object) -> equals
    176:177:void clear() -> clear
com.volmit.wormholes.util.VectorTrace -> com.volmit.wormholes.src.initiatives:
    org.bukkit.Location hit -> pl
    11:21:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    25:25:boolean canHit(org.bukkit.Location) -> In
    30:30:org.bukkit.Location getHit() -> cD
com.volmit.wormholes.util.VersionBukkit -> com.volmit.wormholes.src.interfaces:
    com.volmit.wormholes.util.VersionBukkit VU -> pm
    com.volmit.wormholes.util.VersionBukkit V7 -> pn
    com.volmit.wormholes.util.VersionBukkit V8 -> po
    com.volmit.wormholes.util.VersionBukkit V9 -> pp
    com.volmit.wormholes.util.VersionBukkit V11 -> pq
    com.volmit.wormholes.util.VersionBukkit V111 -> pr
    com.volmit.wormholes.util.VersionBukkit V112 -> ps
    com.volmit.wormholes.util.VersionBukkit[] $VALUES -> pt
    5:5:com.volmit.wormholes.util.VersionBukkit[] values() -> values
    5:5:com.volmit.wormholes.util.VersionBukkit valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> cE
    27:32:boolean uc() -> cF
    37:67:com.volmit.wormholes.util.VersionBukkit get() -> cG
    5:13:void <clinit>() -> <clinit>
com.volmit.wormholes.util.VisualEffect -> com.volmit.wormholes.src.methodologies:
    com.volmit.wormholes.util.GList getEffects() -> sticky
    void play(org.bukkit.Location) -> Pellentesque
    void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.W -> com.volmit.wormholes.src.metrics:
    28:28:void <init>() -> <init>
    39:47:boolean visible(org.bukkit.block.Block) -> ipsum
    52:52:org.bukkit.DyeColor getColor(org.bukkit.Location) -> hac
    57:57:boolean isColorable(org.bukkit.block.Block) -> dolor
    63:79:org.bukkit.DyeColor getColor(org.bukkit.block.Block) -> sit
    85:101:void setColor(org.bukkit.block.Block,org.bukkit.DyeColor) -> Lorem
    113:116:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> Lorem
    127:138:org.bukkit.entity.Entity getEntity(int) -> Duis
    153:166:int count(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    183:183:boolean has(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> Lorem
    195:195:int getChunkX(org.bukkit.block.Block) -> amet
    207:207:int getChunkY(org.bukkit.block.Block) -> consectetur
    220:221:void dropXp(org.bukkit.Location,int) -> dolor
    232:232:int getChunkZ(org.bukkit.block.Block) -> adipiscing
    248:255:void take(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> ipsum
    271:279:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> Lorem
    284:291:com.volmit.wormholes.util.GList news(org.bukkit.Location) -> habitasse
    308:316:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> Lorem
    328:328:com.volmit.wormholes.util.GList getBlocks(org.bukkit.Chunk) -> sit
    340:350:com.volmit.wormholes.util.GList getChunklets(org.bukkit.Chunk) -> amet
    362:362:org.bukkit.World getSyncWorld(org.bukkit.World) -> ipsum
    374:381:com.volmit.wormholes.util.GList getChunklets(com.volmit.wormholes.util.GList) -> Vestibulum
    398:465:com.volmit.wormholes.util.MaterialBlock getMaterialBlock(java.lang.String) -> et
    479:491:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> Lorem
    506:507:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> Lorem
    524:525:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> Lorem
    539:540:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> Lorem
    557:558:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> Lorem
    571:572:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> Lorem
    587:588:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> Lorem
    604:614:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> Lorem
    626:633:com.volmit.wormholes.util.GList chunkFaces(org.bukkit.Chunk) -> consectetur
    645:654:com.volmit.wormholes.util.GList blockFaces(org.bukkit.block.Block) -> elit
    666:680:org.bukkit.Location simulateFall(org.bukkit.Location) -> platea
    694:706:com.volmit.wormholes.util.GList chunkRadius(org.bukkit.Chunk,int) -> Lorem
    720:732:com.volmit.wormholes.util.GList blockRadius(org.bukkit.block.Block,int) -> Lorem
    755:787:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> Lorem
    805:812:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> Lorem
    826:826:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    831:831:int chunkDistance(org.bukkit.Chunk,org.bukkit.Chunk) -> Lorem
    836:836:boolean isColored(org.bukkit.block.Block) -> Morbi
com.volmit.wormholes.util.W$1 -> com.volmit.wormholes.src.metrics$1:
    java.lang.Double val$doff -> iX
    org.bukkit.entity.Entity val$e -> pu
    org.bukkit.entity.Entity[] val$result -> iZ
    769:769:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    773:784:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.util.WarpEffect -> com.volmit.wormholes.src.mindshare:
    java.lang.Float power -> ow
    11:13:void <init>(java.lang.Float) -> <init>
    17:41:void play(org.bukkit.Location,org.bukkit.util.Vector) -> dolor
    45:47:com.volmit.wormholes.util.LineParticleManipulator getArm(int) -> tempor
com.volmit.wormholes.util.WarpEffect$1 -> com.volmit.wormholes.src.mindshare$1:
    org.bukkit.util.Vector val$direction -> com
    org.bukkit.Location[] val$start -> pv
    int val$kv -> pw
    com.volmit.wormholes.util.WarpEffect this$0 -> px
    29:29:void <init>(com.volmit.wormholes.util.WarpEffect,java.lang.Integer,org.bukkit.util.Vector,org.bukkit.Location[],int) -> <init>
    33:37:void run() -> run
com.volmit.wormholes.util.WarpEffect$2 -> com.volmit.wormholes.src.mindshare$2:
    int[] val$kv -> py
    int val$m -> pz
    com.volmit.wormholes.util.WarpEffect this$0 -> px
    48:48:void <init>(com.volmit.wormholes.util.WarpEffect,int[],int) -> <init>
    52:61:void play(org.bukkit.Location) -> Pellentesque
com.volmit.wormholes.util.WarpEffect$2$1 -> com.volmit.wormholes.src.mindshare$2$1:
    org.bukkit.Location val$l -> incentivize
    com.volmit.wormholes.util.WarpEffect$2 this$1 -> pA
    54:54:void <init>(com.volmit.wormholes.util.WarpEffect$2,java.lang.Integer,org.bukkit.Location) -> <init>
    58:59:void run() -> run
com.volmit.wormholes.util.Window -> com.volmit.wormholes.src.models:
    com.volmit.wormholes.util.Window open() -> br
    void update() -> update
    com.volmit.wormholes.util.Window close() -> bp
    void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
    com.volmit.wormholes.util.Window build() -> bs
    boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Window setTitle(java.lang.String) -> cursus
    com.volmit.wormholes.util.GList getElements() -> bt
    com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    org.bukkit.entity.Player getViewer() -> orci
    org.bukkit.inventory.Inventory getInventory() -> getInventory
    java.util.UUID getId() -> getId
    com.volmit.wormholes.util.Element getBackground() -> bu
    com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    java.lang.Integer getViewport() -> bv
    com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    boolean isOpen() -> isOpen
com.volmit.wormholes.util.WindowBorder -> com.volmit.wormholes.src.networks:
    com.volmit.wormholes.util.GMap directionSet -> pB
    16:22:void <init>() -> <init>
    35:37:com.volmit.wormholes.util.WindowBorder put(com.volmit.wormholes.util.BorderDirection,int) -> Lorem
    49:69:boolean isValid(com.volmit.wormholes.util.Slot) -> sit
com.volmit.wormholes.util.Worlds -> com.volmit.wormholes.src.niches:
    11:11:void <init>() -> <init>
    20:20:com.volmit.wormholes.util.GList getWorlds() -> cH
    32:32:boolean hasWorld(java.lang.String) -> sodales
    44:44:org.bukkit.World getWorld(java.lang.String) -> getWorld
com.volmit.wormholes.util.Wraith -> com.volmit.wormholes.src.paradigms:
    com.volmit.wormholes.util.ParallelPoolManager poolManager -> pC
    org.bukkit.plugin.Plugin instance -> pD
    9:9:void <init>() -> <init>
    16:17:void registerListener(org.bukkit.event.Listener) -> Lorem
    21:22:void callEvent(org.bukkit.event.Event) -> callEvent
    26:27:void unregisterListener(org.bukkit.event.Listener) -> ipsum
    42:42:int scheduleSyncRepeatingTask(int,int,java.lang.Runnable) -> Lorem
    56:56:int scheduleSyncTask(int,java.lang.Runnable) -> Lorem
    67:68:void cancelTask(int) -> cancelTask
    12:12:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperHandshakingClientSetProtocol -> com.volmit.wormholes.src.partnerships:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getProtocolVersion() -> getProtocolVersion
    57:58:void setProtocolVersion(int) -> setProtocolVersion
    69:69:java.lang.String getServerAddressHostnameOrIp() -> cI
    80:81:void setServerAddressHostnameOrIp(java.lang.String) -> scelerisque
    92:92:int getServerPort() -> getServerPort
    103:104:void setServerPort(int) -> eget
    115:115:com.comphenix.protocol.PacketType$Protocol getNextState() -> cJ
    126:127:void setNextState(com.comphenix.protocol.PacketType$Protocol) -> Lorem
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginClientEncryptionBegin -> com.volmit.wormholes.src.platforms:
    com.comphenix.protocol.PacketType TYPE -> pE
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:byte[] getSharedSecret() -> getSharedSecret
    54:55:void setSharedSecret(byte[]) -> setSharedSecret
    64:64:byte[] getVerifyToken() -> getVerifyToken
    75:76:void setVerifyToken(byte[]) -> setVerifyToken
    23:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginClientStart -> com.volmit.wormholes.src.portals:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    55:56:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerDisconnect -> com.volmit.wormholes.src.relationships:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> cK
    50:50:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> cL
    61:62:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
    67:68:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerEncryptionBegin -> com.volmit.wormholes.src.ROI:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getServerId() -> getServerId
    57:58:void setServerId(java.lang.String) -> setServerId
    67:67:java.security.PublicKey getPublicKey() -> getPublicKey
    78:79:void setPublicKey(java.security.PublicKey) -> setPublicKey
    88:88:byte[] getVerifyToken() -> getVerifyToken
    99:100:void setVerifyToken(byte[]) -> setVerifyToken
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerSetCompression -> com.volmit.wormholes.src.synergies:
    com.comphenix.protocol.PacketType TYPE -> pE
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getThreshold() -> getThreshold
    56:57:void setThreshold(int) -> setThreshold
    23:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerSuccess -> com.volmit.wormholes.src.readiness:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    52:53:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientAbilities -> com.volmit.wormholes.src.schemas:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> cM
    41:42:void setInvulnurable(boolean) -> euismod
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> cN
    57:58:void setCanFly(boolean) -> Pellentesque
    61:61:boolean canInstantlyBuild() -> cO
    65:66:void setCanInstantlyBuild(boolean) -> at
    69:69:float getFlyingSpeed() -> cP
    73:74:void setFlyingSpeed(float) -> elit
    77:77:float getWalkingSpeed() -> cQ
    81:82:void setWalkingSpeed(float) -> Morbi
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientArmAnimation -> com.volmit.wormholes.src.solutions:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBlockDig -> com.volmit.wormholes.src.supply:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    60:60:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> cS
    64:65:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
    75:75:com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType getStatus() -> cT
    84:85:void setStatus(com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType) -> Lorem
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBlockPlace -> com.volmit.wormholes.src.chains:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> cU
    42:43:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    46:46:long getTimestamp() -> getTimestamp
    50:51:void setTimestamp(long) -> Pellentesque
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBoatMove -> com.volmit.wormholes.src.systems:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:boolean getLeftOar() -> cV
    42:43:void setLeftOar(boolean) -> iaculis
    46:46:boolean getRightOar() -> cW
    50:51:void setRightOar(boolean) -> urna
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientChat -> com.volmit.wormholes.src.technologies:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:java.lang.String getMessage() -> getMessage
    51:52:void setMessage(java.lang.String) -> setMessage
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientClientCommand -> com.volmit.wormholes.src.users:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand getAction() -> cX
    54:55:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientCloseWindow -> com.volmit.wormholes.src.vortals:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(int) -> semper
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientCustomPayload -> com.volmit.wormholes.src.obfuscate:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> velit
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> cZ
    74:77:byte[] getContents() -> da
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientEnchantItem -> com.volmit.wormholes.src.star:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(byte) -> elit
    65:65:int getEnchantment() -> db
    74:75:void setEnchantment(int) -> aliquam
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientEntityAction -> com.volmit.wormholes.src.see:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction getAction() -> dd
    98:99:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction) -> Lorem
    109:109:int getJumpBoost() -> de
    118:119:void setJumpBoost(int) -> consequat
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientFlying -> com.volmit.wormholes.src.definition:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:boolean getOnGround() -> df
    53:54:void setOnGround(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientHeldItemSlot -> com.volmit.wormholes.src.show:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> neque
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientKeepAlive -> com.volmit.wormholes.src.verb:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> dg
    51:52:void setKeepAliveId(int) -> sagittis
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientLook -> com.volmit.wormholes.src.confuse:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getYaw() -> getYaw
    53:54:void setYaw(float) -> setYaw
    64:64:float getPitch() -> getPitch
    73:74:void setPitch(float) -> setPitch
    84:84:boolean getOnGround() -> df
    93:94:void setOnGround(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientPosition -> com.volmit.wormholes.src.baffle:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:boolean getOnGround() -> df
    114:115:void setOnGround(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientPositionLook -> com.volmit.wormholes.src.Relevance:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    145:145:boolean getOnGround() -> df
    154:155:void setOnGround(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientResourcePackStatus -> com.volmit.wormholes.src.A:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus getResult() -> dh
    56:57:void setResult(com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSetCreativeSlot -> com.volmit.wormholes.src.ZComplexity:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getSlot() -> getSlot
    56:57:void setSlot(int) -> neque
    65:65:org.bukkit.inventory.ItemStack getClickedItem() -> di
    74:75:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSettings -> com.volmit.wormholes.src.Length:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getLocale() -> getLocale
    54:55:void setLocale(java.lang.String) -> setLocale
    65:65:int getViewDistance() -> getViewDistance
    74:75:void setViewDistance(byte) -> setViewDistance
    85:85:com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility getChatFlags() -> dj
    94:95:void setChatFlags(com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility) -> Lorem
    105:105:boolean getChatColours() -> dk
    114:115:void setChatColours(boolean) -> setChatColours
    125:125:int getDisplayedSkinParts() -> dl
    134:135:void setDisplayedSkinParts(int) -> lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSpectate -> com.volmit.wormholes.src.lists:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:java.util.UUID getTargetPlayer() -> dm
    53:54:void setTargetPlayer(java.util.UUID) -> adipiscing
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSteerVehicle -> com.volmit.wormholes.src.blocks:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getSideways() -> dn
    53:54:void setSideways(float) -> pulvinar
    64:64:float getForward() -> do
    73:74:void setForward(float) -> vulputate
    77:77:boolean isJump() -> dp
    81:82:void setJump(boolean) -> ac
    85:85:boolean isUnmount() -> dq
    89:90:void setUnmount(boolean) -> enim
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTabComplete -> com.volmit.wormholes.src.Common:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:java.lang.String getText() -> getText
    52:53:void setText(java.lang.String) -> setText
    61:61:com.comphenix.protocol.wrappers.BlockPosition getHasPosition() -> dr
    70:71:void setHasPosition(com.comphenix.protocol.wrappers.BlockPosition) -> ipsum
    82:82:com.comphenix.protocol.wrappers.BlockPosition getLookedAtBlock() -> ds
    91:92:void setLookedAtBlock(com.comphenix.protocol.wrappers.BlockPosition) -> dolor
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTeleportAccept -> com.volmit.wormholes.src.Informal:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getTeleportId() -> dt
    55:56:void setTeleportId(int) -> vel
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTransaction -> com.volmit.wormholes.src.Synonyms:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(byte) -> elit
    65:65:short getActionNumber() -> du
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> dv
    94:95:void setAccepted(boolean) -> posuere
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUpdateSign -> com.volmit.wormholes.src.for:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    63:63:java.lang.String[] getLines() -> getLines
    72:78:void setLines(java.lang.String[]) -> in
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUseEntity -> com.volmit.wormholes.src.b:
    com.comphenix.protocol.PacketType TYPE -> pE
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getTargetID() -> dw
    58:58:org.bukkit.entity.Entity getTarget(org.bukkit.World) -> sit
    68:68:org.bukkit.entity.Entity getTarget(com.comphenix.protocol.events.PacketEvent) -> ipsum
    77:78:void setTargetID(int) -> Quisque
    86:86:com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction getType() -> dx
    95:96:void setType(com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction) -> Lorem
    106:106:org.bukkit.util.Vector getTargetVector() -> dy
    115:116:void setTargetVector(org.bukkit.util.Vector) -> at
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUseItem -> com.volmit.wormholes.src.c:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    57:58:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    61:61:com.comphenix.protocol.wrappers.EnumWrappers$Direction getFace() -> dz
    65:66:void setFace(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> ipsum
    69:69:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> cU
    73:74:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    85:85:float getCursorPositionX() -> dA
    94:95:void setCursorPositionX(float) -> dictum
    106:106:float getCursorPositionY() -> dB
    115:116:void setCursorPositionY(float) -> Vestibulum
    127:127:float getCursorPositionZ() -> dC
    136:137:void setCursorPositionZ(float) -> in
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientVehicleMove -> com.volmit.wormholes.src.d:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientWindowClick -> com.volmit.wormholes.src.f:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getWindowId() -> cY
    55:56:void setWindowId(int) -> semper
    66:66:int getSlot() -> getSlot
    75:76:void setSlot(int) -> neque
    86:86:int getButton() -> getButton
    95:96:void setButton(int) -> congue
    107:107:short getActionNumber() -> du
    116:117:void setActionNumber(short) -> ipsum
    125:125:org.bukkit.inventory.ItemStack getClickedItem() -> di
    134:135:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
    138:138:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType getShift() -> dD
    142:143:void setShift(com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType -> com.volmit.wormholes.src.f$Lorem:
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP -> pF
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_MOVE -> pG
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType SWAP -> pH
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType CLONE -> pI
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType THROW -> pJ
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_CRAFT -> pK
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP_ALL -> pL
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] $VALUES -> pM
    145:145:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] values() -> values
    145:145:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType valueOf(java.lang.String) -> valueOf
    145:145:void <init>(java.lang.String,int) -> <init>
    145:146:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAbilities -> com.volmit.wormholes.src.g:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> cM
    41:42:void setInvulnurable(boolean) -> euismod
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> cN
    57:58:void setCanFly(boolean) -> Pellentesque
    61:61:boolean canInstantlyBuild() -> cO
    65:66:void setCanInstantlyBuild(boolean) -> at
    69:69:float getFlyingSpeed() -> cP
    73:74:void setFlyingSpeed(float) -> elit
    77:77:float getWalkingSpeed() -> cQ
    81:82:void setWalkingSpeed(float) -> Morbi
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAnimation -> com.volmit.wormholes.src.h:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getAnimation() -> dE
    97:98:void setAnimation(int) -> vitae
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAttachEntity -> com.volmit.wormholes.src.i:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getVehicleId() -> dF
    97:98:void setVehicleId(int) -> ornare
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBed -> com.volmit.wormholes.src.j:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    98:99:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockAction -> com.volmit.wormholes.src.k:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    67:67:int getByte1() -> dG
    76:77:void setByte1(int) -> Integer
    87:87:int getByte2() -> dH
    96:97:void setByte2(int) -> commodo
    107:107:org.bukkit.Material getBlockType() -> dI
    116:117:void setBlockType(org.bukkit.Material) -> dolor
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockBreakAnimation -> com.volmit.wormholes.src.l:
    com.comphenix.protocol.PacketType TYPE -> pE
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> dc
    59:60:void setEntityID(int) -> lectus
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    99:100:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    110:110:int getDestroyStage() -> dJ
    119:120:void setDestroyStage(int) -> ante
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockChange -> com.volmit.wormholes.src.m:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    58:59:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    68:68:org.bukkit.Location getBukkitLocation(org.bukkit.World) -> amet
    77:77:com.comphenix.protocol.wrappers.WrappedBlockData getBlockData() -> dK
    86:87:void setBlockData(com.comphenix.protocol.wrappers.WrappedBlockData) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCamera -> com.volmit.wormholes.src.n:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCameraId() -> dL
    51:52:void setCameraId(int) -> cursus
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerChat -> com.volmit.wormholes.src.o:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedChatComponent getMessage() -> dM
    53:53:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> cL
    62:63:void setMessage(com.comphenix.protocol.wrappers.WrappedChatComponent) -> dolor
    70:71:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
    82:82:byte getPosition() -> getPosition
    91:92:void setPosition(byte) -> setPosition
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCloseWindow -> com.volmit.wormholes.src.p:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(int) -> semper
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCollect -> com.volmit.wormholes.src.q:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCollectedEntityId() -> dN
    51:52:void setCollectedEntityId(int) -> suscipit
    60:60:int getCollectorEntityId() -> dO
    69:70:void setCollectorEntityId(int) -> Mauris
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCombatEvent -> com.volmit.wormholes.src.r:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType getEvent() -> dP
    56:57:void setEvent(com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType) -> Lorem
    62:66:int getDuration() -> getDuration
    70:75:void setDuration(int) -> setDuration
    80:84:int getPlayerID() -> dQ
    88:93:void setPlayerId(int) -> mollis
    96:102:int getEntityID() -> dc
    109:115:void setEntityId(int) -> setEntityId
    122:126:java.lang.String getMessage() -> getMessage
    130:135:void setMessage(java.lang.String) -> setMessage
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCombatEvent$1 -> com.volmit.wormholes.src.r$1:
    int[] $SwitchMap$com$comphenix$protocol$wrappers$EnumWrappers$CombatEventType -> pN
    97:97:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCustomPayload -> com.volmit.wormholes.src.s:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> velit
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> cZ
    74:77:byte[] getContents() -> da
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCustomSoundEffect -> com.volmit.wormholes.src.t:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getSoundName() -> dR
    56:57:void setSoundName(java.lang.String) -> Donec
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> dS
    77:78:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    89:89:int getX() -> getX
    98:99:void setX(int) -> setX
    110:110:int getY() -> getY
    119:120:void setY(int) -> setY
    131:131:int getZ() -> getZ
    140:141:void setZ(int) -> setZ
    151:151:float getVolume() -> dT
    160:161:void setVolume(float) -> purus
    171:171:float getPitch() -> getPitch
    180:181:void setPitch(float) -> setPitch
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntity -> com.volmit.wormholes.src.u:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityDestroy -> com.volmit.wormholes.src.v:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    55:55:int[] getEntityIDs() -> dU
    64:65:void setEntityIds(int[]) -> Lorem
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityEffect -> com.volmit.wormholes.src.w:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEffectID() -> dV
    97:98:void setEffectID(byte) -> Morbi
    106:106:byte getAmplifier() -> dW
    115:116:void setAmplifier(byte) -> pulvinar
    124:124:int getDuration() -> getDuration
    133:134:void setDuration(int) -> setDuration
    142:142:boolean getHideParticles() -> dX
    151:152:void setHideParticles(boolean) -> molestie
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityEquipment -> com.volmit.wormholes.src.x:
    com.comphenix.protocol.PacketType TYPE -> pE
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dc
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    84:84:com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot getSlot() -> dY
    88:89:void setSlot(com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot) -> Lorem
    99:99:org.bukkit.inventory.ItemStack getItem() -> getItem
    108:109:void setItem(org.bukkit.inventory.ItemStack) -> setItem
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityHeadRotation -> com.volmit.wormholes.src.y:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:byte getHeadYaw() -> dZ
    98:99:void setHeadYaw(byte) -> vulputate
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityLook -> com.volmit.wormholes.src.z:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    86:86:float getYaw() -> getYaw
    95:96:void setYaw(float) -> setYaw
    104:104:float getPitch() -> getPitch
    113:114:void setPitch(float) -> setPitch
    122:122:boolean getOnGround() -> df
    131:132:void setOnGround(boolean) -> Proin
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityMetadata -> com.volmit.wormholes.src.B:
    com.comphenix.protocol.PacketType TYPE -> pE
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> dc
    61:62:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getMetadata() -> getMetadata
    99:100:void setMetadata(java.util.List) -> setMetadata
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityMoveLook18 -> com.volmit.wormholes.src.C:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:double getDx() -> ea
    63:69:void setDx(double) -> mi
    80:80:double getDy() -> eb
    93:98:void setDy(double) -> euismod
    109:109:double getDz() -> ec
    122:127:void setDz(double) -> Pellentesque
    136:136:float getYaw() -> getYaw
    147:148:void setYaw(float) -> setYaw
    157:157:float getPitch() -> getPitch
    168:169:void setPitch(float) -> setPitch
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityStatus -> com.volmit.wormholes.src.D:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEntityStatus() -> ed
    97:98:void setEntityStatus(byte) -> dictum
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityTeleport -> com.volmit.wormholes.src.E:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getEntityID() -> dc
    56:57:void setEntityID(int) -> lectus
    66:66:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    76:76:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    80:80:double getX() -> getX
    84:85:void setX(double) -> setX
    88:88:double getY() -> getY
    92:93:void setY(double) -> setY
    96:96:double getZ() -> getZ
    100:101:void setZ(double) -> setZ
    109:109:float getYaw() -> getYaw
    118:119:void setYaw(float) -> setYaw
    127:127:float getPitch() -> getPitch
    136:137:void setPitch(float) -> setPitch
    140:140:boolean getOnGround() -> df
    144:145:void setOnGround(boolean) -> Proin
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityVelocity -> com.volmit.wormholes.src.F:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    87:87:double getVelocityX() -> ee
    96:97:void setVelocityX(double) -> at
    105:105:double getVelocityY() -> ef
    114:115:void setVelocityY(double) -> iaculis
    123:123:double getVelocityZ() -> eg
    132:133:void setVelocityZ(double) -> urna
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerExperience -> com.volmit.wormholes.src.G:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getExperienceBar() -> eh
    53:54:void setExperienceBar(float) -> non
    62:62:int getLevel() -> getLevel
    71:72:void setLevel(int) -> setLevel
    80:80:int getTotalExperience() -> getTotalExperience
    89:90:void setTotalExperience(int) -> setTotalExperience
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerExplosion -> com.volmit.wormholes.src.H:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    63:63:double getY() -> getY
    72:73:void setY(double) -> setY
    81:81:double getZ() -> getZ
    90:91:void setZ(double) -> setZ
    101:101:float getRadius() -> getRadius
    110:111:void setRadius(float) -> setRadius
    121:121:java.util.List getRecors() -> ei
    130:131:void setRecords(java.util.List) -> amet
    134:134:float getPlayerVelocityX() -> ej
    138:139:void setPlayerVelocityX(float) -> mi
    142:142:float getPlayerVelocityY() -> ek
    146:147:void setPlayerVelocityY(float) -> euismod
    150:150:float getPlayerVelocityZ() -> el
    154:155:void setPlayerVelocityZ(float) -> Pellentesque
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerGameStateChange -> com.volmit.wormholes.src.I:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:int getReason() -> getReason
    52:53:void setReason(int) -> convallis
    63:63:float getValue() -> getValue
    72:73:void setValue(float) -> setValue
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerHeldItemSlot -> com.volmit.wormholes.src.J:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> neque
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerKeepAlive -> com.volmit.wormholes.src.K:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> dg
    51:52:void setKeepAliveId(int) -> sagittis
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerKickDisconnect -> com.volmit.wormholes.src.L:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> cK
    56:57:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerLogin -> com.volmit.wormholes.src.M:
    com.comphenix.protocol.PacketType TYPE -> pE
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dc
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> em
    101:102:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    112:112:int getDimension() -> getDimension
    121:122:void setDimension(int) -> setDimension
    132:132:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> en
    141:142:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    152:152:int getMaxPlayers() -> getMaxPlayers
    161:162:void setMaxPlayers(int) -> setMaxPlayers
    172:172:org.bukkit.WorldType getLevelType() -> eo
    181:182:void setLevelType(org.bukkit.WorldType) -> Lorem
    190:190:boolean getReducedDebugInfo() -> ep
    199:200:void setReducedDebugInfo(boolean) -> setReducedDebugInfo
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMap -> com.volmit.wormholes.src.N:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getItemDamage() -> eq
    53:54:void setItemDamage(int) -> viverra
    62:62:byte getScale() -> er
    71:72:void setScale(byte) -> Vestibulum
    75:75:boolean getTrackingPosition() -> es
    79:80:void setTrackingPosition(boolean) -> odio
    83:83:java.lang.Object[] getMapIcons() -> ev
    87:88:void setMapIcons(java.lang.Object[]) -> dolor
    91:91:int getColumns() -> getColumns
    95:96:void setColumns(int) -> setColumns
    99:99:int getRows() -> getRows
    103:104:void setRows(int) -> setRows
    107:107:int getX() -> getX
    111:112:void setX(int) -> setX
    115:115:int getZ() -> getZ
    119:120:void setZ(int) -> setZ
    123:123:byte[] getData() -> getData
    127:128:void setData(byte[]) -> setData
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMapChunk -> com.volmit.wormholes.src.O:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getChunkX() -> getChunkX
    53:54:void setChunkX(int) -> lacus
    64:64:int getChunkZ() -> getChunkZ
    73:74:void setChunkZ(int) -> eu
    77:77:java.lang.Object getChunkMap() -> ew
    81:82:void setChunkMap(java.lang.Object) -> ac
    94:94:boolean getGroundUpContinuous() -> ey
    103:104:void setGroundUpContinuous(boolean) -> a
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMount -> com.volmit.wormholes.src.P:
    com.comphenix.protocol.PacketType TYPE -> pE
    38:40:void <init>() -> <init>
    43:44:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    54:54:int getEntityID() -> dc
    64:64:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    74:74:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:84:void setEntityID(int) -> lectus
    87:87:int[] getPassengerIds() -> ez
    91:92:void setPassengerIds(int[]) -> ipsum
    95:95:java.util.List getPassengers(com.comphenix.protocol.events.PacketEvent) -> dolor
    99:110:java.util.List getPassengers(org.bukkit.World) -> consectetur
    114:120:void setPassengers(java.util.List) -> consectetur
    35:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange -> com.volmit.wormholes.src.Q:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.ChunkCoordIntPair getChunk() -> getChunk
    54:55:void setChunk(com.comphenix.protocol.wrappers.ChunkCoordIntPair) -> Lorem
    63:63:com.comphenix.protocol.wrappers.MultiBlockChangeInfo[] getRecords() -> eA
    72:73:void setRecords(com.comphenix.protocol.wrappers.MultiBlockChangeInfo[]) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerNamedEntitySpawn -> com.volmit.wormholes.src.R:
    com.comphenix.protocol.PacketType TYPE -> pE
    37:39:void <init>() -> <init>
    42:43:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    53:53:int getEntityID() -> dc
    62:63:void setEntityID(int) -> lectus
    72:72:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    82:82:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    93:93:java.util.UUID getPlayerUUID() -> eB
    102:103:void setPlayerUUID(java.util.UUID) -> elit
    111:111:org.bukkit.util.Vector getPosition() -> eC
    120:123:void setPosition(org.bukkit.util.Vector) -> iaculis
    126:126:double getX() -> getX
    130:131:void setX(double) -> setX
    134:134:double getY() -> getY
    138:139:void setY(double) -> setY
    142:142:double getZ() -> getZ
    146:147:void setZ(double) -> setZ
    155:155:float getYaw() -> getYaw
    164:165:void setYaw(float) -> setYaw
    173:173:float getPitch() -> getPitch
    182:183:void setPitch(float) -> setPitch
    193:193:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> eD
    202:203:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
    33:33:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerNamedSoundEffect -> com.volmit.wormholes.src.S:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:org.bukkit.Sound getSoundEffect() -> eE
    45:46:void setSoundEffect(org.bukkit.Sound) -> ipsum
    49:49:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> dS
    53:54:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    64:64:int getEffectPositionX() -> eF
    73:74:void setEffectPositionX(int) -> Phasellus
    84:84:int getEffectPositionY() -> eG
    93:94:void setEffectPositionY(int) -> accumsan
    104:104:int getEffectPositionZ() -> eH
    113:114:void setEffectPositionZ(int) -> egestas
    124:124:float getVolume() -> dT
    133:134:void setVolume(float) -> purus
    144:144:float getPitch() -> getPitch
    153:154:void setPitch(float) -> setPitch
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerOpenSignEditor -> com.volmit.wormholes.src.T:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerOpenWindow -> com.volmit.wormholes.src.U:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getWindowID() -> eI
    59:60:void setWindowID(int) -> Praesent
    70:70:java.lang.String getInventoryType() -> eJ
    79:80:void setInventoryType(java.lang.String) -> quam
    90:90:com.comphenix.protocol.wrappers.WrappedChatComponent getWindowTitle() -> eK
    99:100:void setWindowTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> sit
    111:111:int getNumberOfSlots() -> eL
    120:121:void setNumberOfSlots(int) -> eros
    131:131:int getEntityID() -> dc
    140:141:void setEntityID(int) -> lectus
    150:150:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    160:160:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPlayerInfo -> com.volmit.wormholes.src.V:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction getAction() -> eM
    45:46:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction) -> Lorem
    49:49:java.util.List getData() -> eN
    53:54:void setData(java.util.List) -> adipiscing
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPlayerListHeaderFooter -> com.volmit.wormholes.src.W:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getHeader() -> eO
    53:54:void setHeader(com.comphenix.protocol.wrappers.WrappedChatComponent) -> amet
    62:62:com.comphenix.protocol.wrappers.WrappedChatComponent getFooter() -> eP
    71:72:void setFooter(com.comphenix.protocol.wrappers.WrappedChatComponent) -> consectetur
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPosition -> com.volmit.wormholes.src.X:
    com.comphenix.protocol.PacketType TYPE -> pE
    java.lang.Class FLAGS_CLASS -> pO
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:double getX() -> getX
    59:60:void setX(double) -> setX
    70:70:double getY() -> getY
    79:80:void setY(double) -> setY
    90:90:double getZ() -> getZ
    99:100:void setZ(double) -> setZ
    110:110:float getYaw() -> getYaw
    119:120:void setYaw(float) -> setYaw
    130:130:float getPitch() -> getPitch
    139:140:void setPitch(float) -> setPitch
    151:154:com.comphenix.protocol.reflect.StructureModifier getFlagsModifier() -> eQ
    158:158:java.util.Set getFlags() -> eR
    162:163:void setFlags(java.util.Set) -> Lorem
    31:143:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag -> com.volmit.wormholes.src.X$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X -> pP
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y -> pQ
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Z -> pR
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y_ROT -> pS
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X_ROT -> pT
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] $VALUES -> pU
    146:146:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] values() -> values
    146:146:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag valueOf(java.lang.String) -> valueOf
    146:146:void <init>(java.lang.String,int) -> <init>
    146:147:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRelEntityMove -> com.volmit.wormholes.src.Y:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    82:82:int getDx() -> eS
    86:87:void setDx(int) -> et
    90:90:int getDy() -> eT
    94:95:void setDy(int) -> sodales
    98:98:int getDz() -> eU
    102:103:void setDz(int) -> scelerisque
    111:111:boolean getOnGround() -> df
    120:121:void setOnGround(boolean) -> Proin
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRelEntityMove18 -> com.volmit.wormholes.src.Z:
    com.comphenix.protocol.PacketType TYPE -> pE
    12:14:void <init>() -> <init>
    18:19:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    30:30:double getDx() -> ea
    43:48:void setDx(double) -> mi
    59:59:double getDy() -> eb
    72:77:void setDy(double) -> euismod
    88:88:double getDz() -> ec
    101:106:void setDz(double) -> Pellentesque
    8:8:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRelEntityMoveLook -> com.volmit.wormholes.src.aa:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dc
    59:60:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    83:83:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    93:93:double getDx() -> ea
    104:105:void setDx(double) -> mi
    114:114:double getDy() -> eb
    125:126:void setDy(double) -> euismod
    135:135:double getDz() -> ec
    146:147:void setDz(double) -> Pellentesque
    156:156:float getYaw() -> getYaw
    167:168:void setYaw(float) -> setYaw
    177:177:float getPitch() -> getPitch
    188:189:void setPitch(float) -> setPitch
    198:198:boolean getOnGround() -> df
    209:210:void setOnGround(boolean) -> Proin
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRemoveEntityEffect -> com.volmit.wormholes.src.ab:
    com.comphenix.protocol.PacketType TYPE -> pE
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> dc
    59:60:void setEntityID(int) -> lectus
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:83:org.bukkit.potion.PotionEffectType getEffect() -> eV
    87:88:void setEffect(org.bukkit.potion.PotionEffectType) -> ipsum
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerResourcePackSend -> com.volmit.wormholes.src.ae:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getUrl() -> getUrl
    54:55:void setUrl(java.lang.String) -> setUrl
    69:69:java.lang.String getHash() -> getHash
    78:79:void setHash(java.lang.String) -> malesuada
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRespawn -> com.volmit.wormholes.src.af:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getDimension() -> getDimension
    57:58:void setDimension(int) -> setDimension
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> en
    77:78:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> em
    98:99:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    109:109:org.bukkit.WorldType getLevelType() -> eo
    118:119:void setLevelType(org.bukkit.WorldType) -> Lorem
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardDisplayObjective -> com.volmit.wormholes.src.ag:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getPosition() -> getPosition
    55:56:void setPosition(int) -> setPosition
    66:66:java.lang.String getScoreName() -> getScoreName
    75:76:void setScoreName(java.lang.String) -> setScoreName
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective -> com.volmit.wormholes.src.ah:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    63:63:java.lang.String getName() -> getName
    72:73:void setName(java.lang.String) -> setName
    83:83:java.lang.String getDisplayName() -> getDisplayName
    92:93:void setDisplayName(java.lang.String) -> setDisplayName
    103:103:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay getHealthDisplay() -> eW
    113:114:void setHealthDisplay(com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay) -> Lorem
    125:125:int getMode() -> getMode
    134:135:void setMode(int) -> setMode
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay -> com.volmit.wormholes.src.ah$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay INTEGER -> pV
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay HEARTS -> pW
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] $VALUES -> pX
    137:137:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] values() -> values
    137:137:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay valueOf(java.lang.String) -> valueOf
    137:137:void <init>(java.lang.String,int) -> <init>
    137:138:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode -> com.volmit.wormholes.src.ah$ipsum:
    int ADD_OBJECTIVE -> pY
    int REMOVE_OBJECTIVE -> pZ
    int UPDATE_VALUE -> qa
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode INSTANCE -> qb
    43:43:void <init>() -> <init>
    51:51:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode getInstance() -> eX
    48:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardScore -> com.volmit.wormholes.src.ai:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getScoreName() -> getScoreName
    55:56:void setScoreName(java.lang.String) -> setScoreName
    66:66:java.lang.String getObjectiveName() -> eY
    75:76:void setObjectiveName(java.lang.String) -> quis
    87:87:int getValue() -> getValue
    96:97:void setValue(int) -> setValue
    100:100:com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction getAction() -> eZ
    104:105:void setScoreboardAction(com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam -> com.volmit.wormholes.src.aj:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    68:68:java.lang.String getName() -> getName
    77:78:void setName(java.lang.String) -> setName
    88:88:java.lang.String getDisplayName() -> getDisplayName
    97:98:void setDisplayName(java.lang.String) -> setDisplayName
    109:109:java.lang.String getPrefix() -> getPrefix
    118:119:void setPrefix(java.lang.String) -> setPrefix
    130:130:java.lang.String getSuffix() -> getSuffix
    139:140:void setSuffix(java.lang.String) -> setSuffix
    151:151:java.lang.String getNameTagVisibility() -> getNameTagVisibility
    160:161:void setNameTagVisibility(java.lang.String) -> setNameTagVisibility
    171:171:int getColor() -> getColor
    180:181:void setColor(int) -> setColor
    189:189:java.lang.String getCollisionRule() -> getCollisionRule
    197:198:void setCollisionRule(java.lang.String) -> setCollisionRule
    210:211:java.util.List getPlayers() -> getPlayers
    220:221:void setPlayers(java.util.List) -> elit
    233:233:int getMode() -> getMode
    242:243:void setMode(int) -> setMode
    263:263:int getPackOptionData() -> fa
    273:274:void setPackOptionData(int) -> velit
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode -> com.volmit.wormholes.src.aj$Lorem:
    int TEAM_CREATED -> qc
    int TEAM_REMOVED -> qd
    int TEAM_UPDATED -> qe
    int PLAYERS_ADDED -> qf
    int PLAYERS_REMOVED -> qg
    com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode INSTANCE -> qh
    46:46:void <init>() -> <init>
    56:56:com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode getInstance() -> fb
    53:53:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerServerDifficulty -> com.volmit.wormholes.src.ak:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> en
    55:56:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetCooldown -> com.volmit.wormholes.src.al:
    java.lang.Class ITEM_CLASS -> qi
    com.comphenix.protocol.PacketType TYPE -> pE
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:46:org.bukkit.Material getItem() -> fc
    50:53:void setItem(org.bukkit.Material) -> sit
    56:56:int getTicks() -> fd
    60:61:void setTicks(int) -> Donec
    30:30:java.lang.Class access$100() -> fe
    31:33:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetCooldown$1 -> com.volmit.wormholes.src.al$1:
com.volmit.wormholes.util.WrapperPlayServerSetCooldown$ItemConverter -> com.volmit.wormholes.src.al$Lorem:
    com.comphenix.protocol.reflect.accessors.MethodAccessor getMaterial -> qj
    com.comphenix.protocol.reflect.accessors.MethodAccessor getItem -> qk
    63:63:void <init>() -> <init>
    69:76:org.bukkit.Material getSpecific(java.lang.Object) -> enim
    81:88:java.lang.Object getGeneric(java.lang.Class,org.bukkit.Material) -> Lorem
    93:93:java.lang.Class getSpecificType() -> getSpecificType
    63:63:java.lang.Object getGeneric(java.lang.Class,java.lang.Object) -> getGeneric
    63:63:java.lang.Object getSpecific(java.lang.Object) -> getSpecific
    63:63:void <init>(com.volmit.wormholes.util.WrapperPlayServerSetCooldown$1) -> <init>
    64:65:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetSlot -> com.volmit.wormholes.src.am:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getWindowId() -> cY
    60:61:void setWindowId(int) -> semper
    71:71:int getSlot() -> getSlot
    80:81:void setSlot(int) -> neque
    89:89:org.bukkit.inventory.ItemStack getSlotData() -> ff
    98:99:void setSlotData(org.bukkit.inventory.ItemStack) -> purus
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity -> com.volmit.wormholes.src.an:
    com.comphenix.protocol.PacketType TYPE -> pE
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> ql
    86:88:void <init>() -> <init>
    91:92:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    95:96:void <init>(org.bukkit.entity.Entity,int,int) -> <init>
    101:106:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity,int,int) -> Lorem
    115:115:int getEntityID() -> dc
    125:125:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    135:135:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    144:145:void setEntityID(int) -> lectus
    148:148:java.util.UUID getUniqueId() -> getUniqueId
    152:153:void setUniqueId(java.util.UUID) -> setUniqueId
    163:163:double getX() -> getX
    172:173:void setX(double) -> setX
    183:183:double getY() -> getY
    192:193:void setY(double) -> setY
    203:203:double getZ() -> getZ
    212:213:void setZ(double) -> setZ
    223:223:double getOptionalSpeedX() -> fg
    232:233:void setOptionalSpeedX(double) -> Proin
    243:243:double getOptionalSpeedY() -> fh
    252:253:void setOptionalSpeedY(double) -> ac
    263:263:double getOptionalSpeedZ() -> fi
    272:273:void setOptionalSpeedZ(double) -> enim
    281:281:float getPitch() -> getPitch
    290:291:void setPitch(float) -> setPitch
    299:299:float getYaw() -> getYaw
    308:309:void setYaw(float) -> setYaw
    317:317:int getType() -> getType
    326:327:void setType(int) -> setType
    364:364:int getObjectData() -> fj
    376:377:void setObjectData(int) -> quam
    34:34:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes -> com.volmit.wormholes.src.an$Lorem:
    int BOAT -> qm
    int ITEM_STACK -> qn
    int AREA_EFFECT_CLOUD -> qo
    int MINECART -> qp
    int ACTIVATED_TNT -> qq
    int ENDER_CRYSTAL -> qr
    int TIPPED_ARROW_PROJECTILE -> qs
    int SNOWBALL_PROJECTILE -> qt
    int EGG_PROJECTILE -> qu
    int GHAST_FIREBALL -> qv
    int BLAZE_FIREBALL -> qw
    int THROWN_ENDERPEARL -> qx
    int WITHER_SKULL_PROJECTILE -> qy
    int SHULKER_BULLET -> qz
    int FALLING_BLOCK -> qA
    int ITEM_FRAME -> qB
    int EYE_OF_ENDER -> qC
    int THROWN_POTION -> qD
    int THROWN_EXP_BOTTLE -> qE
    int FIREWORK_ROCKET -> qF
    int LEASH_KNOT -> qG
    int ARMORSTAND -> qH
    int FISHING_FLOAT -> qI
    int SPECTRAL_ARROW -> qJ
    int DRAGON_FIREBALL -> qK
    com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes INSTANCE -> qL
    43:43:void <init>() -> <init>
    81:81:com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes getInstance() -> fk
    73:73:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityExperienceOrb -> com.volmit.wormholes.src.ao:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:double getX() -> getX
    98:99:void setX(double) -> setX
    109:109:double getY() -> getY
    118:119:void setY(double) -> setY
    129:129:double getZ() -> getZ
    138:139:void setZ(double) -> setZ
    149:149:int getCount() -> getCount
    158:159:void setCount(int) -> setCount
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityLiving -> com.volmit.wormholes.src.ap:
    com.comphenix.protocol.PacketType TYPE -> pE
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> ql
    41:43:void <init>() -> <init>
    46:47:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:51:void <init>(org.bukkit.entity.Entity) -> <init>
    55:59:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity) -> mi
    68:68:int getEntityID() -> dc
    78:78:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    88:88:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:java.util.UUID getUniqueId() -> getUniqueId
    96:97:void setUniqueId(java.util.UUID) -> setUniqueId
    105:106:void setEntityID(int) -> lectus
    115:115:org.bukkit.entity.EntityType getType() -> getType
    125:126:void setType(org.bukkit.entity.EntityType) -> ipsum
    136:136:double getX() -> getX
    145:146:void setX(double) -> setX
    156:156:double getY() -> getY
    165:166:void setY(double) -> setY
    176:176:double getZ() -> getZ
    185:186:void setZ(double) -> setZ
    194:194:float getYaw() -> getYaw
    203:204:void setYaw(float) -> setYaw
    212:212:float getPitch() -> getPitch
    221:222:void setPitch(float) -> setPitch
    230:230:float getHeadPitch() -> fl
    239:240:void setHeadPitch(float) -> at
    248:248:double getVelocityX() -> ee
    257:258:void setVelocityX(double) -> at
    266:266:double getVelocityY() -> ef
    275:276:void setVelocityY(double) -> iaculis
    284:284:double getVelocityZ() -> eg
    293:294:void setVelocityZ(double) -> urna
    304:304:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> eD
    313:314:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
    35:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityPainting -> com.volmit.wormholes.src.aq:
    com.comphenix.protocol.PacketType TYPE -> pE
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dc
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    91:91:java.lang.String getTitle() -> getTitle
    100:101:void setTitle(java.lang.String) -> setTitle
    111:111:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    120:121:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    124:124:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> cS
    128:129:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityWeather -> com.volmit.wormholes.src.ar:
    com.comphenix.protocol.PacketType TYPE -> pE
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dc
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:int getType() -> getType
    98:99:void setType(int) -> setType
    109:109:double getX() -> getX
    118:119:void setX(double) -> setX
    129:129:double getY() -> getY
    138:139:void setY(double) -> setY
    149:149:double getZ() -> getZ
    158:159:void setZ(double) -> setZ
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnPosition -> com.volmit.wormholes.src.as:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerStatistic -> com.volmit.wormholes.src.au:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    40:40:java.util.Map getStatistics() -> getStatistics
    44:45:void setStatistics(java.util.Map) -> ipsum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTabComplete -> com.volmit.wormholes.src.av:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    56:56:java.lang.String[] getMatches() -> fm
    65:66:void setMatches(java.lang.String[]) -> purus
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTileEntityData -> com.volmit.wormholes.src.aw:
    com.comphenix.protocol.PacketType TYPE -> pE
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    65:65:int getAction() -> getAction
    74:75:void setAction(int) -> setAction
    85:85:com.comphenix.protocol.wrappers.nbt.NbtBase getNbtData() -> fn
    94:95:void setNbtData(com.comphenix.protocol.wrappers.nbt.NbtBase) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTitle -> com.volmit.wormholes.src.ax:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$TitleAction getAction() -> fo
    53:54:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$TitleAction) -> Lorem
    64:64:com.comphenix.protocol.wrappers.WrappedChatComponent getTitle() -> fp
    73:74:void setTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> adipiscing
    84:84:int getFadeIn() -> getFadeIn
    93:94:void setFadeIn(int) -> setFadeIn
    102:102:int getStay() -> getStay
    111:112:void setStay(int) -> setStay
    120:120:int getFadeOut() -> getFadeOut
    129:130:void setFadeOut(int) -> setFadeOut
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTransaction -> com.volmit.wormholes.src.ay:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(int) -> semper
    65:65:short getActionNumber() -> du
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> dv
    94:95:void setAccepted(boolean) -> posuere
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUnloadChunk -> com.volmit.wormholes.src.az:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getChunkX() -> getChunkX
    54:55:void setChunkX(int) -> lacus
    65:65:int getChunkZ() -> getChunkZ
    74:75:void setChunkZ(int) -> eu
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateAttributes -> com.volmit.wormholes.src.aA:
    com.comphenix.protocol.PacketType TYPE -> pE
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> dc
    61:62:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getAttributes() -> getAttributes
    99:100:void setAttributes(java.util.List) -> setAttributes
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateHealth -> com.volmit.wormholes.src.aB:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getHealth() -> getHealth
    53:54:void setHealth(float) -> setHealth
    64:64:int getFood() -> fq
    73:74:void setFood(int) -> malesuada
    84:84:float getFoodSaturation() -> fr
    93:94:void setFoodSaturation(float) -> iaculis
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateTime -> com.volmit.wormholes.src.aC:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getAgeOfTheWorld() -> fs
    53:54:void setAgeOfTheWorld(long) -> at
    65:65:long getTimeOfDay() -> getTimeOfDay
    74:75:void setTimeOfDay(long) -> setTimeOfDay
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerVehicleMove -> com.volmit.wormholes.src.aD:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWindowData -> com.volmit.wormholes.src.aE:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> cY
    53:54:void setWindowId(int) -> semper
    64:64:int getProperty() -> ft
    73:74:void setProperty(int) -> quis
    84:84:int getValue() -> getValue
    93:94:void setValue(int) -> setValue
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWindowItems -> com.volmit.wormholes.src.aF:
    com.comphenix.protocol.PacketType TYPE -> pE
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getWindowId() -> cY
    58:59:void setWindowId(int) -> semper
    67:67:java.util.List getSlotData() -> fu
    76:77:void setSlotData(java.util.List) -> Morbi
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldBorder -> com.volmit.wormholes.src.aG:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction getAction() -> fv
    42:43:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction) -> Lorem
    46:46:int getPortalTeleportBoundary() -> fw
    50:51:void setPortalTeleportBoundary(int) -> ullamcorper
    54:54:double getCenterX() -> getCenterX
    58:59:void setCenterX(double) -> posuere
    62:62:double getCenterZ() -> getCenterZ
    66:67:void setCenterZ(double) -> molestie
    70:70:double getOldRadius() -> fx
    74:75:void setOldRadius(double) -> odio
    78:78:double getRadius() -> fy
    82:83:void setRadius(double) -> a
    86:86:long getSpeed() -> fz
    90:91:void setSpeed(long) -> iaculis
    94:94:int getWarningTime() -> getWarningTime
    98:99:void setWarningTime(int) -> setWarningTime
    102:102:int getWarningDistance() -> getWarningDistance
    106:107:void setWarningDistance(int) -> setWarningDistance
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldEvent -> com.volmit.wormholes.src.aH:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getEffectId() -> getEffectId
    54:55:void setEffectId(int) -> aliquet
    65:65:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> cR
    74:75:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    85:85:int getData() -> getData
    94:95:void setData(int) -> setData
    105:105:boolean getDisableRelativeVolume() -> fA
    114:115:void setDisableRelativeVolume(boolean) -> facilisis
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldParticles -> com.volmit.wormholes.src.aI:
    com.comphenix.protocol.PacketType TYPE -> pE
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$Particle getParticleType() -> fB
    53:54:void setParticleType(com.comphenix.protocol.wrappers.EnumWrappers$Particle) -> Lorem
    64:64:float getX() -> getX
    73:74:void setX(float) -> urna
    84:84:float getY() -> getY
    93:94:void setY(float) -> Proin
    104:104:float getZ() -> getZ
    113:114:void setZ(float) -> ac
    125:125:float getOffsetX() -> fC
    134:135:void setOffsetX(float) -> enim
    146:146:float getOffsetY() -> fD
    155:156:void setOffsetY(float) -> posuere
    167:167:float getOffsetZ() -> fE
    176:177:void setOffsetZ(float) -> molestie
    187:187:float getParticleData() -> fF
    196:197:void setParticleData(float) -> odio
    207:207:int getNumberOfParticles() -> fG
    216:217:void setNumberOfParticles(int) -> nulla
    227:227:boolean getLongDistance() -> fH
    236:237:void setLongDistance(boolean) -> In
    249:249:int[] getData() -> getData
    258:259:void setData(int[]) -> dolor
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusClientPing -> com.volmit.wormholes.src.aJ:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:long getTime() -> getTime
    51:52:void setTime(long) -> setTime
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusClientStart -> com.volmit.wormholes.src.aK:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusServerPong -> com.volmit.wormholes.src.aL:
    com.comphenix.protocol.PacketType TYPE -> pE
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getTime() -> getTime
    53:54:void setTime(long) -> setTime
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusServerServerInfo -> com.volmit.wormholes.src.aM:
    com.comphenix.protocol.PacketType TYPE -> pE
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedServerPing getJsonResponse() -> fI
    54:55:void setJsonResponse(com.comphenix.protocol.wrappers.WrappedServerPing) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.XML -> com.volmit.wormholes.src.aN:
    java.lang.Character AMP -> qM
    java.lang.Character APOS -> qN
    java.lang.Character BANG -> qO
    java.lang.Character EQ -> qP
    java.lang.Character GT -> qQ
    java.lang.Character LT -> qR
    java.lang.Character QUEST -> qS
    java.lang.Character QUOT -> qT
    java.lang.Character SLASH -> qU
    35:35:void <init>() -> <init>
    76:99:java.lang.String escape(java.lang.String) -> escape
    109:119:void noSpace(java.lang.String) -> ullamcorper
    133:286:boolean parse(com.volmit.wormholes.util.XMLTokener,com.volmit.wormholes.util.JSONObject,java.lang.String) -> Lorem
    303:333:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    352:357:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    368:368:java.lang.String toString(java.lang.Object) -> toString
    381:485:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    38:62:void <clinit>() -> <clinit>
com.volmit.wormholes.util.XMLTokener -> com.volmit.wormholes.src.aO:
    java.util.HashMap entity -> qV
    55:56:void <init>(java.lang.String) -> <init>
    66:77:java.lang.String nextCDATA() -> fJ
    96:115:java.lang.Object nextContent() -> fK
    128:141:java.lang.Object nextEntity(char) -> vulputate
    158:204:java.lang.Object nextMeta() -> fL
    224:288:java.lang.Object nextToken() -> fM
    306:361:boolean skipPast(java.lang.String) -> aliquet
    42:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.YAMLDataInput -> com.volmit.wormholes.src.aP:
    14:14:void <init>() -> <init>
    19:65:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.YAMLDataOutput -> com.volmit.wormholes.src.aQ:
    13:13:void <init>() -> <init>
    18:28:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.ZipArchive -> com.volmit.wormholes.src.aR:
    com.volmit.wormholes.util.GMap fileSet -> qW
    17:19:void <init>() -> <init>
    24:25:void add(java.io.File,java.io.File) -> Lorem
    30:37:void remove(java.io.File) -> remove
    42:43:void compress(java.io.File) -> ipsum
    48:48:com.volmit.wormholes.util.ArchiveType getType() -> unleash
com.volmit.wormholes.util.package-info -> com.volmit.wormholes.src.aS:
