com.volmit.wormholes.Info -> com.volmit.wormholes.src.Lorem:
    java.lang.String TAG -> Lorem
    java.lang.String PERM_RELOAD -> ipsum
    java.lang.String PERM_LIST -> dolor
    java.lang.String PERM_CREATE -> sit
    java.lang.String PERM_DESTROY -> amet
    java.lang.String PERM_BUILD -> consectetur
    java.lang.String PERM_CONFIGURE -> adipiscing
    java.lang.String PERM_USE -> elit
    java.lang.String HR -> Morbi
    java.lang.String HRN -> pulvinar
    com.volmit.wormholes.util.TextMap r -> vulputate
    14:25:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    29:29:java.lang.String hr() -> Lorem
    34:34:java.lang.String hrn(java.lang.String) -> Lorem
    39:56:java.lang.String[] mv(java.lang.String,com.volmit.wormholes.util.C[]) -> Lorem
    61:92:java.lang.String mk(java.lang.String,com.volmit.wormholes.util.C[]) -> ipsum
    97:108:void splash() -> ipsum
    112:113:void m(java.lang.String) -> ipsum
    117:1017:void buildBlocks() -> dolor
com.volmit.wormholes.Settings -> com.volmit.wormholes.src.ipsum:
    boolean BUNGEECORD_SEND_ONLY -> dictum
    java.util.ArrayList ALLOW_ENTITIY_TYPES -> Vestibulum
    java.util.ArrayList APERTURE_ENTITIY_TYPES -> in
    boolean ENABLE_PROJECTIONS -> purus
    boolean ALLOW_ENTITIES -> non
    boolean SPLASH -> mi
    boolean ENABLE_APERTURE -> euismod
    int MAX_VELOCITY_CAPTURE_RANGE -> Pellentesque
    int MAX_PORTAL_SIZE -> at
    int APERTURE_MAX_SPEED -> iaculis
    int WORMHOLE_WORKER_THREADS -> urna
    int WORMHOLE_POWER_THREADS -> Proin
    int WORMHOLE_SKIN_FLUSH -> ac
    int PROJECTION_CHANGE_THROTTLE -> enim
    int PROJECTION_SAMPLE_RADIUS -> posuere
    int PROJECTION_MAX_SPEED -> molestie
    int CHUNK_SEND_RATE -> odio
    int CHUNK_SEND_MAX -> a
    int CHUNK_MAX_CHANGE -> facilisis
    int NETWORK_POPULATE_MAPPING_INTERVAL -> In
    int NETWORK_MAX_PACKET_SIZE -> hac
    int NETWORK_COMPRESSION_LEVEL -> habitasse
    int NETWORK_PUSH_THRESHOLD -> platea
    int NETWORK_FLUSH_THRESHOLD -> dictumst
    int NETWORK_POLL_THRESHOLD -> Nam
    18:319:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    170:196:com.volmit.wormholes.util.DataCluster getConfig() -> sit
    201:213:void chkConfig() -> amet
    217:274:void chkField(java.lang.reflect.Field) -> Lorem
    278:304:void setConfig(com.volmit.wormholes.util.DataCluster) -> Lorem
    323:350:com.volmit.wormholes.util.DataCluster getExperimentalConfig() -> consectetur
    355:380:void setExperimentalConfig(com.volmit.wormholes.util.DataCluster) -> ipsum
com.volmit.wormholes.Status -> com.volmit.wormholes.src.dolor:
    int packetBytesPerSecond -> metus
    double projectionTime -> nisl
    int permutationsPerSecond -> magna
    int pps -> tortor
    boolean fdq -> tempus
    com.volmit.wormholes.util.Average avgBPS -> sem
    com.volmit.wormholes.util.Average avgPower -> sed
    com.volmit.wormholes.util.Average avgWrk -> volutpat
    java.lang.String inf -> rhoncus
    int lightFault -> sapien
    int lightFaulted -> orci
    9:20:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    24:31:void sample() -> adipiscing
com.volmit.wormholes.WAPI -> com.volmit.wormholes.src.sit:
    15:15:void <init>() -> <init>
    19:19:java.util.List getPortals() -> elit
    24:24:java.util.List getLocalPortals() -> Morbi
    29:39:java.util.List getRemotePortals() -> pulvinar
    44:44:com.volmit.wormholes.util.ThreadInformation getWorkerPoolInfo() -> vulputate
    49:49:com.volmit.wormholes.util.ThreadInformation getPowerPoolInfo() -> dictum
    54:54:com.volmit.wormholes.util.ParallelPoolManager getWorkerPool() -> Vestibulum
    59:59:com.volmit.wormholes.util.ParallelPoolManager getPowerPool() -> in
    64:72:com.volmit.wormholes.portal.Portal getPortalAt(org.bukkit.Location) -> Lorem
    77:77:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
    82:82:java.util.List getPortalAreasAt(org.bukkit.Location) -> ipsum
    87:87:java.util.List getPortalCloseAreaAt(org.bukkit.Location) -> dolor
    92:100:com.volmit.wormholes.portal.Portal getPortalByKey(com.volmit.wormholes.portal.PortalKey) -> Lorem
    105:105:boolean hasBungeecordConnection() -> purus
    110:110:java.lang.String getServerName() -> getServerName
    115:116:void fxShockPortal(com.volmit.wormholes.portal.LocalPortal) -> Lorem
    120:121:void fxShockAllPortal(com.volmit.wormholes.portal.LocalPortal) -> ipsum
com.volmit.wormholes.Wormholes -> com.volmit.wormholes.src.amet:
    com.volmit.wormholes.Wormholes instance -> ligula
    com.volmit.wormholes.network.VortexBus bus -> Sed
    com.volmit.wormholes.service.MutexService host -> ultrices
    com.volmit.wormholes.provider.PortalProvider provider -> imperdiet
    com.volmit.wormholes.service.PortalRegistry registry -> turpis
    com.volmit.wormholes.service.ApertureService aperture -> Nullam
    com.volmit.wormholes.service.ProjectionService projector -> vehicula
    com.volmit.wormholes.service.TimingsService timings -> porta
    com.volmit.wormholes.service.EntityService entity -> ultricies
    com.volmit.wormholes.service.SkinService skin -> vestibulum
    com.volmit.wormholes.service.IOService io -> felis
    com.volmit.wormholes.service.EffectService fx -> nec
    com.volmit.wormholes.util.ParallelPoolManager pool -> tristique
    com.volmit.wormholes.util.SubGroup sub -> lacinia
    com.volmit.wormholes.util.D dispatcher -> Duis
    47:47:void <init>() -> <init>
    68:90:void onStart() -> onStart
    95:104:void onStop() -> non
    111:149:void onTick() -> mi
    153:163:void doReload() -> euismod
    167:431:void buildSubs() -> Pellentesque
    437:437:void onConstruct() -> at
    442:449:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    454:454:com.volmit.wormholes.Wormholes getInstance() -> iaculis
    459:459:com.volmit.wormholes.network.VortexBus getBus() -> urna
    464:464:com.volmit.wormholes.service.MutexService getHost() -> Proin
    469:469:com.volmit.wormholes.provider.PortalProvider getProvider() -> ac
    474:474:com.volmit.wormholes.service.PortalRegistry getRegistry() -> enim
    479:479:com.volmit.wormholes.service.ApertureService getAperture() -> posuere
    484:484:com.volmit.wormholes.service.ProjectionService getProjector() -> molestie
    489:489:com.volmit.wormholes.service.TimingsService getTimings() -> odio
    494:494:com.volmit.wormholes.service.EntityService getEntity() -> a
    499:499:com.volmit.wormholes.service.SkinService getSkin() -> facilisis
    504:504:com.volmit.wormholes.service.IOService getIo() -> In
    509:509:com.volmit.wormholes.service.EffectService getFx() -> hac
    514:514:com.volmit.wormholes.util.ParallelPoolManager getPool() -> habitasse
    519:519:com.volmit.wormholes.util.SubGroup getSub() -> platea
    524:524:com.volmit.wormholes.util.D getDispatcher() -> dictumst
com.volmit.wormholes.Wormholes$1 -> com.volmit.wormholes.src.amet$1:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:167:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    171:244:void list(org.bukkit.command.CommandSender,java.lang.String[]) -> Lorem
    249:253:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    258:259:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$2 -> com.volmit.wormholes.src.amet$2:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:262:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    266:299:void list(org.bukkit.command.CommandSender) -> Lorem
    304:305:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    310:311:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$3 -> com.volmit.wormholes.src.amet$3:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:314:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    318:327:void v(org.bukkit.command.CommandSender) -> ipsum
    332:333:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    338:339:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$4 -> com.volmit.wormholes.src.amet$4:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:342:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    346:357:void v(org.bukkit.command.CommandSender) -> ipsum
    362:363:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    368:369:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$5 -> com.volmit.wormholes.src.amet$5:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:372:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    377:378:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    383:400:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$6 -> com.volmit.wormholes.src.amet$6:
    com.volmit.wormholes.Wormholes this$0 -> tempor
    1:403:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    407:417:void go(org.bukkit.command.CommandSender) -> dolor
    422:423:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    428:429:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.WormholesBungeecord -> com.volmit.wormholes.src.consectetur:
    6:6:void <init>() -> <init>
    11:16:void onEnable() -> onEnable
    21:22:void onDisable() -> onDisable
com.volmit.wormholes.aperture.Aperture -> com.volmit.wormholes.src.adipiscing:
    9:10:void <init>(com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
com.volmit.wormholes.aperture.AperturePlane -> com.volmit.wormholes.src.elit:
    com.volmit.wormholes.util.GMap instanceMap -> eget
    com.volmit.wormholes.util.GMap instanceVa -> semper
    25:29:void <init>() -> <init>
    33:35:void clear() -> clear
    39:71:byte[] compress() -> Nam
    76:119:void addCompressed(byte[]) -> Lorem
    123:130:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    135:142:com.volmit.wormholes.util.GMap remapLook(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> ipsum
    149:178:void sample(com.volmit.wormholes.portal.LocalPortal) -> dolor
    182:182:int size() -> size
com.volmit.wormholes.aperture.BlacklistAperture -> com.volmit.wormholes.src.Morbi:
    7:8:void <init>() -> <init>
com.volmit.wormholes.aperture.EntityHider -> com.volmit.wormholes.src.pulvinar:
    com.google.common.collect.Table observerEntityMap -> aliquam
    com.comphenix.protocol.PacketType[] ENTITY_PACKETS -> lectus
    com.comphenix.protocol.ProtocolManager manager -> consequat
    org.bukkit.event.Listener bukkitListener -> neque
    com.comphenix.protocol.events.PacketAdapter protocolListener -> sagittis
    com.volmit.wormholes.aperture.EntityHider$Policy policy -> lorem
    int[] $SWITCH_TABLE$com$volmit$wormholes$aperture$EntityHider$Policy -> vel
    38:38:void <clinit>() -> <clinit>
    35:83:void <init>(org.bukkit.plugin.Plugin,com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
    99:106:boolean setVisibility(org.bukkit.entity.Player,int,boolean) -> Lorem
    125:131:boolean setMembership(org.bukkit.entity.Player,int,boolean) -> ipsum
    146:146:boolean getMembership(org.bukkit.entity.Player,int) -> Lorem
    160:162:boolean isVisible(org.bukkit.entity.Player,int) -> ipsum
    176:182:void removeEntity(org.bukkit.entity.Entity,boolean) -> Lorem
    192:193:void removePlayer(org.bukkit.entity.Player) -> removePlayer
    202:202:org.bukkit.event.Listener constructBukkit() -> metus
    237:237:com.comphenix.protocol.events.PacketAdapter constructProtocol(org.bukkit.plugin.Plugin) -> Lorem
    266:273:boolean toggleEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> Lorem
    288:296:boolean showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> ipsum
    310:328:boolean hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> dolor
    347:349:boolean canSee(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sit
    354:356:void validate(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> amet
    365:365:com.volmit.wormholes.aperture.EntityHider$Policy getPolicy() -> nisl
    370:376:void close() -> close
    33:33:int[] $SWITCH_TABLE$com$volmit$wormholes$aperture$EntityHider$Policy() -> magna
com.volmit.wormholes.aperture.EntityHider$1 -> com.volmit.wormholes.src.pulvinar$1:
    com.volmit.wormholes.aperture.EntityHider this$0 -> Quisque
    1:202:void <init>(com.volmit.wormholes.aperture.EntityHider) -> <init>
    207:208:void onEntityDeath(org.bukkit.event.entity.EntityDeathEvent) -> Lorem
    213:217:void onChunkUnload(org.bukkit.event.world.ChunkUnloadEvent) -> Lorem
    222:223:void onPlayerQuit(org.bukkit.event.player.PlayerQuitEvent) -> Lorem
com.volmit.wormholes.aperture.EntityHider$2 -> com.volmit.wormholes.src.pulvinar$2:
    com.volmit.wormholes.aperture.EntityHider this$0 -> Quisque
    1:237:void <init>(com.volmit.wormholes.aperture.EntityHider,org.bukkit.plugin.Plugin,com.comphenix.protocol.PacketType[]) -> <init>
    242:248:void onPacketSending(com.comphenix.protocol.events.PacketEvent) -> onPacketSending
com.volmit.wormholes.aperture.EntityHider$Policy -> com.volmit.wormholes.src.pulvinar$Lorem:
    com.volmit.wormholes.aperture.EntityHider$Policy WHITELIST -> congue
    com.volmit.wormholes.aperture.EntityHider$Policy BLACKLIST -> vitae
    com.volmit.wormholes.aperture.EntityHider$Policy[] ENUM$VALUES -> ornare
    45:57:void <clinit>() -> <clinit>
    45:45:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.aperture.EntityHider$Policy[] values() -> values
    1:1:com.volmit.wormholes.aperture.EntityHider$Policy valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.aperture.RemoteEntity -> com.volmit.wormholes.src.vulputate:
    int id -> id
    int aid -> Integer
    org.bukkit.entity.EntityType remoteType -> commodo
    11:16:void <init>(int,org.bukkit.entity.EntityType,int) -> <init>
    21:21:int getRemoteId() -> tortor
    27:27:org.bukkit.entity.EntityType getRemoteType() -> tempus
    33:33:java.lang.String getName() -> getName
    39:43:int hashCode() -> hashCode
    49:70:boolean equals(java.lang.Object) -> equals
    76:76:int getActualId() -> sem
com.volmit.wormholes.aperture.RemoteInstance -> com.volmit.wormholes.src.dictum:
    int getRemoteId() -> tortor
    org.bukkit.entity.EntityType getRemoteType() -> tempus
    java.lang.String getName() -> getName
    int getActualId() -> sem
    19:29:com.volmit.wormholes.aperture.RemoteInstance create(org.bukkit.entity.Entity) -> Lorem
com.volmit.wormholes.aperture.RemotePlayer -> com.volmit.wormholes.src.Vestibulum:
    java.lang.String name -> name
    java.util.UUID uuid -> ante
    13:17:void <init>(int,java.lang.String,java.util.UUID,int) -> <init>
    22:22:java.lang.String getName() -> getName
    27:27:java.util.UUID getUuid() -> getUuid
    33:37:int hashCode() -> hashCode
    43:78:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.aperture.VEntity -> com.volmit.wormholes.src.in:
    org.bukkit.entity.EntityType type -> cursus
    int id -> id
    org.bukkit.Location location -> suscipit
    org.bukkit.Location last -> Mauris
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID uuid -> ante
    float yaw -> yaw
    float pit -> convallis
    float lya -> viverra
    float lpi -> lacus
    com.volmit.wormholes.aperture.VirtualPlayer vp -> eu
    35:48:void <init>(org.bukkit.entity.Player,org.bukkit.entity.EntityType,int,java.util.UUID,org.bukkit.Location,java.lang.String) -> <init>
    52:59:void prelativeMove(double,double,double) -> Lorem
    63:72:void prelativeMoveLook(double,double,double,float,float) -> Lorem
    76:85:void pteleport(double,double,double,float,float) -> ipsum
    89:99:void plook(float,float) -> Lorem
    103:114:void despawn() -> sed
    118:138:void spawn() -> volutpat
    144:151:void send(com.volmit.wormholes.util.AbstractPacket) -> Lorem
    155:155:org.bukkit.entity.EntityType getType() -> getType
    160:160:int getId() -> getId
    165:167:void move(double,double,double,float,float) -> dolor
    171:175:void look(float,float) -> ipsum
    179:181:void teleport(double,double,double,float,float) -> sit
    185:189:void setSneaking(boolean) -> setSneaking
    193:197:void swingArm() -> rhoncus
    201:205:void takeDamage() -> sapien
    209:259:void flush() -> flush
    264:277:int hashCode() -> hashCode
    283:375:boolean equals(java.lang.Object) -> equals
    380:380:org.bukkit.Location getLocation() -> getLocation
    385:385:org.bukkit.Location getLast() -> orci
    390:390:org.bukkit.entity.Player getViewer() -> ligula
    395:395:java.util.UUID getUuid() -> getUuid
com.volmit.wormholes.aperture.VirtualPlayer -> com.volmit.wormholes.src.purus:
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID uuid -> ante
    java.lang.Integer id -> Phasellus
    java.lang.String name -> name
    java.lang.String displayName -> displayName
    org.bukkit.Location location -> suscipit
    org.bukkit.Location nextLocation -> accumsan
    java.lang.Boolean onGround -> egestas
    37:47:void <init>(org.bukkit.entity.Player,java.util.UUID,java.lang.Integer,java.lang.String,java.lang.String) -> <init>
    51:56:void spawn(org.bukkit.Location) -> sit
    60:62:void despawn() -> sed
    66:69:void tick() -> tick
    73:74:void move(org.bukkit.Location) -> amet
    78:80:void teleport(org.bukkit.Location) -> teleport
    84:84:org.bukkit.entity.Player getViewer() -> ligula
    89:89:java.util.UUID getUuid() -> getUuid
    94:94:java.lang.Integer getId() -> Sed
    99:99:java.lang.String getName() -> getName
    104:104:java.lang.String getDisplayName() -> getDisplayName
    109:109:org.bukkit.Location getLocation() -> getLocation
    114:114:org.bukkit.Location getNextLocation() -> ultrices
    119:119:java.lang.Boolean getOnGround() -> imperdiet
    124:131:java.lang.String mark() -> turpis
    136:144:void sendPlayerInfoRemove() -> Nullam
    148:167:void sendPlayerInfo() -> vehicula
    171:182:void sendNamedEntitySpawn() -> porta
    186:187:void animationSwingMainArm() -> ultricies
    191:192:void animationTakeDamage() -> vestibulum
    196:200:void sendAnimation(int) -> Lorem
    204:209:void sendEntityMetadata() -> felis
    213:214:void animationSneaking(boolean) -> Lorem
    218:224:void sendEntityMetadataSneaking(boolean) -> ipsum
    228:231:void sendEntityDestroy() -> nec
    235:259:void sendEntityMove() -> tristique
    263:270:void sendEntityRelativeMove(org.bukkit.util.Vector) -> Lorem
    274:284:void sendEntityRelativeMoveLook(org.bukkit.util.Vector) -> ipsum
    288:292:void sendEntityHeadLook() -> lacinia
    296:296:int getCompressedDiff(double,double) -> Lorem
    302:312:int hashCode() -> hashCode
    318:419:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.aperture.WhitelistAperture -> com.volmit.wormholes.src.non:
    7:8:void <init>() -> <init>
com.volmit.wormholes.config.CMax -> com.volmit.wormholes.src.mi:
    double value() -> value
com.volmit.wormholes.config.CMin -> com.volmit.wormholes.src.euismod:
    double value() -> value
com.volmit.wormholes.config.CName -> com.volmit.wormholes.src.Pellentesque:
    java.lang.String value() -> value
com.volmit.wormholes.config.Experimental -> com.volmit.wormholes.src.at:
com.volmit.wormholes.config.Permissable -> com.volmit.wormholes.src.iaculis:
    boolean canReload -> Praesent
    boolean canCreate -> eros
    boolean canDestroy -> et
    boolean canList -> sodales
    boolean canUse -> scelerisque
    boolean canBuild -> canBuild
    boolean canConfigure -> velit
    org.bukkit.command.CommandSender p -> Donec
    17:27:void <init>(org.bukkit.command.CommandSender) -> <init>
    31:39:boolean has(java.lang.String[]) -> Lorem
    44:44:boolean canReload() -> Duis
    49:49:boolean canCreate() -> tempor
    54:54:boolean canDestroy() -> eget
    59:59:boolean canList() -> semper
    64:64:boolean canUse() -> aliquam
    69:69:boolean canBuild() -> canBuild
    74:74:boolean canConfigure() -> lectus
    79:79:org.bukkit.command.CommandSender getP() -> consequat
com.volmit.wormholes.event.PortalActivatePlayerEvent -> com.volmit.wormholes.src.urna:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalDeactivatePlayerEvent -> com.volmit.wormholes.src.Proin:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalEnterPlayerEvent -> com.volmit.wormholes.src.ac:
    10:11:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
com.volmit.wormholes.event.PortalEvent -> com.volmit.wormholes.src.enim:
    com.volmit.wormholes.portal.Portal portal -> quam
    10:13:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
    17:17:com.volmit.wormholes.portal.Portal getPortal() -> neque
com.volmit.wormholes.event.PortalPlayerEvent -> com.volmit.wormholes.src.posuere:
    org.bukkit.entity.Player player -> player
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
    19:19:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.event.WormholeCreateEvent -> com.volmit.wormholes.src.molestie:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.event.WormholeLinkEvent -> com.volmit.wormholes.src.odio:
    com.volmit.wormholes.portal.Portal linked -> malesuada
    11:14:void <init>(com.volmit.wormholes.portal.Portal,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:com.volmit.wormholes.portal.Portal getLinked() -> sagittis
com.volmit.wormholes.event.WormholePushEntityEvent -> com.volmit.wormholes.src.a:
    org.bukkit.entity.Entity entity -> entity
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Entity) -> <init>
    19:19:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.event.WormholeUnlinkEvent -> com.volmit.wormholes.src.facilisis:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.exception.DuplicatePortalKeyException -> com.volmit.wormholes.src.In:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalKeyException -> com.volmit.wormholes.src.hac:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalPositionException -> com.volmit.wormholes.src.habitasse:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.PortalException -> com.volmit.wormholes.src.platea:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.network.BaseBus -> com.volmit.wormholes.src.dictumst:
    com.volmit.wormholes.util.GList inbox -> quis
    com.volmit.wormholes.util.GList outbox -> ullamcorper
    10:14:void <init>() -> <init>
    19:19:com.volmit.wormholes.util.GList getInbox() -> lorem
    25:25:com.volmit.wormholes.util.GList getOutbox() -> vel
    31:32:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    37:38:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    43:44:void read(com.volmit.wormholes.network.Transmission) -> dolor
    49:50:void cancel(com.volmit.wormholes.network.Transmission) -> sit
com.volmit.wormholes.network.CL -> com.volmit.wormholes.src.Nam:
    com.volmit.wormholes.network.CL L1 -> aliquet
    com.volmit.wormholes.network.CL L2 -> nulla
    com.volmit.wormholes.network.CL L3 -> Vivamus
    com.volmit.wormholes.network.CL L4 -> tellus
    com.volmit.wormholes.network.CL[] ENUM$VALUES -> leo
    3:8:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    12:12:java.lang.String get() -> get
    1:1:com.volmit.wormholes.network.CL[] values() -> values
    1:1:com.volmit.wormholes.network.CL valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.network.LocalBus -> com.volmit.wormholes.src.metus:
    3:3:void <init>() -> <init>
    8:13:void flush() -> flush
com.volmit.wormholes.network.RemoteBus -> com.volmit.wormholes.src.nisl:
    15:18:void <init>() -> <init>
    23:38:void flush() -> flush
    42:43:void sendTransmission(com.volmit.wormholes.network.Transmission) -> amet
    50:88:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    94:101:void remoteForceSend(com.volmit.wormholes.network.Transmission) -> consectetur
com.volmit.wormholes.network.Transmission -> com.volmit.wormholes.src.magna:
    12:13:void <init>(byte[]) -> <init>
    17:22:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    26:27:void send() -> send
    31:32:void setId(long) -> Lorem
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> dolor
    46:47:void setType(java.lang.String) -> setType
    51:51:long getId() -> getId
    56:56:java.lang.String getSource() -> getSource
    61:61:java.lang.String getDestination() -> Quisque
    66:66:java.lang.String getType() -> getType
    71:74:com.volmit.wormholes.network.Transmission createResponse() -> congue
    79:80:void forceSend() -> vitae
com.volmit.wormholes.network.TransmissionBus -> com.volmit.wormholes.src.tortor:
    com.volmit.wormholes.util.GList getInbox() -> lorem
    com.volmit.wormholes.util.GList getOutbox() -> vel
    void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    void read(com.volmit.wormholes.network.Transmission) -> dolor
    void cancel(com.volmit.wormholes.network.Transmission) -> sit
    void flush() -> flush
com.volmit.wormholes.network.VortexBus -> com.volmit.wormholes.src.tempus:
    com.volmit.wormholes.network.LocalBus l -> tincidunt
    com.volmit.wormholes.network.RemoteBus r -> luctus
    java.lang.String serverName -> serverName
    com.volmit.wormholes.util.GList servers -> Maecenas
    java.lang.Boolean online -> est
    java.lang.Long throttle -> hendrerit
    25:34:void <init>() -> <init>
    39:43:com.volmit.wormholes.util.GList getInbox() -> lorem
    49:53:com.volmit.wormholes.util.GList getOutbox() -> vel
    59:68:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    73:82:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    87:89:void read(com.volmit.wormholes.network.Transmission) -> dolor
    94:96:void cancel(com.volmit.wormholes.network.Transmission) -> sit
    101:132:void flush() -> flush
    136:137:void requestName() -> ornare
    141:142:void requestServers() -> Integer
    147:164:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    168:168:com.volmit.wormholes.network.LocalBus getL() -> commodo
    173:173:com.volmit.wormholes.network.RemoteBus getR() -> ante
    178:178:java.lang.String getServerName() -> getServerName
    183:183:com.volmit.wormholes.util.GList getServers() -> cursus
    188:188:java.lang.Boolean isOnline() -> suscipit
    193:193:java.lang.Long getThrottle() -> Mauris
    198:199:void forceFlush(com.volmit.wormholes.network.Transmission) -> adipiscing
com.volmit.wormholes.portal.BaseWormhole -> com.volmit.wormholes.src.sem:
    com.volmit.wormholes.portal.LocalPortal source -> Etiam
    com.volmit.wormholes.portal.Portal destination -> diam
    com.volmit.wormholes.util.GList filters -> dignissim
    16:21:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    26:26:com.volmit.wormholes.portal.LocalPortal getSource() -> mollis
    32:32:com.volmit.wormholes.portal.Portal getDestination() -> convallis
    38:38:com.volmit.wormholes.util.GList getFilters() -> viverra
    44:60:void push(org.bukkit.entity.Entity,org.bukkit.Location) -> Lorem
    void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
com.volmit.wormholes.portal.FilterMode -> com.volmit.wormholes.src.sed:
    com.volmit.wormholes.portal.FilterMode WHITELIST -> arcu
    com.volmit.wormholes.portal.FilterMode BLACKLIST -> varius
    com.volmit.wormholes.portal.FilterMode[] ENUM$VALUES -> placerat
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.portal.FilterMode[] values() -> values
    1:1:com.volmit.wormholes.portal.FilterMode valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.portal.FilterPolicy -> com.volmit.wormholes.src.volutpat:
    com.volmit.wormholes.portal.FilterPolicy MUTEX -> Nunc
    com.volmit.wormholes.portal.FilterPolicy LOCAL -> Ut
    com.volmit.wormholes.portal.FilterPolicy BOTH -> eleifend
    com.volmit.wormholes.portal.FilterPolicy[] ENUM$VALUES -> nibh
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.portal.FilterPolicy[] values() -> values
    1:1:com.volmit.wormholes.portal.FilterPolicy valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.portal.LocalPortal -> com.volmit.wormholes.src.rhoncus:
    com.volmit.wormholes.portal.PortalIdentity identity -> faucibus
    com.volmit.wormholes.portal.PortalPosition position -> Class
    com.volmit.wormholes.projection.ProjectionPlane plane -> aptent
    java.lang.String server -> taciti
    java.lang.Boolean hasBeenValid -> sociosqu
    java.lang.Boolean hasHadWormhole -> ad
    com.volmit.wormholes.aperture.AperturePlane apature -> litora
    java.lang.Boolean saved -> torquent
    com.volmit.wormholes.portal.PortalSettings settings -> per
    com.volmit.wormholes.projection.ProjectionMask mask -> conubia
    java.lang.Boolean sided -> nostra
    java.lang.String displayName -> displayName
    com.volmit.wormholes.util.GMap holograms -> inceptos
    com.volmit.wormholes.util.GList activatedEntities -> himenaeos
    54:70:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> <init>
    74:84:void checkKey() -> lacus
    89:159:void update() -> update
    163:169:void showHologram(org.bukkit.entity.Player,com.volmit.wormholes.util.Hologram) -> Lorem
    173:180:void removeHologram(org.bukkit.entity.Player) -> ipsum
    184:188:void clearHolograms() -> eu
    192:197:com.volmit.wormholes.util.Hologram getHologram(org.bukkit.entity.Player) -> dolor
    202:202:boolean hasHologram(org.bukkit.entity.Player) -> sit
    207:229:void checkFrame(org.bukkit.entity.Entity,org.bukkit.Location) -> dolor
    233:234:void throwBack(org.bukkit.entity.Entity) -> ipsum
    238:267:void checkSend(org.bukkit.entity.Entity,com.volmit.wormholes.portal.Wormhole,org.bukkit.Location) -> Lorem
    271:341:void send(org.bukkit.entity.Entity,com.volmit.wormholes.portal.Wormhole,org.bukkit.Location) -> ipsum
    345:378:void checkFrame() -> Phasellus
    382:395:void specialUpdate() -> accumsan
    401:447:void reversePolarity() -> egestas
    451:459:com.volmit.wormholes.util.Direction getThrowDirection(org.bukkit.Location) -> consectetur
    464:487:boolean isPlayerLookingAt(org.bukkit.entity.Player) -> amet
    492:513:com.volmit.wormholes.util.GList getPlayersLookingAt() -> Praesent
    519:519:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> eros
    525:525:com.volmit.wormholes.portal.PortalPosition getPosition() -> et
    531:531:com.volmit.wormholes.portal.PortalKey getKey() -> sodales
    537:542:boolean hasWormhole() -> scelerisque
    548:553:boolean isWormholeMutex() -> velit
    559:564:com.volmit.wormholes.portal.Wormhole getWormhole() -> Donec
    570:570:com.volmit.wormholes.service.MutexService getService() -> quam
    576:586:com.volmit.wormholes.util.DataCluster toData() -> malesuada
    593:593:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    598:603:java.lang.String getServer() -> getServer
    609:609:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> quis
    615:620:int hashCode() -> hashCode
    626:672:boolean equals(java.lang.Object) -> equals
    679:687:boolean hasValidIshKey() -> ullamcorper
    695:724:boolean hasValidKey() -> aliquet
    730:730:com.volmit.wormholes.projection.ProjectionPlane getPlane() -> nulla
    735:735:java.lang.Boolean getHasBeenValid() -> Vivamus
    741:741:com.volmit.wormholes.aperture.AperturePlane getApature() -> tellus
    746:751:void destroy() -> destroy
    755:755:java.lang.Boolean getHasHadWormhole() -> leo
    760:760:java.lang.Boolean getSaved() -> tincidunt
    765:765:com.volmit.wormholes.portal.PortalSettings getSettings() -> luctus
    770:770:com.volmit.wormholes.projection.ProjectionMask getMask() -> Maecenas
    776:776:java.lang.Boolean getSided() -> est
    782:825:void setSided(java.lang.Boolean) -> Lorem
    830:830:java.lang.String getDisplayName() -> getDisplayName
    836:839:void updateDisplayName(java.lang.String) -> sit
    844:844:boolean hasDisplayName() -> hasDisplayName
    850:852:void save() -> save
com.volmit.wormholes.portal.LocalPortal$1 -> com.volmit.wormholes.src.rhoncus$1:
    com.volmit.wormholes.portal.LocalPortal this$0 -> Cras
    org.bukkit.entity.Entity val$i -> pellentesque
    1:290:void <init>(com.volmit.wormholes.portal.LocalPortal,java.lang.Integer,org.bukkit.entity.Entity) -> <init>
    295:296:void run() -> run
com.volmit.wormholes.portal.LocalPortal$2 -> com.volmit.wormholes.src.rhoncus$2:
    com.volmit.wormholes.portal.LocalPortal this$0 -> Cras
    org.bukkit.entity.Player val$i -> ut
    1:386:void <init>(com.volmit.wormholes.portal.LocalPortal,java.lang.Integer,org.bukkit.entity.Player) -> <init>
    391:392:void run() -> run
com.volmit.wormholes.portal.LocalPortal$3 -> com.volmit.wormholes.src.rhoncus$3:
    com.volmit.wormholes.portal.LocalPortal this$0 -> Cras
    com.volmit.wormholes.portal.PortalPosition val$n -> finibus
    1:407:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.PortalPosition) -> <init>
    412:439:void run() -> run
    407:407:com.volmit.wormholes.portal.LocalPortal access$0(com.volmit.wormholes.portal.LocalPortal$3) -> Lorem
com.volmit.wormholes.portal.LocalPortal$3$1 -> com.volmit.wormholes.src.rhoncus$3$1:
    com.volmit.wormholes.portal.LocalPortal$3 this$1 -> fermentum
    com.volmit.wormholes.portal.PortalPosition val$n -> finibus
    1:414:void <init>(com.volmit.wormholes.portal.LocalPortal$3,com.volmit.wormholes.portal.PortalPosition) -> <init>
    421:437:void run() -> run
    414:414:com.volmit.wormholes.portal.LocalPortal$3 access$0(com.volmit.wormholes.portal.LocalPortal$3$1) -> Lorem
com.volmit.wormholes.portal.LocalPortal$3$1$1 -> com.volmit.wormholes.src.rhoncus$3$1$1:
    com.volmit.wormholes.portal.LocalPortal$3$1 this$2 -> augue
    1:423:void <init>(com.volmit.wormholes.portal.LocalPortal$3$1,java.lang.Integer) -> <init>
    428:429:void run() -> run
com.volmit.wormholes.portal.LocalPortal$4 -> com.volmit.wormholes.src.rhoncus$4:
    com.volmit.wormholes.portal.LocalPortal this$0 -> Cras
    boolean[] val$b -> erat
    1:474:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    479:484:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.LocalPortal$5 -> com.volmit.wormholes.src.rhoncus$5:
    com.volmit.wormholes.portal.LocalPortal this$0 -> Cras
    com.volmit.wormholes.util.GList val$players -> Aenean
    org.bukkit.entity.Player val$i -> ut
    1:499:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,com.volmit.wormholes.util.GList,org.bukkit.entity.Player) -> <init>
    504:509:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.LocalWormhole -> com.volmit.wormholes.src.sapien:
    23:29:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    34:81:void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
    85:91:void specialVelocity(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Lorem
    95:101:void specialVelocity(org.bukkit.entity.Player,org.bukkit.util.Vector,org.bukkit.entity.Entity) -> Lorem
com.volmit.wormholes.portal.MutexWormhole -> com.volmit.wormholes.src.orci:
    16:19:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    24:30:void onPush(org.bukkit.entity.Entity,org.bukkit.Location) -> ipsum
com.volmit.wormholes.portal.Portal -> com.volmit.wormholes.src.ligula:
    void update() -> update
    com.volmit.wormholes.portal.PortalIdentity getIdentity() -> eros
    com.volmit.wormholes.portal.PortalPosition getPosition() -> et
    boolean hasValidKey() -> aliquet
    com.volmit.wormholes.portal.PortalKey getKey() -> sodales
    boolean hasWormhole() -> scelerisque
    boolean isWormholeMutex() -> velit
    com.volmit.wormholes.portal.Wormhole getWormhole() -> Donec
    com.volmit.wormholes.service.MutexService getService() -> quam
    com.volmit.wormholes.util.DataCluster toData() -> malesuada
    void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    java.lang.String getServer() -> getServer
    com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> quis
    com.volmit.wormholes.aperture.AperturePlane getApature() -> tellus
    java.lang.Boolean getSided() -> est
    void setSided(java.lang.Boolean) -> Lorem
    java.lang.String getDisplayName() -> getDisplayName
    void updateDisplayName(java.lang.String) -> sit
    boolean hasDisplayName() -> hasDisplayName
    void save() -> save
com.volmit.wormholes.portal.PortalIdentity -> com.volmit.wormholes.src.Sed:
    com.volmit.wormholes.util.Axis axis -> blandit
    com.volmit.wormholes.util.Direction front -> risus
    com.volmit.wormholes.util.Direction back -> Fusce
    com.volmit.wormholes.util.Direction up -> maximus
    com.volmit.wormholes.util.Direction down -> ex
    com.volmit.wormholes.util.Direction left -> porttitor
    com.volmit.wormholes.util.Direction right -> nisi
    com.volmit.wormholes.portal.PortalKey key -> justo
    18:28:void <init>(com.volmit.wormholes.util.Direction,com.volmit.wormholes.portal.PortalKey) -> <init>
    33:33:java.lang.String toString() -> toString
    38:46:com.volmit.wormholes.util.Axis getAx() -> hendrerit
    51:51:com.volmit.wormholes.util.Direction getFront() -> Etiam
    56:56:com.volmit.wormholes.util.Direction getBack() -> diam
    61:61:com.volmit.wormholes.util.Direction getUp() -> dignissim
    66:66:com.volmit.wormholes.util.Direction getDown() -> arcu
    71:71:com.volmit.wormholes.util.Direction getLeft() -> varius
    76:76:com.volmit.wormholes.util.Direction getRight() -> placerat
    81:81:com.volmit.wormholes.util.Axis getAxis() -> Nunc
    86:86:com.volmit.wormholes.portal.PortalKey getKey() -> sodales
    91:92:void setKey(com.volmit.wormholes.portal.PortalKey) -> ipsum
com.volmit.wormholes.portal.PortalKey -> com.volmit.wormholes.src.ultrices:
    org.bukkit.DyeColor u -> Suspendisse
    org.bukkit.DyeColor d -> elementum
    org.bukkit.DyeColor l -> mattis
    org.bukkit.DyeColor r -> primis
    20:26:void <init>(byte[]) -> <init>
    28:34:void <init>(org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor) -> <init>
    38:38:java.lang.String getSName() -> Ut
    43:43:com.volmit.wormholes.portal.PortalKey fromSName(java.lang.String) -> amet
    48:48:org.bukkit.DyeColor getU() -> eleifend
    53:54:void setU(org.bukkit.DyeColor) -> Lorem
    58:58:org.bukkit.DyeColor getD() -> nibh
    63:64:void setD(org.bukkit.DyeColor) -> ipsum
    68:68:org.bukkit.DyeColor getL() -> faucibus
    73:74:void setL(org.bukkit.DyeColor) -> dolor
    78:78:org.bukkit.DyeColor getR() -> Class
    83:84:void setR(org.bukkit.DyeColor) -> sit
    88:88:byte[] toData() -> aptent
    94:96:java.lang.String toString() -> toString
    102:109:int hashCode() -> hashCode
    115:152:boolean equals(java.lang.Object) -> equals
    157:202:void applyToCuboid(com.volmit.wormholes.util.Cuboid,com.volmit.wormholes.util.Direction) -> Lorem
com.volmit.wormholes.portal.PortalPosition -> com.volmit.wormholes.src.imperdiet:
    com.volmit.wormholes.util.Cuboid pane -> cubilia
    com.volmit.wormholes.util.Cuboid ipane -> Curae
    com.volmit.wormholes.util.Cuboid area -> habitant
    com.volmit.wormholes.util.Cuboid activation -> morbi
    com.volmit.wormholes.util.Cuboid frameUp -> senectus
    com.volmit.wormholes.util.Cuboid frameDown -> netus
    com.volmit.wormholes.util.Cuboid frameLeft -> fames
    com.volmit.wormholes.util.Cuboid frameRight -> pharetra
    com.volmit.wormholes.util.Cuboid iarea -> potenti
    com.volmit.wormholes.util.GList frame -> pretium
    com.volmit.wormholes.util.GList keyset -> dui
    org.bukkit.Location centerUp -> massa
    org.bukkit.Location centerDown -> gravida
    org.bukkit.Location centerLeft -> fringilla
    org.bukkit.Location centerRight -> Nulla
    org.bukkit.Location center -> facilisi
    org.bukkit.Location cornerUL -> libero
    org.bukkit.Location cornerUR -> condimentum
    org.bukkit.Location cornerDL -> interdum
    org.bukkit.Location cornerDR -> dapibus
    org.bukkit.Location corneriUL -> sollicitudin
    org.bukkit.Location corneriUR -> Aliquam
    org.bukkit.Location corneriDL -> auctor
    org.bukkit.Location corneriDR -> Curabitur
    com.volmit.wormholes.portal.PortalIdentity identity -> faucibus
    com.volmit.wormholes.projection.BoundingBox boundingBox -> feugiat
    44:83:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.util.Cuboid) -> <init>
    87:87:int getSize() -> getSize
    92:92:org.bukkit.Location intersectsv(org.bukkit.Location,org.bukkit.util.Vector) -> Lorem
    97:114:boolean intersects(org.bukkit.Location,org.bukkit.Location) -> Lorem
    119:136:org.bukkit.Location intersectsv(org.bukkit.Location,org.bukkit.Location) -> ipsum
    141:141:org.bukkit.block.Block getRandomKeyBlock() -> taciti
    146:146:boolean intersects(org.bukkit.Location,org.bukkit.util.Vector) -> ipsum
    151:151:boolean isInsidePortal(org.bukkit.Location) -> elit
    156:170:com.volmit.wormholes.util.Cuboid getSideArea(org.bukkit.Location) -> Morbi
    175:186:org.bukkit.Location ul() -> sociosqu
    191:202:org.bukkit.Location ur() -> ad
    207:218:org.bukkit.Location bl() -> litora
    223:234:org.bukkit.Location br() -> torquent
    239:250:org.bukkit.Location uli() -> per
    255:266:org.bukkit.Location uri() -> conubia
    271:282:org.bukkit.Location bli() -> nostra
    287:298:org.bukkit.Location bri() -> inceptos
    303:303:com.volmit.wormholes.util.Cuboid getOPane() -> himenaeos
    308:308:com.volmit.wormholes.util.Cuboid getPane() -> Cras
    313:313:com.volmit.wormholes.util.Cuboid getArea() -> pellentesque
    318:318:com.volmit.wormholes.util.Cuboid getFrameUp() -> ut
    323:323:com.volmit.wormholes.util.Cuboid getFrameDown() -> finibus
    328:328:com.volmit.wormholes.util.Cuboid getFrameLeft() -> fermentum
    333:333:com.volmit.wormholes.util.Cuboid getFrameRight() -> augue
    338:338:com.volmit.wormholes.util.GList getFrame() -> erat
    343:343:org.bukkit.Location getCenterUp() -> Aenean
    348:348:org.bukkit.Location getCenterDown() -> blandit
    353:353:org.bukkit.Location getCenterLeft() -> risus
    358:358:org.bukkit.Location getCenterRight() -> Fusce
    363:363:org.bukkit.Location getCenter() -> getCenter
    368:368:org.bukkit.Location getCornerUL() -> maximus
    373:373:org.bukkit.Location getCornerUR() -> ex
    378:378:org.bukkit.Location getCornerDL() -> porttitor
    383:383:org.bukkit.Location getCornerDR() -> nisi
    388:388:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> eros
    393:393:com.volmit.wormholes.projection.BoundingBox getBoundingBox() -> justo
    398:398:com.volmit.wormholes.util.GList getKeyBlocks() -> Suspendisse
    403:403:com.volmit.wormholes.util.Cuboid getIpane() -> elementum
    408:408:com.volmit.wormholes.util.GList getKeyset() -> mattis
    413:413:org.bukkit.Location getCorneriUL() -> primis
    418:418:org.bukkit.Location getCorneriUR() -> cubilia
    423:423:org.bukkit.Location getCorneriDL() -> Curae
    428:428:org.bukkit.Location getCorneriDR() -> habitant
    433:433:com.volmit.wormholes.util.Cuboid getIarea() -> morbi
    438:438:com.volmit.wormholes.util.Cuboid getActivation() -> senectus
com.volmit.wormholes.portal.PortalPosition$1 -> com.volmit.wormholes.src.imperdiet$1:
    com.volmit.wormholes.portal.PortalPosition this$0 -> efficitur
    boolean[] val$traces -> laoreet
    1:101:void <init>(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    106:111:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.PortalPosition$2 -> com.volmit.wormholes.src.imperdiet$2:
    com.volmit.wormholes.portal.PortalPosition this$0 -> efficitur
    org.bukkit.Location[] val$traces -> nunc
    1:123:void <init>(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,org.bukkit.Location[]) -> <init>
    128:133:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.portal.PortalSettings -> com.volmit.wormholes.src.turpis:
    boolean project -> venenatis
    boolean aparture -> rutrum
    java.lang.String customName -> mauris
    boolean hasCustomName -> lobortis
    boolean allowEntities -> bibendum
    7:16:void <init>() -> <init>
    20:20:boolean isProject() -> netus
    25:25:boolean isAparture() -> fames
    30:30:java.lang.String getCustomName() -> getCustomName
    35:35:boolean isHasCustomName() -> pharetra
    40:40:boolean isAllowEntities() -> potenti
    45:46:void setProject(boolean) -> dolor
    50:51:void setAparture(boolean) -> sit
    55:56:void setCustomName(java.lang.String) -> setCustomName
    60:61:void setHasCustomName(boolean) -> amet
    65:66:void setAllowEntities(boolean) -> consectetur
com.volmit.wormholes.portal.RemotePortal -> com.volmit.wormholes.src.Nullam:
    java.lang.String server -> taciti
    com.volmit.wormholes.portal.PortalIdentity identity -> faucibus
    java.lang.Boolean sided -> nostra
    java.lang.String displayName -> displayName
    java.lang.Boolean wait -> Orci
    18:25:void <init>(java.lang.String,com.volmit.wormholes.portal.PortalIdentity,java.lang.String) -> <init>
    29:30:void setWait() -> pretium
    36:36:void update() -> update
    41:41:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> eros
    47:47:com.volmit.wormholes.portal.PortalPosition getPosition() -> et
    53:53:com.volmit.wormholes.portal.PortalKey getKey() -> sodales
    59:59:boolean hasWormhole() -> scelerisque
    65:65:boolean isWormholeMutex() -> velit
    71:71:com.volmit.wormholes.portal.Wormhole getWormhole() -> Donec
    77:77:com.volmit.wormholes.service.MutexService getService() -> quam
    83:93:com.volmit.wormholes.util.DataCluster toData() -> malesuada
    99:103:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    108:108:java.lang.String getServer() -> getServer
    114:119:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> quis
    125:129:int hashCode() -> hashCode
    135:170:boolean equals(java.lang.Object) -> equals
    176:176:boolean hasValidKey() -> aliquet
    182:182:com.volmit.wormholes.aperture.AperturePlane getApature() -> tellus
    188:188:java.lang.Boolean getSided() -> est
    194:195:void setSided(java.lang.Boolean) -> Lorem
    200:200:java.lang.String getDisplayName() -> getDisplayName
    206:207:void updateDisplayName(java.lang.String) -> sit
    212:212:boolean hasDisplayName() -> hasDisplayName
    219:219:void save() -> save
    223:223:java.lang.Boolean getWait() -> dui
com.volmit.wormholes.portal.Wormhole -> com.volmit.wormholes.src.vehicula:
    com.volmit.wormholes.portal.LocalPortal getSource() -> mollis
    com.volmit.wormholes.portal.Portal getDestination() -> convallis
    void push(org.bukkit.entity.Entity,org.bukkit.Location) -> Lorem
    com.volmit.wormholes.util.GList getFilters() -> viverra
com.volmit.wormholes.portal.WormholeEntityFilter -> com.volmit.wormholes.src.porta:
    com.volmit.wormholes.portal.FilterPolicy policy -> natoque
    com.volmit.wormholes.portal.FilterMode mode -> penatibus
    com.volmit.wormholes.util.GList entities -> magnis
    int[] $SWITCH_TABLE$com$volmit$wormholes$portal$FilterMode -> dis
    int[] $SWITCH_TABLE$com$volmit$wormholes$portal$FilterPolicy -> parturient
    13:18:void <init>(com.volmit.wormholes.portal.FilterPolicy,com.volmit.wormholes.portal.FilterMode,com.volmit.wormholes.util.GList) -> <init>
    22:23:void <init>(com.volmit.wormholes.portal.FilterPolicy,com.volmit.wormholes.portal.FilterMode,org.bukkit.entity.EntityType[]) -> <init>
    28:88:boolean onFilter(com.volmit.wormholes.portal.Wormhole,org.bukkit.entity.Entity) -> Lorem
    94:94:com.volmit.wormholes.portal.FilterPolicy getFilterPolicy() -> massa
    100:100:com.volmit.wormholes.portal.FilterMode getFilterMode() -> gravida
    105:105:com.volmit.wormholes.portal.FilterPolicy getPolicy() -> id
    110:110:com.volmit.wormholes.portal.FilterMode getMode() -> fringilla
    115:115:com.volmit.wormholes.util.GList getEntities() -> Nulla
    7:7:int[] $SWITCH_TABLE$com$volmit$wormholes$portal$FilterMode() -> facilisi
    7:7:int[] $SWITCH_TABLE$com$volmit$wormholes$portal$FilterPolicy() -> libero
com.volmit.wormholes.portal.WormholeFilter -> com.volmit.wormholes.src.ultricies:
    boolean onFilter(com.volmit.wormholes.portal.Wormhole,org.bukkit.entity.Entity) -> Lorem
    com.volmit.wormholes.portal.FilterPolicy getFilterPolicy() -> massa
    com.volmit.wormholes.portal.FilterMode getFilterMode() -> gravida
com.volmit.wormholes.projection.ArrivalVector -> com.volmit.wormholes.src.vestibulum:
    org.bukkit.util.Vector velocity -> montes
    org.bukkit.util.Vector direction -> nascetur
    org.bukkit.util.Vector offset -> ridiculus
    11:16:void <init>(org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    20:20:org.bukkit.util.Vector getVelocity() -> getVelocity
    25:26:void setVelocity(org.bukkit.util.Vector) -> setVelocity
    30:30:org.bukkit.util.Vector getDirection() -> getDirection
    35:36:void setDirection(org.bukkit.util.Vector) -> setDirection
    40:40:org.bukkit.util.Vector getOffset() -> condimentum
    45:46:void setOffset(org.bukkit.util.Vector) -> dolor
    51:62:java.lang.String toString() -> toString
    67:80:void fromString(java.lang.String) -> consectetur
com.volmit.wormholes.projection.BaseViewportRenderer -> com.volmit.wormholes.src.felis:
    com.volmit.wormholes.projection.Viewport viewport -> mus
    int stage -> Interdum
    11:15:void <init>(com.volmit.wormholes.projection.Viewport,int) -> <init>
    20:20:org.bukkit.entity.Player getPlayer() -> getPlayer
    26:26:com.volmit.wormholes.projection.Viewport getViewport() -> interdum
    32:32:int getStage() -> dapibus
    38:38:int getMaxStage() -> sollicitudin
    44:44:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> Aliquam
    50:53:com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> auctor
    59:62:com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> Curabitur
    68:68:com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> ipsum
    74:74:boolean isComplete() -> isComplete
com.volmit.wormholes.projection.BoundingBox -> com.volmit.wormholes.src.nec:
    com.volmit.wormholes.util.GList inside -> aggregate
    com.volmit.wormholes.util.GList entering -> architect
    com.volmit.wormholes.util.GList exiting -> benchmark
    com.volmit.wormholes.util.Cuboid cuboid -> brand
    14:20:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    26:55:void flush() -> flush
    59:59:boolean isInside(org.bukkit.entity.Entity) -> dolor
    64:64:boolean isEntering(org.bukkit.entity.Entity) -> sit
    69:69:boolean isEnteringOrInside(org.bukkit.entity.Entity) -> amet
    74:74:boolean isExiting(org.bukkit.entity.Entity) -> consectetur
    79:79:com.volmit.wormholes.util.GList getInside() -> feugiat
    84:84:com.volmit.wormholes.util.GList getEntering() -> efficitur
    89:89:com.volmit.wormholes.util.GList getExiting() -> laoreet
    94:94:com.volmit.wormholes.util.Cuboid getCuboid() -> nunc
com.volmit.wormholes.projection.MBC -> com.volmit.wormholes.src.tristique:
    com.volmit.wormholes.util.MaterialBlock mb -> cultivate
    org.bukkit.util.Vector v -> deliver
    13:16:void <init>(long) -> <init>
    21:21:java.lang.String toString() -> toString
    24:28:void <init>(com.volmit.wormholes.util.MaterialBlock,org.bukkit.util.Vector) -> <init>
    33:38:long toLong() -> venenatis
    44:52:void fromLong(long) -> ipsum
    56:56:com.volmit.wormholes.util.MaterialBlock getMb() -> rutrum
    61:61:org.bukkit.util.Vector getV() -> mauris
    66:67:void setMb(com.volmit.wormholes.util.MaterialBlock) -> Lorem
    71:72:void setV(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.projection.NulledViewport -> com.volmit.wormholes.src.lacinia:
    11:12:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:void rebuild() -> lobortis
    23:23:boolean contains(org.bukkit.Location) -> pulvinar
com.volmit.wormholes.projection.PartialRenderer -> com.volmit.wormholes.src.Duis:
    com.volmit.wormholes.projection.ProjectionSet queue -> deploy
    com.volmit.wormholes.projection.ProjectionSet rendered -> disintermediate
    com.volmit.wormholes.projection.Viewport view -> drive
    11:16:void <init>(com.volmit.wormholes.projection.Viewport) -> <init>
    20:20:boolean isComplete() -> isComplete
    25:33:com.volmit.wormholes.util.Cuboid next() -> bibendum
    38:38:com.volmit.wormholes.projection.ProjectionSet getQueue() -> Orci
    43:43:com.volmit.wormholes.projection.ProjectionSet getRendered() -> natoque
    48:48:com.volmit.wormholes.projection.Viewport getView() -> penatibus
com.volmit.wormholes.projection.ProjectionMask -> com.volmit.wormholes.src.tempor:
    com.volmit.wormholes.util.GList needsProjection -> e
    10:13:void <init>() -> <init>
    17:18:void projected(org.bukkit.entity.Player) -> consectetur
    22:26:void sched(org.bukkit.entity.Player) -> adipiscing
    30:30:boolean needsProjection() -> magnis
    35:36:void clear() -> clear
com.volmit.wormholes.projection.ProjectionPlane -> com.volmit.wormholes.src.eget:
    com.volmit.wormholes.util.GMap mapping -> enable
    com.volmit.wormholes.util.GMap remapCache -> embrace
    com.volmit.wormholes.util.GMap ormapCache -> empower
    27:32:void <init>() -> <init>
    36:36:com.volmit.wormholes.util.GMap getMapping() -> dis
    41:41:boolean hasContent() -> parturient
    46:46:org.bukkit.util.Vector ovap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> Lorem
    51:51:com.volmit.wormholes.util.GMap omap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> dolor
    56:78:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    83:98:void addSuperCompressed(byte[]) -> ipsum
    102:102:com.volmit.wormholes.util.GList getSuperCompressedByteCull(int) -> dolor
    107:131:com.volmit.wormholes.util.GList getSuperCompressed(int) -> sit
    136:138:void blockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    143:169:void sample(org.bukkit.Location,int,boolean) -> Lorem
    173:173:com.volmit.wormholes.util.GMap getRemapCache() -> montes
    178:178:com.volmit.wormholes.util.GMap getOrmapCache() -> nascetur
com.volmit.wormholes.projection.ProjectionSet -> com.volmit.wormholes.src.semper:
    com.volmit.wormholes.util.GList cuboids -> engage
    14:17:void <init>() -> <init>
    21:24:void <init>(com.volmit.wormholes.util.GList) -> <init>
    28:30:com.volmit.wormholes.util.Cuboid pop() -> ridiculus
    35:39:void remove(int) -> remove
    43:47:void keep(int) -> amet
    51:51:com.volmit.wormholes.util.Cuboid get(int) -> consectetur
    56:56:int size() -> size
    61:62:void add(com.volmit.wormholes.util.GList) -> Lorem
    66:67:void add(com.volmit.wormholes.util.Cuboid) -> Lorem
    71:71:com.volmit.wormholes.util.GList get() -> mus
    76:83:com.volmit.wormholes.util.GList iterator() -> Interdum
    88:95:com.volmit.wormholes.util.GList getBlocks() -> aggregate
    100:109:com.volmit.wormholes.util.GList getEntities() -> Nulla
    114:127:boolean contains(org.bukkit.Location) -> pulvinar
    132:145:boolean contains(org.bukkit.block.Block) -> Lorem
    151:154:int hashCode() -> hashCode
    159:159:com.volmit.wormholes.projection.ProjectionSet copy() -> architect
    165:189:boolean equals(java.lang.Object) -> equals
    194:195:void clear() -> clear
com.volmit.wormholes.projection.QueuedChunk -> com.volmit.wormholes.src.aliquam:
    int bytes -> engineer
    int dist -> enhance
    int lf -> envisioneer
    void run() -> run
    11:16:void <init>(int,int,int) -> <init>
    20:20:int getBytes() -> getBytes
    25:25:int getDist() -> benchmark
    30:30:int getLf() -> brand
com.volmit.wormholes.projection.RasteredChunk -> com.volmit.wormholes.src.lectus:
    int x -> x
    int z -> z
    com.comphenix.protocol.wrappers.MultiBlockChangeInfo[][][] mbi -> evolve
    org.bukkit.World world -> world
    26:32:void <init>(int,int,org.bukkit.World) -> <init>
    36:37:void flush() -> flush
    43:50:void put(int,int,int,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    54:134:int project(org.bukkit.entity.Player) -> elit
com.volmit.wormholes.projection.RasteredChunk$1 -> com.volmit.wormholes.src.lectus$1:
    com.volmit.wormholes.projection.RasteredChunk this$0 -> expedite
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange val$w -> extend
    1:114:void <init>(com.volmit.wormholes.projection.RasteredChunk,int,int,int,org.bukkit.entity.Player,com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange) -> <init>
    121:130:void run() -> run
com.volmit.wormholes.projection.RasteredPlayer -> com.volmit.wormholes.src.consequat:
    com.volmit.wormholes.util.GMap queuedLayer -> facilitate
    com.volmit.wormholes.util.GMap ghostLayer -> generate
    org.bukkit.entity.Player p -> grow
    java.util.Queue q -> harness
    18:24:void <init>(org.bukkit.entity.Player) -> <init>
    28:36:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    42:91:void flush() -> flush
    95:117:int prepareChunks() -> cultivate
    122:128:void dequeueAll() -> deliver
    132:132:boolean isQueued(org.bukkit.Location) -> vulputate
    137:137:int queueSize() -> deploy
    13:13:com.volmit.wormholes.util.GMap access$0(com.volmit.wormholes.projection.RasteredPlayer) -> Lorem
com.volmit.wormholes.projection.RasteredPlayer$1 -> com.volmit.wormholes.src.consequat$1:
    com.volmit.wormholes.projection.RasteredPlayer this$0 -> implement
    org.bukkit.Location val$l -> incentivize
    com.volmit.wormholes.util.MaterialBlock val$mb -> incubate
    1:28:void <init>(com.volmit.wormholes.projection.RasteredPlayer,org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> <init>
    33:34:void run() -> run
com.volmit.wormholes.projection.RasteredServer -> com.volmit.wormholes.src.neque:
    com.volmit.wormholes.util.GMap projections -> innovate
    12:15:void <init>() -> <init>
    19:25:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    29:33:void flush() -> flush
    37:45:boolean canFlush() -> disintermediate
com.volmit.wormholes.projection.RasteredSystem -> com.volmit.wormholes.src.sagittis:
    com.volmit.wormholes.util.GMap rasteredPlayers -> integrate
    boolean flushing -> iterate
    com.volmit.wormholes.util.GMap queueSend -> leverage
    19:24:void <init>() -> <init>
    28:32:void dequeueAll() -> deliver
    36:42:void dequeue(org.bukkit.entity.Player,org.bukkit.Location) -> Lorem
    46:51:boolean isQueued(org.bukkit.entity.Player,org.bukkit.Location) -> ipsum
    56:62:void queue(org.bukkit.entity.Player,org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    66:66:com.volmit.wormholes.projection.RasteredPlayer get(org.bukkit.entity.Player) -> Morbi
    71:101:void flushRasterQueue() -> drive
    105:132:void runNext(com.volmit.wormholes.util.GList) -> ipsum
    136:142:void queueRaster(org.bukkit.entity.Player,com.volmit.wormholes.projection.QueuedChunk) -> Lorem
    146:172:void flush() -> flush
com.volmit.wormholes.projection.RasteredWorld -> com.volmit.wormholes.src.lorem:
    com.volmit.wormholes.util.GMap chunks -> matrix
    org.bukkit.World world -> world
    15:19:void <init>(org.bukkit.World) -> <init>
    23:32:void flush() -> flush
    36:36:boolean hasChunks() -> e
    41:43:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    47:51:void createChunkIfNull(int,int) -> Lorem
com.volmit.wormholes.projection.RenderMesh -> com.volmit.wormholes.src.vel:
    com.volmit.wormholes.util.GMap set -> maximize
    11:14:void <init>() -> <init>
    18:23:com.volmit.wormholes.projection.PartialRenderer getRenderer(org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.projection.Viewport) -> Lorem
    28:29:void removePortal(com.volmit.wormholes.portal.LocalPortal) -> sit
com.volmit.wormholes.projection.RenderSet -> com.volmit.wormholes.src.Quisque:
    com.volmit.wormholes.portal.LocalPortal portal -> mesh
    com.volmit.wormholes.util.GMap renderers -> monetize
    12:16:void <init>(com.volmit.wormholes.portal.LocalPortal) -> <init>
    20:20:com.volmit.wormholes.portal.LocalPortal getPortal() -> enable
    25:25:com.volmit.wormholes.util.GMap getRenderers() -> embrace
    30:35:com.volmit.wormholes.projection.PartialRenderer getRenderer(com.volmit.wormholes.projection.Viewport,org.bukkit.entity.Player) -> Lorem
    40:47:void update() -> update
com.volmit.wormholes.projection.Viewport -> com.volmit.wormholes.src.congue:
    org.bukkit.entity.Player p -> grow
    com.volmit.wormholes.portal.Portal portal -> quam
    com.volmit.wormholes.projection.ProjectionSet set -> morph
    21:26:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    30:34:void wipe() -> empower
    38:57:void rebuild() -> lobortis
    61:61:com.volmit.wormholes.util.GList getEntities() -> Nulla
    66:71:boolean contains(org.bukkit.Location) -> pulvinar
    76:81:boolean contains(org.bukkit.block.Block) -> Lorem
    86:86:org.bukkit.Location getIris() -> engage
    91:91:org.bukkit.entity.Player getP() -> engineer
    96:96:com.volmit.wormholes.portal.Portal getPortal() -> neque
    102:107:int hashCode() -> hashCode
    113:160:boolean equals(java.lang.Object) -> equals
    165:165:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> Aliquam
    170:170:org.bukkit.Location getLA() -> enhance
    175:175:org.bukkit.Location getLB() -> envisioneer
    180:202:com.volmit.wormholes.projection.ProjectionSet betweenThisAnd(com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.portal.Portal) -> Lorem
com.volmit.wormholes.projection.ViewportRenderer -> com.volmit.wormholes.src.vitae:
    org.bukkit.entity.Player getPlayer() -> getPlayer
    com.volmit.wormholes.projection.Viewport getViewport() -> interdum
    int getStage() -> dapibus
    int getMaxStage() -> sollicitudin
    com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> Aliquam
    com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> auctor
    com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> Curabitur
    com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> ipsum
    boolean isComplete() -> isComplete
com.volmit.wormholes.provider.AutomagicalProvider -> com.volmit.wormholes.src.ornare:
    com.volmit.wormholes.util.GMap msd -> optimize
    44:48:void <init>() -> <init>
    53:59:void onFlush() -> evolve
    64:118:void on(com.volmit.wormholes.event.PortalActivatePlayerEvent) -> Lorem
    124:124:void on(com.volmit.wormholes.event.PortalDeactivatePlayerEvent) -> Lorem
    129:173:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    178:342:void ona(org.bukkit.event.player.PlayerInteractEvent) -> ipsum
    42:42:com.volmit.wormholes.util.GMap access$0(com.volmit.wormholes.provider.AutomagicalProvider) -> Lorem
com.volmit.wormholes.provider.AutomagicalProvider$1 -> com.volmit.wormholes.src.ornare$1:
    com.volmit.wormholes.provider.AutomagicalProvider this$0 -> orchestrate
    com.volmit.wormholes.event.PortalActivatePlayerEvent val$e -> productize
    1:100:void <init>(com.volmit.wormholes.provider.AutomagicalProvider,int,com.volmit.wormholes.event.PortalActivatePlayerEvent) -> <init>
    105:116:void run() -> run
com.volmit.wormholes.provider.AutomagicalProvider$2 -> com.volmit.wormholes.src.ornare$2:
    com.volmit.wormholes.provider.AutomagicalProvider this$0 -> orchestrate
    com.volmit.wormholes.util.Direction val$md -> recontextualize
    com.volmit.wormholes.util.Cuboid val$cx -> redefine
    org.bukkit.event.player.PlayerInteractEvent val$e -> reintermediate
    1:308:void <init>(com.volmit.wormholes.provider.AutomagicalProvider,com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid,org.bukkit.event.player.PlayerInteractEvent) -> <init>
    315:340:void run() -> run
com.volmit.wormholes.provider.BaseProvider -> com.volmit.wormholes.src.Integer:
    com.volmit.wormholes.projection.RasteredSystem rasterer -> reinvent
    com.volmit.wormholes.util.GList moved -> repurpose
    com.volmit.wormholes.util.GList conf -> revolutionize
    long lastms -> scale
    com.volmit.wormholes.util.GList debug -> seize
    55:64:void <init>() -> <init>
    68:72:void dedebug(org.bukkit.entity.Player) -> pulvinar
    76:80:void debug(org.bukkit.entity.Player) -> vulputate
    84:92:void errorMessage(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> Lorem
    96:96:boolean isDebugging(org.bukkit.entity.Player) -> dictum
    102:103:void flush() -> flush
    void onFlush() -> evolve
    109:118:com.volmit.wormholes.util.GList getBase(int) -> adipiscing
    123:132:com.volmit.wormholes.util.GList getBaseSqrt(int) -> elit
    138:150:com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    157:187:void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    191:218:void forceWipe(com.volmit.wormholes.portal.LocalPortal) -> consectetur
    223:248:void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    253:298:void loadAllPortals() -> expedite
    302:631:boolean configure(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> Lorem
    637:642:void dfs() -> exploit
    647:652:void dfd() -> extend
    656:660:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid) -> Lorem
    666:684:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    691:692:void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    697:697:com.volmit.wormholes.projection.RasteredSystem getRasterer() -> facilitate
    703:705:com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    711:711:boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    717:717:boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    723:727:void movePlayer(org.bukkit.entity.Player) -> Vestibulum
    732:732:boolean hasMoved(org.bukkit.entity.Player) -> in
    738:772:com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    54:54:com.volmit.wormholes.util.GList access$0(com.volmit.wormholes.provider.BaseProvider) -> Lorem
    55:55:long access$1(com.volmit.wormholes.provider.BaseProvider) -> ipsum
    55:55:void access$2(com.volmit.wormholes.provider.BaseProvider,long) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1 -> com.volmit.wormholes.src.Integer$1:
    com.volmit.wormholes.provider.BaseProvider this$0 -> strategize
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.portal.LocalPortal val$l -> streamline
    1:325:void <init>(com.volmit.wormholes.provider.BaseProvider,java.lang.Integer,org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal) -> <init>
    330:625:void run() -> run
    325:325:com.volmit.wormholes.provider.BaseProvider access$0(com.volmit.wormholes.provider.BaseProvider$1) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1$1 -> com.volmit.wormholes.src.Integer$1$1:
    com.volmit.wormholes.provider.BaseProvider$1 this$1 -> syndicate
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.portal.LocalPortal val$l -> streamline
    1:330:void <init>(com.volmit.wormholes.provider.BaseProvider$1,org.bukkit.entity.Player,boolean,org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal) -> <init>
    336:336:void onUpdate() -> generate
    341:379:void onSelect(java.lang.String,int) -> Lorem
    384:386:void onOpen() -> grow
    391:424:java.lang.String onEnable(java.lang.String) -> adipiscing
    430:455:java.lang.String onDisable(java.lang.String) -> elit
    461:463:void onClose() -> harness
    468:610:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
    330:330:com.volmit.wormholes.provider.BaseProvider$1 access$0(com.volmit.wormholes.provider.BaseProvider$1$1) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1$1$1 -> com.volmit.wormholes.src.Integer$1$1$1:
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> synergize
    com.volmit.wormholes.portal.LocalPortal val$l -> streamline
    1:515:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,java.lang.Integer,com.volmit.wormholes.portal.LocalPortal) -> <init>
    520:521:void run() -> run
com.volmit.wormholes.provider.BaseProvider$1$1$2 -> com.volmit.wormholes.src.Integer$1$1$2:
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> synergize
    org.bukkit.entity.Player val$p -> exploit
    com.volmit.wormholes.portal.LocalPortal val$l -> streamline
    1:541:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,org.bukkit.entity.Player,boolean,org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal) -> <init>
    547:547:void onUpdate() -> generate
    552:553:void onSelect(java.lang.String,int) -> Lorem
    558:559:void onOpen() -> grow
    564:564:java.lang.String onEnable(java.lang.String) -> adipiscing
    570:570:java.lang.String onDisable(java.lang.String) -> elit
    576:577:void onClose() -> harness
    582:594:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.provider.PortalProvider -> com.volmit.wormholes.src.commodo:
    void flush() -> flush
    void loadAllPortals() -> expedite
    void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    boolean hasMoved(org.bukkit.entity.Player) -> in
    void movePlayer(org.bukkit.entity.Player) -> Vestibulum
    void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    com.volmit.wormholes.projection.RasteredSystem getRasterer() -> facilitate
    com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    void dfs() -> exploit
    void dfd() -> extend
com.volmit.wormholes.service.ApertureService -> com.volmit.wormholes.src.ante:
    com.volmit.wormholes.aperture.BlacklistAperture b -> synthesize
    com.volmit.wormholes.util.GMap remoteApaturePlanes -> target
    com.volmit.wormholes.util.GMap blacklistQueue -> transform
    com.volmit.wormholes.util.GMap blacklisted -> transition
    39:45:void <init>() -> <init>
    49:206:void flush() -> flush
    210:250:void layer3Stream(byte[]) -> dolor
    254:260:void hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> consectetur
    264:270:void showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> adipiscing
    274:278:void showAll(org.bukkit.entity.Player) -> purus
    282:287:com.volmit.wormholes.util.GList getHidden(org.bukkit.entity.Player) -> non
    292:292:com.volmit.wormholes.aperture.BlacklistAperture getB() -> implement
    297:297:com.volmit.wormholes.util.GMap getRemoteApaturePlanes() -> incentivize
    302:302:com.volmit.wormholes.util.GMap getBlacklistQueue() -> incubate
    307:307:com.volmit.wormholes.util.GMap getBlacklisted() -> innovate
com.volmit.wormholes.service.EffectService -> com.volmit.wormholes.src.cursus:
    20:23:void <init>() -> <init>
    27:40:void strikePortal(com.volmit.wormholes.portal.LocalPortal) -> Morbi
    44:52:void strike(com.volmit.wormholes.portal.LocalPortal) -> pulvinar
    56:59:void strikens(com.volmit.wormholes.portal.LocalPortal) -> vulputate
    63:89:void strikeAll(com.volmit.wormholes.portal.LocalPortal) -> dictum
    93:97:void push(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> Lorem
    101:105:void throwBack(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    109:109:org.bukkit.util.Vector throwBackVector(org.bukkit.entity.Entity,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    114:130:void ambient(com.volmit.wormholes.portal.LocalPortal) -> Vestibulum
    134:188:void rise(com.volmit.wormholes.portal.LocalPortal) -> in
    192:246:void riseNew(com.volmit.wormholes.portal.LocalPortal) -> purus
    250:294:void phaseDeny(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> Lorem
    298:342:void phase(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> ipsum
    346:361:void visualize(com.volmit.wormholes.portal.LocalPortal) -> non
    365:371:void created(com.volmit.wormholes.portal.LocalPortal) -> mi
    375:383:void destroyed(com.volmit.wormholes.portal.LocalPortal) -> euismod
com.volmit.wormholes.service.EffectService$1 -> com.volmit.wormholes.src.cursus$1:
    com.volmit.wormholes.service.EffectService this$0 -> unleash
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    1:31:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,com.volmit.wormholes.portal.LocalPortal) -> <init>
    36:37:void run() -> run
com.volmit.wormholes.service.EffectService$2 -> com.volmit.wormholes.src.cursus$2:
    com.volmit.wormholes.service.EffectService this$0 -> unleash
    org.bukkit.block.Block val$i -> visualize
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    1:65:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.block.Block,com.volmit.wormholes.portal.LocalPortal) -> <init>
    70:86:void run() -> run
com.volmit.wormholes.service.EffectService$3 -> com.volmit.wormholes.src.cursus$3:
    com.volmit.wormholes.service.EffectService this$0 -> unleash
    org.bukkit.util.Vector val$vx -> whiteboard
    org.bukkit.Location val$l -> incentivize
    1:352:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.util.Vector,org.bukkit.Location) -> <init>
    357:358:void run() -> run
com.volmit.wormholes.service.EntityService -> com.volmit.wormholes.src.suscipit:
    com.volmit.wormholes.util.GMap entities -> B2B
    com.volmit.wormholes.util.GMap aentities -> B2C
    31:36:void <init>() -> <init>
    41:47:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> Lorem
    52:63:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    68:77:void on(org.bukkit.event.entity.EntityDamageEvent) -> Lorem
    81:95:void dispatchAction(int,java.lang.String) -> Lorem
    99:124:com.volmit.wormholes.util.GList getAllEntitiesAs(org.bukkit.entity.Entity) -> adipiscing
    129:154:com.volmit.wormholes.util.GList getAllPlayersAs(int) -> Morbi
    159:199:void flush() -> flush
    203:246:void set(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal,com.volmit.wormholes.aperture.RemoteInstance,org.bukkit.Location) -> Lorem
    250:252:void shutdown() -> shutdown
com.volmit.wormholes.service.IOService -> com.volmit.wormholes.src.Mauris:
    16:19:void <init>() -> <init>
    25:35:void doConfig() -> integrate
    39:60:void doConfigBasic() -> iterate
    64:85:void doConfigExperimental() -> leverage
    91:99:com.volmit.wormholes.util.DataCluster load(java.io.File) -> Lorem
    106:113:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.service.MutexService -> com.volmit.wormholes.src.mollis:
    com.volmit.wormholes.util.GList insideThrottle -> back
    com.volmit.wormholes.util.GMap pendingPulls -> end
    java.lang.Integer broadcastInterval -> best
    com.volmit.wormholes.util.GMap waiting -> of
    com.volmit.wormholes.util.GMap actualVectors -> breed
    com.volmit.wormholes.util.GMap arrivals -> bleeding
    com.volmit.wormholes.util.GList iLock -> edge
    com.volmit.wormholes.aperture.EntityHider hider -> bricks
    87:98:void <init>() -> <init>
    102:107:void sendArrival(com.volmit.wormholes.portal.RemotePortal,org.bukkit.entity.Player,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    111:117:void ilock(org.bukkit.entity.Entity) -> elit
    121:121:boolean isILocked(org.bukkit.entity.Entity) -> Morbi
    126:127:void unILock(org.bukkit.entity.Entity) -> pulvinar
    131:131:com.volmit.wormholes.projection.ArrivalVector getArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> ipsum
    136:136:boolean hasArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> dolor
    141:147:void setArrival(com.volmit.wormholes.portal.LocalPortal,java.util.UUID,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    151:152:void setPending(java.util.UUID,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    156:160:void addThrottle(org.bukkit.entity.Entity) -> vulputate
    164:189:void setDestinationSided(com.volmit.wormholes.portal.LocalPortal,boolean) -> Lorem
    193:200:void on(org.bukkit.event.entity.EntitySpawnEvent) -> Lorem
    205:206:void on(org.bukkit.event.player.PlayerItemHeldEvent) -> Lorem
    210:211:void removeThrottle(org.bukkit.entity.Entity) -> dictum
    215:215:boolean isThrottled(org.bukkit.entity.Entity) -> Vestibulum
    220:228:void addLocalPortal(com.volmit.wormholes.portal.Portal) -> ipsum
    232:238:void removeLocalPortal(com.volmit.wormholes.portal.Portal) -> dolor
    242:247:void removeLocalPortalReverse(com.volmit.wormholes.portal.Portal) -> sit
    251:261:com.volmit.wormholes.portal.Portal[] getPortals(com.volmit.wormholes.portal.PortalKey) -> dolor
    266:274:com.volmit.wormholes.portal.Portal getPortal(com.volmit.wormholes.portal.PortalKey,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    280:287:void on(org.bukkit.event.world.ChunkUnloadEvent) -> ipsum
    292:317:void on(org.bukkit.event.player.PlayerMoveEvent) -> Lorem
    321:345:void handleArrivalIntent(org.bukkit.entity.Player) -> mi
    349:349:boolean hasLink(com.volmit.wormholes.portal.LocalPortal) -> Pellentesque
    354:354:boolean isLinkMutex(com.volmit.wormholes.portal.LocalPortal) -> at
    359:359:boolean hasWormhole(com.volmit.wormholes.portal.LocalPortal) -> iaculis
    364:364:boolean isMutexWormhole(com.volmit.wormholes.portal.LocalPortal) -> urna
    369:374:com.volmit.wormholes.portal.Wormhole getWormhole(com.volmit.wormholes.portal.LocalPortal) -> Proin
    379:395:boolean isPositionValid(com.volmit.wormholes.portal.PortalPosition) -> ipsum
    400:417:boolean isKeyValid(com.volmit.wormholes.portal.PortalKey) -> sit
    422:439:boolean isKeyValidAlready(com.volmit.wormholes.portal.PortalKey) -> amet
    444:473:void flush() -> flush
    477:478:void on(org.bukkit.event.player.PlayerQuitEvent) -> ipsum
    482:483:void dequeue(com.volmit.wormholes.portal.Portal) -> amet
    487:505:void updateThrottles() -> matrix
    509:783:void broadcastPortals() -> maximize
    787:841:void beginStream(java.lang.String,java.lang.String,java.lang.String,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    845:853:void layer2StreamRequest(com.volmit.wormholes.portal.Portal) -> consectetur
    857:901:void layer2Stream(byte[]) -> sit
    905:947:void sendPlayerThrough(org.bukkit.entity.Player,java.util.UUID,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,java.lang.Runnable) -> Lorem
    951:955:void updatePortals() -> mesh
    960:990:void on(org.bukkit.event.player.PlayerJoinEvent) -> Lorem
    994:1002:com.volmit.wormholes.util.GList getPortals() -> monetize
    1007:1007:com.volmit.wormholes.util.GList getLocalPortals() -> morph
    1012:1012:com.volmit.wormholes.util.GList getInsideThrottle() -> optimize
    1017:1017:java.lang.Integer getBroadcastInterval() -> orchestrate
    1022:1022:com.volmit.wormholes.util.GMap getMutexPortals() -> productize
    1027:1027:com.volmit.wormholes.util.GMap getPendingPulls() -> recontextualize
    1032:1036:void dequeueAll() -> deliver
    1041:1048:void on(org.bukkit.event.block.BlockPhysicsEvent) -> Lorem
    1053:1060:void on(org.bukkit.event.block.BlockFromToEvent) -> Lorem
    1065:1078:void on(org.bukkit.event.entity.EntityExplodeEvent) -> Lorem
    1083:1110:void on(org.bukkit.event.block.BlockBreakEvent) -> Lorem
    1114:1148:void blockChange(org.bukkit.Location,com.volmit.wormholes.portal.Portal) -> Lorem
    1153:1161:void sendBlockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock,com.volmit.wormholes.portal.Portal) -> Lorem
    1166:1183:void on(org.bukkit.event.block.BlockPlaceEvent) -> Lorem
    1187:1187:boolean canBuild(org.bukkit.entity.Player) -> euismod
    1192:1192:boolean canDestroy(org.bukkit.entity.Player) -> Pellentesque
    1197:1201:void updateEverything(java.lang.Runnable) -> Lorem
    1205:1207:void globalReload() -> redefine
    1211:1211:com.volmit.wormholes.util.GMap getWaiting() -> reintermediate
    1216:1216:com.volmit.wormholes.util.GMap getActualVectors() -> reinvent
    1221:1221:com.volmit.wormholes.util.GMap getArrivals() -> repurpose
    1226:1226:com.volmit.wormholes.util.GList getiLock() -> revolutionize
    1231:1232:void clearVectorCache() -> scale
    1236:1236:org.bukkit.util.Vector getActualVector(org.bukkit.entity.Player) -> at
    1241:1241:com.volmit.wormholes.aperture.EntityHider getHider() -> seize
    81:81:com.volmit.wormholes.util.GMap access$0(com.volmit.wormholes.service.MutexService) -> Lorem
com.volmit.wormholes.service.MutexService$1 -> com.volmit.wormholes.src.mollis$1:
    com.volmit.wormholes.service.MutexService this$0 -> and
    com.volmit.wormholes.portal.LocalPortal val$lp -> clicks
    java.lang.String val$as -> mortar
    java.lang.String val$to -> collaborative
    1:797:void <init>(com.volmit.wormholes.service.MutexService,com.volmit.wormholes.portal.LocalPortal,java.lang.String,java.lang.String) -> <init>
    804:839:void async() -> strategize
com.volmit.wormholes.service.MutexService$1$1 -> com.volmit.wormholes.src.mollis$1$1:
    com.volmit.wormholes.service.MutexService$1 this$1 -> compelling
    java.lang.String val$as -> mortar
    java.lang.Byte[] val$i -> cross
    java.lang.String val$to -> collaborative
    1:808:void <init>(com.volmit.wormholes.service.MutexService$1,java.lang.String,java.lang.Byte[],java.lang.String) -> <init>
    815:830:void async() -> strategize
com.volmit.wormholes.service.MutexService$2 -> com.volmit.wormholes.src.mollis$2:
    com.volmit.wormholes.service.MutexService this$0 -> and
    byte[] val$msgbytes -> platform
    1:862:void <init>(com.volmit.wormholes.service.MutexService,byte[]) -> <init>
    869:899:void async() -> strategize
com.volmit.wormholes.service.MutexService$3 -> com.volmit.wormholes.src.mollis$3:
    com.volmit.wormholes.service.MutexService this$0 -> and
    org.bukkit.entity.Player val$p -> exploit
    java.lang.Runnable val$r -> media
    com.volmit.wormholes.portal.Portal val$to -> customized
    java.util.UUID val$id -> cutting
    org.bukkit.util.Vector val$velocity -> distributed
    org.bukkit.util.Vector val$direction -> dot
    org.bukkit.util.Vector val$entry -> com
    com.volmit.wormholes.util.FinalInteger val$cd -> dynamic
    com.volmit.wormholes.portal.LocalPortal val$source -> business
    1:907:void <init>(com.volmit.wormholes.service.MutexService,int,org.bukkit.entity.Player,java.lang.Runnable,com.volmit.wormholes.portal.Portal,java.util.UUID,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,com.volmit.wormholes.util.FinalInteger,com.volmit.wormholes.portal.LocalPortal) -> <init>
    912:944:void run() -> run
com.volmit.wormholes.service.MutexService$4 -> com.volmit.wormholes.src.mollis$4:
    com.volmit.wormholes.service.MutexService this$0 -> and
    org.bukkit.event.player.PlayerJoinEvent val$e -> efficient
    org.bukkit.Location val$position -> to
    com.volmit.wormholes.projection.ArrivalVector val$av -> enterprise
    1:978:void <init>(com.volmit.wormholes.service.MutexService,org.bukkit.event.player.PlayerJoinEvent,org.bukkit.Location,com.volmit.wormholes.projection.ArrivalVector) -> <init>
    983:985:void run() -> run
com.volmit.wormholes.service.MutexService$5 -> com.volmit.wormholes.src.mollis$5:
    com.volmit.wormholes.service.MutexService this$0 -> and
    org.bukkit.Location val$lx -> extensible
    com.volmit.wormholes.portal.Portal val$p -> frictionless
    1:1114:void <init>(com.volmit.wormholes.service.MutexService,org.bukkit.Location,com.volmit.wormholes.portal.Portal) -> <init>
    1119:1146:void run() -> run
com.volmit.wormholes.service.PortalRegistry -> com.volmit.wormholes.src.convallis:
    com.volmit.wormholes.util.GList destroyQueue -> front
    com.volmit.wormholes.util.GList localPortals -> global
    com.volmit.wormholes.util.GMap mutexPortals -> granular
    18:23:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getDestroyQueue() -> streamline
    32:32:com.volmit.wormholes.util.GList getLocalPortals() -> morph
    37:45:boolean hasPortalsInView(org.bukkit.Location) -> dictum
    50:71:com.volmit.wormholes.portal.Portal getClosestViewedPortal(org.bukkit.Location) -> Vestibulum
    76:86:com.volmit.wormholes.util.GList getPortalsInView(org.bukkit.Location) -> in
    91:101:com.volmit.wormholes.util.GList getPortalsInCloseView(org.bukkit.Location) -> purus
    106:106:com.volmit.wormholes.util.GMap getMutexPortals() -> productize
    111:121:com.volmit.wormholes.projection.ProjectionSet getOtherLocalPortals(com.volmit.wormholes.portal.Portal) -> adipiscing
    126:126:boolean isLookingAt(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> sit
    131:139:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.service.ProjectionService -> com.volmit.wormholes.src.viverra:
    com.volmit.wormholes.util.GMap remotePlanes -> holistic
    java.lang.Boolean projecting -> impactful
    java.lang.Long tpl -> innovative
    com.volmit.wormholes.util.GMap lastPort -> integrated
    com.volmit.wormholes.projection.RenderMesh mesh -> interactive
    long lms -> intuitive
    39:48:void <init>() -> <init>
    52:145:void flush() -> flush
    149:160:void deproject(com.volmit.wormholes.portal.LocalPortal) -> ac
    164:173:void deproject(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> sit
    177:295:void project(com.volmit.wormholes.portal.LocalPortal) -> enim
    299:299:com.volmit.wormholes.util.GMap getRemotePlanes() -> syndicate
    304:304:java.lang.Boolean getProjecting() -> synergize
    309:309:java.lang.Long getTpl() -> synthesize
    314:314:com.volmit.wormholes.util.GMap getLastPort() -> target
    319:319:com.volmit.wormholes.projection.RenderMesh getMesh() -> transform
    35:35:com.volmit.wormholes.util.GMap access$0(com.volmit.wormholes.service.ProjectionService) -> Lorem
    37:37:long access$1(com.volmit.wormholes.service.ProjectionService) -> ipsum
    37:37:void access$2(com.volmit.wormholes.service.ProjectionService,long) -> Lorem
    33:33:void access$3(com.volmit.wormholes.service.ProjectionService,java.lang.Boolean) -> Lorem
com.volmit.wormholes.service.ProjectionService$1 -> com.volmit.wormholes.src.viverra$1:
    com.volmit.wormholes.service.ProjectionService this$0 -> killer
    1:58:void <init>(com.volmit.wormholes.service.ProjectionService) -> <init>
    65:136:void async() -> strategize
com.volmit.wormholes.service.ProjectionService$2 -> com.volmit.wormholes.src.viverra$2:
    com.volmit.wormholes.service.ProjectionService this$0 -> killer
    com.volmit.wormholes.projection.Viewport val$vIn -> leading
    com.volmit.wormholes.portal.LocalPortal val$p -> utilize
    com.volmit.wormholes.portal.PortalIdentity val$identity -> magnetic
    com.volmit.wormholes.util.GMap val$map -> mission
    org.bukkit.entity.Player val$i -> ut
    1:226:void <init>(com.volmit.wormholes.service.ProjectionService,com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.util.GMap,org.bukkit.entity.Player) -> <init>
    231:256:void run() -> run
com.volmit.wormholes.service.ProjectionService$3 -> com.volmit.wormholes.src.viverra$3:
    com.volmit.wormholes.service.ProjectionService this$0 -> killer
    com.volmit.wormholes.projection.Viewport val$vOut -> critical
    com.volmit.wormholes.projection.Viewport val$vIn -> leading
    org.bukkit.entity.Player val$i -> ut
    1:259:void <init>(com.volmit.wormholes.service.ProjectionService,com.volmit.wormholes.projection.Viewport,com.volmit.wormholes.projection.Viewport,org.bukkit.entity.Player) -> <init>
    264:278:void run() -> run
com.volmit.wormholes.service.SkinService -> com.volmit.wormholes.src.lacus:
    com.volmit.wormholes.util.GMap cache -> next
    com.volmit.wormholes.util.GSet request -> generation
    boolean running -> one
    17:22:void <init>() -> <init>
    26:26:boolean hasProperties(java.util.UUID) -> Lorem
    31:36:com.volmit.wormholes.util.SkinProperties getProperty(java.util.UUID) -> ipsum
    41:47:void requestProperties(java.util.UUID) -> dolor
    51:97:void flush() -> flush
    14:14:com.volmit.wormholes.util.GSet access$0(com.volmit.wormholes.service.SkinService) -> Lorem
    13:13:com.volmit.wormholes.util.GMap access$1(com.volmit.wormholes.service.SkinService) -> ipsum
    15:15:void access$2(com.volmit.wormholes.service.SkinService,boolean) -> Lorem
com.volmit.wormholes.service.SkinService$1 -> com.volmit.wormholes.src.lacus$1:
    com.volmit.wormholes.service.SkinService this$0 -> open
    1:60:void <init>(com.volmit.wormholes.service.SkinService) -> <init>
    67:88:void async() -> strategize
com.volmit.wormholes.service.TimingsService -> com.volmit.wormholes.src.eu:
    com.volmit.wormholes.util.Timed root -> source
    com.volmit.wormholes.util.Timed asyn -> out
    10:14:void <init>() -> <init>
com.volmit.wormholes.util.A -> com.volmit.wormholes.src.Phasellus:
    5:15:void <init>() -> <init>
    void async() -> strategize
com.volmit.wormholes.util.A$1 -> com.volmit.wormholes.src.Phasellus$1:
    com.volmit.wormholes.util.A this$0 -> the
    1:7:void <init>(com.volmit.wormholes.util.A) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.AbstractPacket -> com.volmit.wormholes.src.accumsan:
    com.comphenix.protocol.events.PacketContainer handle -> box
    38:51:void <init>(com.comphenix.protocol.events.PacketContainer,com.comphenix.protocol.PacketType) -> <init>
    60:60:com.comphenix.protocol.events.PacketContainer getHandle() -> transition
    75:82:void sendPacket(org.bukkit.entity.Player) -> iaculis
    99:105:void recievePacket(org.bukkit.entity.Player) -> urna
    119:125:void receivePacket(org.bukkit.entity.Player) -> Proin
com.volmit.wormholes.util.Adapter -> com.volmit.wormholes.src.egestas:
    java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Alphabet -> com.volmit.wormholes.src.Praesent:
    com.volmit.wormholes.util.Alphabet ALPHA -> plug
    com.volmit.wormholes.util.Alphabet BRAVO -> play
    com.volmit.wormholes.util.Alphabet CHARLIE -> proactive
    com.volmit.wormholes.util.Alphabet DELTA -> real
    com.volmit.wormholes.util.Alphabet ECHO -> revolutionary
    com.volmit.wormholes.util.Alphabet FOXTROT -> rich
    com.volmit.wormholes.util.Alphabet GOLF -> robust
    com.volmit.wormholes.util.Alphabet HOTEL -> scalable
    com.volmit.wormholes.util.Alphabet INDIA -> seamless
    com.volmit.wormholes.util.Alphabet JULIET -> sexy
    com.volmit.wormholes.util.Alphabet KILO -> sticky
    com.volmit.wormholes.util.Alphabet LIMA -> strategic
    com.volmit.wormholes.util.Alphabet MIKE -> synergistic
    com.volmit.wormholes.util.Alphabet NOVEMBER -> transparent
    com.volmit.wormholes.util.Alphabet OSCAR -> turn
    com.volmit.wormholes.util.Alphabet PAPA -> ubiquitous
    com.volmit.wormholes.util.Alphabet QUEBEC -> user
    com.volmit.wormholes.util.Alphabet ROMEO -> centric
    com.volmit.wormholes.util.Alphabet SIERRA -> added
    com.volmit.wormholes.util.Alphabet TANGO -> vertical
    com.volmit.wormholes.util.Alphabet UNIFORM -> viral
    com.volmit.wormholes.util.Alphabet VICTOR -> virtual
    com.volmit.wormholes.util.Alphabet WISKEY -> visionary
    com.volmit.wormholes.util.Alphabet XRAY -> web
    com.volmit.wormholes.util.Alphabet YANKEE -> enabled
    com.volmit.wormholes.util.Alphabet ZULU -> wireless
    com.volmit.wormholes.util.Alphabet[] ENUM$VALUES -> class
    8:138:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    147:147:char getChar() -> getChar
    158:165:java.lang.String radioTalk(java.lang.String) -> Morbi
    177:185:com.volmit.wormholes.util.Alphabet fromChar(char) -> Lorem
    195:202:com.volmit.wormholes.util.GList getAlphabet() -> unleash
    1:1:com.volmit.wormholes.util.Alphabet[] values() -> values
    1:1:com.volmit.wormholes.util.Alphabet valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.AmountName -> com.volmit.wormholes.src.eros:
    java.lang.String singular -> items
    java.lang.String plural -> applications
    21:25:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getSingular() -> utilize
    44:44:java.lang.String getPlural() -> visualize
    56:61:java.lang.String forAmount(int) -> pulvinar
    74:74:java.lang.String suffix(int) -> vulputate
com.volmit.wormholes.util.Archive -> com.volmit.wormholes.src.et:
    void add(java.io.File,java.io.File) -> Lorem
    void remove(java.io.File) -> remove
    void compress(java.io.File) -> ipsum
    com.volmit.wormholes.util.ArchiveType getType() -> whiteboard
com.volmit.wormholes.util.ArchiveType -> com.volmit.wormholes.src.sodales:
    com.volmit.wormholes.util.ArchiveType ZIP -> architectures
    com.volmit.wormholes.util.ArchiveType[] ENUM$VALUES -> bandwidth
    8:10:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.ArchiveType[] values() -> values
    1:1:com.volmit.wormholes.util.ArchiveType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ArchiveUtils -> com.volmit.wormholes.src.scelerisque:
    20:20:void <init>() -> <init>
    36:61:void createZipArchive(com.volmit.wormholes.util.GMap,java.io.File) -> Lorem
    77:117:void extractZipArchive(java.io.File,java.io.File) -> ipsum
    128:143:com.volmit.wormholes.util.GList allFiles(java.io.File) -> dolor
    157:164:com.volmit.wormholes.util.GList cropFiles(java.io.File,com.volmit.wormholes.util.GList) -> Lorem
    178:183:java.io.File cropFile(java.io.File,java.io.File) -> dolor
com.volmit.wormholes.util.Area -> com.volmit.wormholes.src.velit:
    org.bukkit.Location location -> suscipit
    java.lang.Double radius -> channels
    23:23:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> Lorem
    35:39:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    43:43:com.volmit.wormholes.util.Cuboid toCuboid() -> B2B
    55:59:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    73:81:java.lang.Double distance(org.bukkit.Location) -> non
    95:95:java.lang.Double slowDistance(org.bukkit.Location) -> mi
    107:107:boolean isWithin(org.bukkit.Location) -> euismod
    117:117:boolean hasEntities() -> hasEntities
    129:139:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> Lorem
    151:161:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> Lorem
    174:198:org.bukkit.entity.Entity[] getNearbyEntities() -> B2C
    209:219:org.bukkit.entity.Player[] getNearbyPlayers() -> end
    229:229:org.bukkit.Location getLocation() -> getLocation
    240:241:void setLocation(org.bukkit.Location) -> setLocation
    250:250:java.lang.Double getRadius() -> best
    261:262:void setRadius(java.lang.Double) -> Lorem
    271:276:org.bukkit.Location random() -> of
com.volmit.wormholes.util.ArmorStandHologram -> com.volmit.wormholes.src.Donec:
    22:28:void <init>(org.bukkit.Location) -> <init>
com.volmit.wormholes.util.AsyncConfig -> com.volmit.wormholes.src.quam:
com.volmit.wormholes.util.AsyncConfigurable -> com.volmit.wormholes.src.malesuada:
    boolean isLoaded() -> isLoaded
com.volmit.wormholes.util.Audible -> com.volmit.wormholes.src.quis:
    void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    void play(org.bukkit.entity.Player) -> ac
    void play(org.bukkit.Location) -> Pellentesque
    void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    java.lang.Float getVolume() -> breed
    void setVolume(java.lang.Float) -> Lorem
    java.lang.Float getPitch() -> bleeding
    void setPitch(java.lang.Float) -> ipsum
    com.volmit.wormholes.util.Audible clone() -> edge
    1:1:java.lang.Object clone() -> clone
com.volmit.wormholes.util.Audio -> com.volmit.wormholes.src.ullamcorper:
    com.volmit.wormholes.util.GList audibles -> communities
    21:24:void <init>() -> <init>
    32:35:void <init>(com.volmit.wormholes.util.GList) -> <init>
    40:40:com.volmit.wormholes.util.Audible clone() -> edge
    51:52:void add(com.volmit.wormholes.util.Audible) -> Lorem
    56:57:com.volmit.wormholes.util.Audio qadd(com.volmit.wormholes.util.Audible) -> ipsum
    63:67:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    72:76:void play(org.bukkit.entity.Player) -> ac
    81:85:void play(org.bukkit.Location) -> Pellentesque
    90:94:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    99:106:java.lang.Float getVolume() -> breed
    112:116:void setVolume(java.lang.Float) -> Lorem
    121:128:java.lang.Float getPitch() -> bleeding
    134:138:void setPitch(java.lang.Float) -> ipsum
    1:1:java.lang.Object clone() -> clone
com.volmit.wormholes.util.AudioDistortion -> com.volmit.wormholes.src.aliquet:
    5:8:void <init>() -> <init>
    com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.Average -> com.volmit.wormholes.src.nulla:
    int limit -> limit
    com.volmit.wormholes.util.GList data -> content
    double average -> convergence
    26:35:com.volmit.wormholes.util.GList getFastAverage(com.volmit.wormholes.util.GList,int) -> Lorem
    44:49:void <init>(int) -> <init>
    56:58:void reset() -> reset
    69:77:void put(double) -> Lorem
    86:86:int getLimit() -> getLimit
    97:98:void setLimit(int) -> setLimit
    107:107:com.volmit.wormholes.util.GList getData() -> bricks
    118:119:void setData(com.volmit.wormholes.util.GList) -> dolor
    128:128:double getAverage() -> getAverage
    134:141:int hashCode() -> hashCode
    147:187:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.Axis -> com.volmit.wormholes.src.Vivamus:
    com.volmit.wormholes.util.Axis X -> deliverables
    com.volmit.wormholes.util.Axis Y -> commerce
    com.volmit.wormholes.util.Axis Z -> markets
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Axis[] ENUM$VALUES -> services
    5:9:void <clinit>() -> <clinit>
    15:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> and
    29:29:org.bukkit.util.Vector negative() -> clicks
    1:1:com.volmit.wormholes.util.Axis[] values() -> values
    1:1:com.volmit.wormholes.util.Axis valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Base64 -> com.volmit.wormholes.src.tellus:
    int NO_OPTIONS -> tailers
    int ENCODE -> experiences
    int DECODE -> eyeballs
    int GZIP -> functionalities
    int DONT_GUNZIP -> infomediaries
    int DO_BREAK_LINES -> infrastructures
    int URL_SAFE -> initiatives
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> interfaces
    byte EQUALS_SIGN -> methodologies
    byte NEW_LINE -> metrics
    java.lang.String PREFERRED_ENCODING -> mindshare
    byte WHITE_SPACE_ENC -> models
    byte EQUALS_SIGN_ENC -> networks
    byte[] _STANDARD_ALPHABET -> niches
    byte[] _STANDARD_DECODABET -> paradigms
    byte[] _URL_SAFE_ALPHABET -> partnerships
    byte[] _URL_SAFE_DECODABET -> platforms
    byte[] _ORDERED_ALPHABET -> portals
    byte[] _ORDERED_DECODABET -> relationships
    java.lang.String mx -> ROI
    boolean $assertionsDisabled -> synergies
    7:621:void <clinit>() -> <clinit>
    276:284:byte[] getAlphabet(int) -> dictum
    296:304:byte[] getDecodabet(int) -> Vestibulum
    309:311:void <init>() -> <init>
    334:335:byte[] encode3to4(byte[],byte[],int,int) -> Lorem
    371:411:byte[] encode3to4(byte[],int,int,byte[],int,int) -> Lorem
    429:439:void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> Lorem
    455:468:void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> Lorem
    494:494:java.lang.String encodeObject(java.io.Serializable) -> Lorem
    536:606:java.lang.String encodeObject(java.io.Serializable,int) -> Lorem
    628:637:java.lang.String encodeBytes(byte[]) -> amet
    680:680:java.lang.String encodeBytes(byte[],int) -> Lorem
    712:721:java.lang.String encodeBytes(byte[],int,int) -> Lorem
    770:779:java.lang.String encodeBytes(byte[],int,int,int) -> Lorem
    799:807:byte[] encodeBytesToBytes(byte[]) -> consectetur
    838:966:byte[] encodeBytesToBytes(byte[],int,int,int) -> ipsum
    1014:1076:int decode4to3(byte[],int,byte[],int,int) -> Lorem
    1095:1102:byte[] decode(byte[]) -> decode
    1130:1194:byte[] decode(byte[],int,int,int) -> dolor
    1210:1210:byte[] decode(java.lang.String) -> decode
    1231:1310:byte[] decode(java.lang.String,int) -> ipsum
    1331:1331:java.lang.Object decodeToObject(java.lang.String) -> pulvinar
    1359:1423:java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> Lorem
    1449:1474:void encodeToFile(byte[],java.lang.String) -> Lorem
    1497:1517:void decodeToFile(java.lang.String,java.lang.String) -> Lorem
    1539:1584:byte[] decodeFromFile(java.lang.String) -> vulputate
    1607:1659:java.lang.String encodeFromFile(java.lang.String) -> dictum
    1676:1696:void encodeFileToFile(java.lang.String,java.lang.String) -> ipsum
    1712:1732:void decodeFileToFile(java.lang.String,java.lang.String) -> dolor
    2210:2214:void ex(java.io.File) -> sit
    2218:2241:java.lang.String readFile(java.lang.String) -> readFile
    294:294:byte[] access$0(int) -> in
    368:368:byte[] access$1(byte[],int,int,byte[],int,int) -> ipsum
    1010:1010:int access$2(byte[],int,byte[],int,int) -> ipsum
    332:332:byte[] access$3(byte[],byte[],int,int) -> ipsum
com.volmit.wormholes.util.Base64$1 -> com.volmit.wormholes.src.tellus$1:
    java.lang.ClassLoader val$loader -> readiness
    1:1379:void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    1385:1391:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.volmit.wormholes.util.Base64$InputStream -> com.volmit.wormholes.src.tellus$Lorem:
    boolean encode -> schemas
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> solutions
    int numSigBytes -> supply
    int lineLength -> lineLength
    boolean breakLines -> chains
    int options -> systems
    byte[] decodabet -> technologies
    1766:1767:void <init>(java.io.InputStream) -> <init>
    1796:1805:void <init>(java.io.InputStream,int) -> <init>
    1819:1928:int read() -> read
    1951:1966:int read(byte[],int,int) -> read
com.volmit.wormholes.util.Base64$OutputStream -> com.volmit.wormholes.src.tellus$ipsum:
    boolean encode -> schemas
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> solutions
    int lineLength -> lineLength
    boolean breakLines -> chains
    byte[] b4 -> users
    boolean suspendEncoding -> vortals
    int options -> systems
    byte[] decodabet -> technologies
    2005:2006:void <init>(java.io.OutputStream) -> <init>
    2034:2045:void <init>(java.io.OutputStream,int) -> <init>
    2061:2107:void write(int) -> write
    2125:2136:void write(byte[],int,int) -> write
    2147:2160:void flushBase64() -> mortar
    2171:2179:void close() -> close
    2191:2193:void suspendEncoding() -> collaborative
    2203:2204:void resumeEncoding() -> compelling
com.volmit.wormholes.util.BaseHud -> com.volmit.wormholes.src.leo:
    org.bukkit.entity.Player player -> player
    com.volmit.wormholes.util.GList content -> obfuscate
    boolean open -> star
    com.volmit.wormholes.util.Hologram holo -> see
    com.volmit.wormholes.util.CNum selection -> definition
    int maxPage -> show
    int startRange -> verb
    boolean listening -> confuse
    com.volmit.wormholes.util.GMap preListeners -> baffle
    int index -> index
    boolean hasTitle -> Relevance
    25:38:void <init>(org.bukkit.entity.Player) -> <init>
    43:76:void open() -> open
    81:100:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    105:117:void on(com.volmit.wormholes.util.PlayerScrollEvent) -> Lorem
    121:184:void update() -> update
    org.bukkit.Location getBaseLocation() -> cross
    191:199:void close() -> close
    204:206:void setContents(com.volmit.wormholes.util.GList) -> sit
    211:211:com.volmit.wormholes.util.GList getContents() -> platform
    217:217:java.lang.String getSelection() -> media
    223:223:int getSelectionRow() -> customized
    void onUpdateInternal() -> cutting
    230:230:com.volmit.wormholes.util.GList getContent() -> distributed
    235:236:void setContent(com.volmit.wormholes.util.GList) -> amet
    240:240:int getMaxPage() -> getMaxPage
    245:246:void setMaxPage(int) -> setMaxPage
    250:250:org.bukkit.entity.Player getPlayer() -> getPlayer
    255:255:boolean isOpen() -> isOpen
    260:260:com.volmit.wormholes.util.Hologram getHolo() -> dot
    265:265:int getStartRange() -> com
    270:271:void registerPreListener(java.lang.String,java.lang.Runnable) -> Lorem
    275:276:void unregisterPreListener(java.lang.String) -> Vestibulum
    280:280:boolean isListening() -> dynamic
    285:286:void setListening(boolean) -> adipiscing
    290:290:int getIndex() -> getIndex
    295:296:void setIndex(int) -> setIndex
    300:300:com.volmit.wormholes.util.GMap getPreListeners() -> business
    305:305:boolean isHasTitle() -> efficient
    310:311:void setHasTitle(boolean) -> elit
    315:316:void setPlayer(org.bukkit.entity.Player) -> setPlayer
    320:321:void setOpen(boolean) -> setOpen
    325:326:void setHolo(com.volmit.wormholes.util.Hologram) -> Lorem
    330:331:void setSelection(com.volmit.wormholes.util.CNum) -> Lorem
    335:336:void setStartRange(int) -> purus
    340:341:void setPreListeners(com.volmit.wormholes.util.GMap) -> Lorem
com.volmit.wormholes.util.BaseHud$1 -> com.volmit.wormholes.src.leo$1:
    com.volmit.wormholes.util.BaseHud this$0 -> A
    1:59:void <init>(com.volmit.wormholes.util.BaseHud,int) -> <init>
    64:73:void run() -> run
com.volmit.wormholes.util.BooleanTag -> com.volmit.wormholes.src.tincidunt:
    boolean value -> value
    26:28:void <init>(java.lang.String,boolean) -> <init>
    33:33:java.lang.Boolean getValue() -> getValue
    39:45:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.BorderDirection -> com.volmit.wormholes.src.luctus:
    com.volmit.wormholes.util.BorderDirection TOP -> ZComplexity
    com.volmit.wormholes.util.BorderDirection BOTTOM -> Length
    com.volmit.wormholes.util.BorderDirection LEFT -> lists
    com.volmit.wormholes.util.BorderDirection RIGHT -> blocks
    com.volmit.wormholes.util.BorderDirection[] ENUM$VALUES -> Common
    8:10:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.BorderDirection[] values() -> values
    1:1:com.volmit.wormholes.util.BorderDirection valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.BoundPhysicalObject -> com.volmit.wormholes.src.Maecenas:
    org.bukkit.entity.Entity e -> Informal
    26:29:void <init>(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> <init>
    36:37:void influenceForce(org.bukkit.util.Vector) -> amet
    46:46:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.util.ByteArrayTag -> com.volmit.wormholes.src.est:
    byte[] value -> value
    54:56:void <init>(java.lang.String,byte[]) -> <init>
    60:60:byte[] getValue() -> getValue
    65:78:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteMap2D -> com.volmit.wormholes.src.hendrerit:
    byte[][] map -> Synonyms
    int width -> width
    int height -> height
    24:31:void <init>(int,int,byte) -> <init>
    49:56:void clear(int,int,int,int,byte) -> Lorem
    66:67:void clear(byte) -> Lorem
    81:82:void set(int,int,byte) -> Lorem
    95:95:byte get(int,int) -> ipsum
    105:105:byte[][] getMap() -> enterprise
    115:115:int getWidth() -> getWidth
    125:125:int getHeight() -> getHeight
com.volmit.wormholes.util.ByteReader -> com.volmit.wormholes.src.Etiam:
    java.io.ByteArrayInputStream bois -> for
    java.io.DataInputStream dis -> b
    12:16:void <init>(byte[]) -> <init>
    20:20:java.lang.String rString() -> extensible
    25:32:byte[] rBytes() -> frictionless
    37:37:int rInt() -> front
    42:42:byte rByte() -> global
    47:47:short rShort() -> granular
    52:52:long rLong() -> holistic
    57:57:char rChar() -> impactful
    62:62:double rDouble() -> innovative
    67:67:float rFloat() -> integrated
    72:72:boolean rBoolean() -> interactive
    77:78:void close() -> close
com.volmit.wormholes.util.ByteTag -> com.volmit.wormholes.src.diam:
    byte value -> value
    54:56:void <init>(java.lang.String,byte) -> <init>
    60:60:java.lang.Byte getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteWriter -> com.volmit.wormholes.src.dignissim:
    java.io.ByteArrayOutputStream boas -> c
    java.io.DataOutputStream dos -> d
    12:16:void <init>() -> <init>
    20:21:void wString(java.lang.String) -> in
    25:26:void wInt(int) -> non
    30:31:void wByte(byte) -> ipsum
    35:36:void wShort(short) -> Lorem
    40:41:void wLong(long) -> dolor
    45:46:void wChar(char) -> ipsum
    50:51:void wDouble(double) -> ipsum
    55:56:void wFloat(float) -> Lorem
    60:61:void wBoolean(boolean) -> Morbi
    65:71:void wBytes(byte[]) -> adipiscing
    75:75:byte[] getData() -> getData
    80:81:void close() -> close
com.volmit.wormholes.util.C -> com.volmit.wormholes.src.arcu:
    com.volmit.wormholes.util.C BLACK -> g
    com.volmit.wormholes.util.C DARK_BLUE -> h
    com.volmit.wormholes.util.C DARK_GREEN -> j
    com.volmit.wormholes.util.C DARK_AQUA -> k
    com.volmit.wormholes.util.C DARK_RED -> l
    com.volmit.wormholes.util.C DARK_PURPLE -> m
    com.volmit.wormholes.util.C GOLD -> n
    com.volmit.wormholes.util.C GRAY -> o
    com.volmit.wormholes.util.C DARK_GRAY -> p
    com.volmit.wormholes.util.C BLUE -> q
    com.volmit.wormholes.util.C GREEN -> r
    com.volmit.wormholes.util.C AQUA -> s
    com.volmit.wormholes.util.C RED -> t
    com.volmit.wormholes.util.C LIGHT_PURPLE -> u
    com.volmit.wormholes.util.C YELLOW -> v
    com.volmit.wormholes.util.C WHITE -> w
    com.volmit.wormholes.util.C MAGIC -> B
    com.volmit.wormholes.util.C BOLD -> C
    com.volmit.wormholes.util.C STRIKETHROUGH -> D
    com.volmit.wormholes.util.C UNDERLINE -> E
    com.volmit.wormholes.util.C ITALIC -> F
    com.volmit.wormholes.util.C RESET -> G
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> H
    char code -> I
    boolean isFormat -> J
    java.lang.String toString -> K
    java.util.Map BY_ID -> L
    java.util.Map BY_CHAR -> M
    java.util.Map dyeChatMap -> N
    java.util.Map chatHexMap -> O
    java.util.Map dyeHexMap -> P
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$C -> Q
    com.volmit.wormholes.util.C[] ENUM$VALUES -> R
    18:726:void <clinit>() -> <clinit>
    333:334:void <init>(java.lang.String,int,char,int) -> <init>
    336:342:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    346:346:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    356:356:char getChar() -> getChar
    362:362:java.lang.String toString() -> toString
    372:372:org.bukkit.DyeColor dye() -> intuitive
    377:377:java.lang.String hex() -> killer
    387:387:boolean isFormat() -> isFormat
    397:397:boolean isColor() -> isColor
    412:417:com.volmit.wormholes.util.C getByChar(char) -> dolor
    433:441:com.volmit.wormholes.util.C getByChar(java.lang.String) -> purus
    454:459:java.lang.String stripColor(java.lang.String) -> stripColor
    471:476:com.volmit.wormholes.util.C dyeToChat(org.bukkit.DyeColor) -> amet
    481:489:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> Lorem
    494:499:java.lang.String chatToHex(org.bukkit.ChatColor) -> ipsum
    504:509:java.lang.String dyeToHex(org.bukkit.DyeColor) -> consectetur
    514:535:org.bukkit.Color hexToColor(java.lang.String) -> non
    540:553:org.bukkit.Color rgbToColor(java.lang.String) -> mi
    558:576:java.lang.String generateColorTable() -> leading
    586:586:org.bukkit.ChatColor chatColor() -> magnetic
    604:613:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    618:626:com.volmit.wormholes.util.C fromItemMeta(byte) -> dolor
    631:678:byte getItemMeta() -> mission
    691:716:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:com.volmit.wormholes.util.C[] values() -> values
    1:1:com.volmit.wormholes.util.C valueOf(java.lang.String) -> valueOf
    331:331:void <init>(java.lang.String,int,char,int,com.volmit.wormholes.util.C) -> <init>
    336:336:void <init>(java.lang.String,int,char,int,boolean,com.volmit.wormholes.util.C) -> <init>
    16:16:int[] $SWITCH_TABLE$com$volmit$wormholes$util$C() -> critical
com.volmit.wormholes.util.C$1 -> com.volmit.wormholes.src.arcu$1:
    1:22:void <init>(java.lang.String,int,char,int) -> <init>
    26:26:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$10 -> com.volmit.wormholes.src.arcu$2:
    1:121:void <init>(java.lang.String,int,char,int) -> <init>
    125:125:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$11 -> com.volmit.wormholes.src.arcu$3:
    1:132:void <init>(java.lang.String,int,char,int) -> <init>
    136:136:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$12 -> com.volmit.wormholes.src.arcu$4:
    1:143:void <init>(java.lang.String,int,char,int) -> <init>
    147:147:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$13 -> com.volmit.wormholes.src.arcu$5:
    1:154:void <init>(java.lang.String,int,char,int) -> <init>
    158:158:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$14 -> com.volmit.wormholes.src.arcu$6:
    1:165:void <init>(java.lang.String,int,char,int) -> <init>
    169:169:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$15 -> com.volmit.wormholes.src.arcu$7:
    1:176:void <init>(java.lang.String,int,char,int) -> <init>
    180:180:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$16 -> com.volmit.wormholes.src.arcu$8:
    1:187:void <init>(java.lang.String,int,char,int) -> <init>
    191:191:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$17 -> com.volmit.wormholes.src.arcu$9:
    1:198:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    202:202:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$18 -> com.volmit.wormholes.src.arcu$10:
    1:209:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    213:213:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$19 -> com.volmit.wormholes.src.arcu$11:
    1:220:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    224:224:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$2 -> com.volmit.wormholes.src.arcu$12:
    1:33:void <init>(java.lang.String,int,char,int) -> <init>
    37:37:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$20 -> com.volmit.wormholes.src.arcu$13:
    1:231:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    235:235:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$21 -> com.volmit.wormholes.src.arcu$14:
    1:242:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    246:246:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$22 -> com.volmit.wormholes.src.arcu$15:
    1:254:void <init>(java.lang.String,int,char,int) -> <init>
    258:258:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$3 -> com.volmit.wormholes.src.arcu$16:
    1:44:void <init>(java.lang.String,int,char,int) -> <init>
    48:48:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$4 -> com.volmit.wormholes.src.arcu$17:
    1:55:void <init>(java.lang.String,int,char,int) -> <init>
    59:59:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$5 -> com.volmit.wormholes.src.arcu$18:
    1:66:void <init>(java.lang.String,int,char,int) -> <init>
    70:70:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$6 -> com.volmit.wormholes.src.arcu$19:
    1:77:void <init>(java.lang.String,int,char,int) -> <init>
    81:81:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$7 -> com.volmit.wormholes.src.arcu$20:
    1:88:void <init>(java.lang.String,int,char,int) -> <init>
    92:92:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$8 -> com.volmit.wormholes.src.arcu$21:
    1:99:void <init>(java.lang.String,int,char,int) -> <init>
    103:103:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.C$9 -> com.volmit.wormholes.src.arcu$22:
    1:110:void <init>(java.lang.String,int,char,int) -> <init>
    114:114:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.wormholes.util.CDou -> com.volmit.wormholes.src.varius:
    double number -> S
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:com.volmit.wormholes.util.CDou set(double) -> dolor
    23:25:com.volmit.wormholes.util.CDou add(double) -> sit
    30:32:com.volmit.wormholes.util.CDou sub(double) -> amet
    37:37:double get() -> get
    42:48:void circ() -> generation
com.volmit.wormholes.util.CNum -> com.volmit.wormholes.src.placerat:
    int number -> T
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:com.volmit.wormholes.util.CNum set(int) -> mi
    23:25:com.volmit.wormholes.util.CNum add(int) -> euismod
    30:32:com.volmit.wormholes.util.CNum sub(int) -> Pellentesque
    37:37:int get() -> get
    42:48:void circ() -> generation
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> setMax
com.volmit.wormholes.util.CancellablePhantomEvent -> com.volmit.wormholes.src.Nunc:
    boolean cancelled -> U
    14:17:void <init>() -> <init>
    25:25:boolean isCancelled() -> isCancelled
    34:35:void setCancelled(boolean) -> setCancelled
    42:43:void cancel() -> cancel
    50:51:void uncancel() -> one
com.volmit.wormholes.util.ChunkPacketProcessor -> com.volmit.wormholes.src.Ut:
    int BYTES_PER_NIBBLE_PART -> V
    int CHUNK_SEGMENTS -> W
    int NIBBLES_REQUIRED -> X
    int BLOCK_ID_LENGHT -> Y
    int DATA_LENGHT -> Z
    int BIOME_ARRAY_LENGTH -> aa
    int chunkX -> chunkX
    int chunkZ -> chunkZ
    int chunkMask -> ab
    int extraMask -> ae
    int chunkSectionNumber -> af
    int extraSectionNumber -> ag
    boolean hasContinous -> ah
    int startIndex -> startIndex
    int size -> size
    byte[] data -> data
    org.bukkit.World world -> world
    200:210:void <init>() -> <init>
    220:240:com.volmit.wormholes.util.ChunkPacketProcessor fromMapPacket(com.comphenix.protocol.events.PacketContainer,org.bukkit.World) -> Lorem
    296:335:void process(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> Lorem
    348:348:int getSkylightCount() -> source
    352:353:int getOffset(int) -> at
    358:383:void translate(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> ipsum
    386:386:boolean isChunkLoaded(org.bukkit.World,int,int) -> Lorem
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets -> com.volmit.wormholes.src.Ut$Lorem:
    int blockIdOffset -> ai
    int dataOffset -> aj
    int lightOffset -> ak
    int skylightOffset -> al
    int extraOffset -> am
    47:54:void <init>(int,int,int,int,int) -> <init>
    57:64:void incrementIdIndex() -> out
    67:70:void incrementExtraIndex() -> the
    81:81:int getBlockIdOffset() -> box
    93:93:int getDataOffset() -> plug
    106:106:int getLightOffset() -> play
    118:118:int getSkylightOffset() -> proactive
    127:127:boolean hasSkylightOffset() -> real
    139:139:int getExtraOffset() -> time
    148:148:boolean hasExtraOffset() -> revolutionary
    47:47:void <init>(int,int,int,int,int,com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> <init>
    56:56:void access$1(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    66:66:void access$2(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> ipsum
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor -> com.volmit.wormholes.src.Ut$ipsum:
    void processChunklet(org.bukkit.Location,byte[],com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    void processBiomeArray(org.bukkit.Location,byte[],int) -> Lorem
com.volmit.wormholes.util.Chunklet -> com.volmit.wormholes.src.eleifend:
    int x -> x
    int z -> z
    org.bukkit.World world -> world
    33:38:void <init>(int,int,org.bukkit.World) -> <init>
    47:47:com.volmit.wormholes.util.GList inThisChunk() -> rich
    56:61:void <init>(org.bukkit.Location) -> <init>
    70:83:com.volmit.wormholes.util.GList getPlayers() -> robust
    93:103:com.volmit.wormholes.util.GList getEntities() -> Nulla
    113:113:org.bukkit.Chunk getChunk() -> getChunk
    125:125:boolean contains(org.bukkit.Location) -> pulvinar
    137:137:boolean contains(org.bukkit.entity.Player) -> enim
    149:149:boolean contains(org.bukkit.Chunk) -> Lorem
    159:159:org.bukkit.Location getMin() -> scalable
    169:169:org.bukkit.Location getMax() -> seamless
    179:179:java.util.Iterator iterator() -> iterator
    191:191:com.volmit.wormholes.util.Chunklet getRelative(com.volmit.wormholes.util.Direction) -> Lorem
    201:208:com.volmit.wormholes.util.GList getNeighbors() -> sexy
    220:254:com.volmit.wormholes.util.GList getCircle(int) -> iaculis
    259:273:boolean equals(java.lang.Object) -> equals
    287:295:com.volmit.wormholes.util.GList getBorder(int,com.volmit.wormholes.util.Direction) -> Lorem
    305:305:int getX() -> getX
    316:317:void setX(int) -> setX
    326:326:int getZ() -> getZ
    337:338:void setZ(int) -> setZ
    347:347:org.bukkit.World getWorld() -> getWorld
    358:359:void setWorld(org.bukkit.World) -> setWorld
com.volmit.wormholes.util.ChunkletMesh -> com.volmit.wormholes.src.nibh:
    org.bukkit.World world -> world
    com.volmit.wormholes.util.GMap chunklets -> an
    com.volmit.wormholes.util.GList all -> ao
    26:31:void <init>(org.bukkit.World) -> <init>
    38:42:void rebuildReferences() -> sticky
    51:51:com.volmit.wormholes.util.GList getChunklets() -> strategic
    63:71:boolean contains(org.bukkit.Location) -> pulvinar
    83:83:boolean contains(org.bukkit.entity.Player) -> enim
    95:95:boolean contains(org.bukkit.entity.Entity) -> in
    105:112:com.volmit.wormholes.util.GList getPlayers() -> robust
    122:129:com.volmit.wormholes.util.GList getEntities() -> Nulla
    140:153:void add(com.volmit.wormholes.util.Chunklet) -> Lorem
com.volmit.wormholes.util.Click -> com.volmit.wormholes.src.faucibus:
    com.volmit.wormholes.util.Click LEFT -> ap
    com.volmit.wormholes.util.Click RIGHT -> aq
    com.volmit.wormholes.util.Click MIDDLE -> ar
    com.volmit.wormholes.util.Click SHIFT_LEFT -> as
    com.volmit.wormholes.util.Click SHIFT_RIGHT -> au
    int[] $SWITCH_TABLE$org$bukkit$event$inventory$ClickType -> av
    com.volmit.wormholes.util.Click[] ENUM$VALUES -> aw
    11:36:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    47:60:com.volmit.wormholes.util.Click fromClickType(org.bukkit.event.inventory.ClickType) -> Lorem
    1:1:com.volmit.wormholes.util.Click[] values() -> values
    1:1:com.volmit.wormholes.util.Click valueOf(java.lang.String) -> valueOf
    11:11:int[] $SWITCH_TABLE$org$bukkit$event$inventory$ClickType() -> synergistic
com.volmit.wormholes.util.ClustAsyncAlreadyLoadingException -> com.volmit.wormholes.src.Class:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustAsyncException -> com.volmit.wormholes.src.aptent:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustException -> com.volmit.wormholes.src.taciti:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Cluster -> com.volmit.wormholes.src.sociosqu:
    long serialVersionUID -> serialVersionUID
    com.volmit.wormholes.util.DataCluster$ClusterType type -> ax
    java.lang.Double value -> ay
    17:21:void <init>(com.volmit.wormholes.util.DataCluster$ClusterType,java.lang.Double) -> <init>
    25:25:com.volmit.wormholes.util.DataCluster$ClusterType getType() -> transparent
    30:35:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.ClusterBoolean -> com.volmit.wormholes.src.ad:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(boolean) -> <init>
    24:24:boolean get() -> get
    29:30:void set(boolean) -> set
com.volmit.wormholes.util.ClusterDouble -> com.volmit.wormholes.src.litora:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Double) -> <init>
    24:24:double get() -> get
    29:30:void set(double) -> set
com.volmit.wormholes.util.ClusterInteger -> com.volmit.wormholes.src.torquent:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Integer) -> <init>
    24:24:int get() -> get
    29:30:void set(int) -> set
com.volmit.wormholes.util.ClusterLong -> com.volmit.wormholes.src.per:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Long) -> <init>
    24:24:long get() -> get
    29:30:void set(long) -> set
com.volmit.wormholes.util.ClusterString -> com.volmit.wormholes.src.conubia:
    long serialVersionUID -> serialVersionUID
    java.lang.String string -> string
    20:22:void <init>(java.lang.String) -> <init>
    26:26:java.lang.String get() -> get
    31:33:void set(java.lang.String) -> set
com.volmit.wormholes.util.ClusterStringList -> com.volmit.wormholes.src.nostra:
    long serialVersionUID -> serialVersionUID
    java.util.List strings -> az
    21:23:void <init>(java.util.List) -> <init>
    27:27:java.util.List get() -> turn
    32:34:void set(java.util.List) -> Lorem
com.volmit.wormholes.util.ColdLoad -> com.volmit.wormholes.src.inceptos:
com.volmit.wormholes.util.ColoredParticleEffect -> com.volmit.wormholes.src.himenaeos:
    org.bukkit.Color color -> aA
    boolean alpha -> aB
    11:15:void <init>(org.bukkit.Color) -> <init>
    20:20:com.volmit.wormholes.util.GList getEffects() -> key
    26:37:void play(org.bukkit.Location) -> Pellentesque
    43:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
    47:47:org.bukkit.Color getColor() -> getColor
    52:53:void setColor(org.bukkit.Color) -> setColor
    57:57:boolean isAlpha() -> ubiquitous
    62:63:void setAlpha(boolean) -> pulvinar
com.volmit.wormholes.util.ColoredString -> com.volmit.wormholes.src.Cras:
    com.volmit.wormholes.util.C c -> aC
    java.lang.String s -> aD
    21:25:void <init>(com.volmit.wormholes.util.C,java.lang.String) -> <init>
    29:29:java.lang.String toString() -> toString
    34:34:com.volmit.wormholes.util.C getC() -> user
    39:40:void setC(com.volmit.wormholes.util.C) -> Lorem
    44:44:java.lang.String getS() -> centric
    49:50:void setS(java.lang.String) -> euismod
com.volmit.wormholes.util.Comment -> com.volmit.wormholes.src.pellentesque:
    java.lang.String value() -> value
com.volmit.wormholes.util.CompoundTag -> com.volmit.wormholes.src.ut:
    java.util.Map value -> aE
    57:59:void <init>(java.lang.String,java.util.Map) -> <init>
    63:63:java.util.Map getValue() -> getValue
    68:79:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Config -> com.volmit.wormholes.src.finibus:
    7:8:void <init>(java.lang.String) -> <init>
    12:13:void <init>() -> <init>
com.volmit.wormholes.util.Configurable -> com.volmit.wormholes.src.fermentum:
    void onNewConfig() -> added
    void onReadConfig() -> vertical
    com.volmit.wormholes.util.DataCluster getConfiguration() -> viral
    java.lang.String getCodeName() -> virtual
com.volmit.wormholes.util.ConfigurableController -> com.volmit.wormholes.src.augue:
    java.lang.String codeName -> aF
    com.volmit.wormholes.util.DataCluster cc -> aG
    23:27:void <init>(com.volmit.wormholes.util.Controllable,java.lang.String) -> <init>
    33:33:void onNewConfig() -> added
    39:39:void onReadConfig() -> vertical
    44:44:com.volmit.wormholes.util.DataCluster getConfiguration() -> viral
    50:50:java.lang.String getCodeName() -> virtual
    void onStart() -> onStart
    void onStop() -> non
com.volmit.wormholes.util.ConfigurableObject -> com.volmit.wormholes.src.erat:
    java.lang.String codeName -> aF
    com.volmit.wormholes.util.DataCluster cc -> aG
    19:23:void <init>(java.lang.String) -> <init>
    29:29:void onNewConfig() -> added
    35:35:void onReadConfig() -> vertical
    40:40:com.volmit.wormholes.util.DataCluster getConfiguration() -> viral
    46:46:java.lang.String getCodeName() -> virtual
com.volmit.wormholes.util.ConfigurationHandler -> com.volmit.wormholes.src.Aenean:
    17:17:void <init>() -> <init>
    28:83:void toFields(com.volmit.wormholes.util.Configurable) -> Lorem
    94:137:void fromFields(com.volmit.wormholes.util.Configurable) -> ipsum
    148:200:boolean isValidType(java.lang.Class) -> ipsum
    217:272:void read(java.io.File,com.volmit.wormholes.util.Configurable) -> Lorem
    286:318:void compatRead(java.io.File,com.volmit.wormholes.util.Configurable) -> ipsum
    332:379:void fastRead(java.io.File,com.volmit.wormholes.util.Configurable) -> dolor
    393:412:void fastWrite(java.io.File,com.volmit.wormholes.util.Configurable) -> sit
    426:445:void save(java.io.File,com.volmit.wormholes.util.Configurable) -> amet
    449:468:void savenc(java.io.File,com.volmit.wormholes.util.Configurable) -> consectetur
com.volmit.wormholes.util.ConfigurationHandler$1 -> com.volmit.wormholes.src.Aenean$1:
    com.volmit.wormholes.util.Configurable val$c -> aH
    1:239:void <init>(com.volmit.wormholes.util.Configurable) -> <init>
    244:245:void run() -> run
com.volmit.wormholes.util.ConfigurationHandler$2 -> com.volmit.wormholes.src.Aenean$2:
    com.volmit.wormholes.util.Configurable val$c -> aH
    java.io.File val$config -> aI
    1:248:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    253:269:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$2$1 -> com.volmit.wormholes.src.Aenean$2$1:
    com.volmit.wormholes.util.ConfigurationHandler$2 this$1 -> aJ
    com.volmit.wormholes.util.Configurable val$c -> aH
    java.io.File val$config -> aI
    1:253:void <init>(com.volmit.wormholes.util.ConfigurationHandler$2,com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    260:267:void async() -> strategize
com.volmit.wormholes.util.ConfigurationHandler$3 -> com.volmit.wormholes.src.Aenean$3:
    com.volmit.wormholes.util.Configurable val$c -> aH
    java.io.File val$config -> aI
    1:355:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    360:376:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$3$1 -> com.volmit.wormholes.src.Aenean$3$1:
    com.volmit.wormholes.util.ConfigurationHandler$3 this$1 -> aK
    com.volmit.wormholes.util.Configurable val$c -> aH
    java.io.File val$config -> aI
    1:360:void <init>(com.volmit.wormholes.util.ConfigurationHandler$3,com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    367:374:void async() -> strategize
com.volmit.wormholes.util.Controllable -> com.volmit.wormholes.src.blandit:
    void tick() -> tick
    void start() -> start
    void stop() -> stop
    com.volmit.wormholes.util.Controllable getParent() -> visionary
    com.volmit.wormholes.util.GList getChildren() -> web
    java.lang.String getName() -> getName
    boolean isRoot() -> isRoot
    boolean isActive() -> isActive
    void register(com.volmit.wormholes.util.Controllable) -> Lorem
    boolean isTicked() -> enabled
    double getTickRate() -> wireless
    com.volmit.wormholes.util.TickHandler getTickHandler() -> world
com.volmit.wormholes.util.ControllablePlugin -> com.volmit.wormholes.src.risus:
    com.volmit.wormholes.util.Controller base -> aL
    7:7:void <init>() -> <init>
    14:16:void onLoad() -> onLoad
    21:45:void onEnable() -> onEnable
    50:84:void destroyOldThreads() -> class
    88:93:void readCurrentTick() -> action
    97:107:void setupTicker() -> items
    void onStart() -> onStart
    void onStop() -> non
    116:116:void onTick() -> mi
    121:122:void onDisable() -> onDisable
    128:128:void tick() -> tick
    void onConstruct() -> at
    135:138:void start() -> start
    143:144:void stop() -> stop
    149:149:com.volmit.wormholes.util.Controllable getParent() -> visionary
    155:155:com.volmit.wormholes.util.GList getChildren() -> web
    161:161:boolean isRoot() -> isRoot
    167:167:boolean isActive() -> isActive
    173:174:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    179:179:boolean isTicked() -> enabled
    185:185:double getTickRate() -> wireless
    191:191:com.volmit.wormholes.util.TickHandler getTickHandler() -> world
    196:202:void preStart() -> applications
    206:206:boolean findTicked() -> architectures
    211:216:double findTickValue() -> bandwidth
    221:226:com.volmit.wormholes.util.TickHandler findTickHandle() -> channels
com.volmit.wormholes.util.ControllablePlugin$1 -> com.volmit.wormholes.src.risus$1:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> aM
    1:23:void <init>(com.volmit.wormholes.util.ControllablePlugin,com.volmit.wormholes.util.Controllable) -> <init>
    28:29:void onStop() -> non
    34:35:void onStart() -> onStart
    40:41:void onTick() -> mi
com.volmit.wormholes.util.ControllablePlugin$2 -> com.volmit.wormholes.src.risus$2:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> aM
    1:97:void <init>(com.volmit.wormholes.util.ControllablePlugin) -> <init>
    102:103:void run() -> run
com.volmit.wormholes.util.Controller -> com.volmit.wormholes.src.Fusce:
    com.volmit.wormholes.util.Controllable parent -> aN
    com.volmit.wormholes.util.GList children -> aO
    java.lang.String name -> name
    boolean active -> active
    boolean root -> aP
    boolean ticked -> aQ
    double tickRate -> aR
    com.volmit.wormholes.util.TickHandler tickHandle -> aS
    com.volmit.wormholes.util.Task task -> aT
    com.volmit.wormholes.util.D d -> aU
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$TickHandler -> aV
    19:31:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    35:36:void i(java.lang.String[]) -> ipsum
    40:41:void s(java.lang.String[]) -> dolor
    45:46:void f(java.lang.String[]) -> sit
    50:51:void w(java.lang.String[]) -> amet
    55:56:void v(java.lang.String[]) -> consectetur
    60:61:void o(java.lang.String[]) -> adipiscing
    72:73:void loadCluster(com.volmit.wormholes.util.Configurable) -> dolor
    77:78:void saveCluster(com.volmit.wormholes.util.Configurable) -> sit
    82:108:void saveCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> Lorem
    121:180:void loadCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> ipsum
    184:195:void preStart() -> applications
    199:199:boolean findTicked() -> architectures
    204:209:double findTickValue() -> bandwidth
    214:219:com.volmit.wormholes.util.TickHandler findTickHandle() -> channels
    224:231:boolean findAutoRegister() -> communities
    236:272:void activate() -> activate
    276:277:void deactivate() -> deactivate
    282:286:void tick() -> tick
    291:302:void start() -> start
    307:319:void stop() -> stop
    324:324:void onTick() -> mi
    void onStart() -> onStart
    void onStop() -> non
    333:333:com.volmit.wormholes.util.Controllable getParent() -> visionary
    339:339:com.volmit.wormholes.util.GList getChildren() -> web
    345:345:java.lang.String getName() -> getName
    351:351:boolean isRoot() -> isRoot
    357:357:boolean isActive() -> isActive
    363:364:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    369:369:boolean isTicked() -> enabled
    375:375:double getTickRate() -> wireless
    381:381:com.volmit.wormholes.util.TickHandler getTickHandler() -> world
    6:6:int[] $SWITCH_TABLE$com$volmit$wormholes$util$TickHandler() -> content
com.volmit.wormholes.util.Controller$1 -> com.volmit.wormholes.src.Fusce$1:
    com.volmit.wormholes.util.Controller this$0 -> aW
    java.io.File val$abase -> aX
    com.volmit.wormholes.util.Configurable val$c -> aH
    1:135:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    142:149:void async() -> strategize
com.volmit.wormholes.util.Controller$2 -> com.volmit.wormholes.src.Fusce$2:
    com.volmit.wormholes.util.Controller this$0 -> aW
    java.io.File val$b -> aY
    com.volmit.wormholes.util.Configurable val$c -> aH
    1:157:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    164:171:void sync() -> sync
com.volmit.wormholes.util.Controller$3 -> com.volmit.wormholes.src.Fusce$3:
    com.volmit.wormholes.util.Controller this$0 -> aW
    1:241:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    246:257:void run() -> run
com.volmit.wormholes.util.Controller$4 -> com.volmit.wormholes.src.Fusce$4:
    com.volmit.wormholes.util.Controller this$0 -> aW
    1:260:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    265:266:void run() -> run
com.volmit.wormholes.util.Cuboid -> com.volmit.wormholes.src.maximus:
    java.lang.String worldName -> aZ
    int x1 -> ba
    int y1 -> bb
    int z1 -> bc
    int x2 -> bd
    int y2 -> be
    int z2 -> bf
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis -> bg
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Cuboid$CuboidDirection -> bh
    39:53:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    57:67:int depth(com.volmit.wormholes.util.Axis) -> Lorem
    80:86:void set(org.bukkit.Location,org.bukkit.Location) -> dolor
    90:90:boolean hasPlayers() -> convergence
    95:107:com.volmit.wormholes.util.GList getPlayers() -> robust
    112:163:com.volmit.wormholes.util.GList getEntities() -> Nulla
    174:175:void <init>(org.bukkit.Location) -> <init>
    179:179:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Direction,int) -> Lorem
    184:184:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Axis,int) -> Lorem
    195:196:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    216:225:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    245:254:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    256:265:void <init>(java.util.Map) -> <init>
    270:278:java.util.Map serialize() -> serialize
    283:283:com.volmit.wormholes.util.Cuboid flatten(int) -> urna
    294:294:org.bukkit.Location getLowerNE() -> deliverables
    305:305:org.bukkit.Location getUpperSW() -> commerce
    315:318:org.bukkit.Location getCenter() -> getCenter
    330:335:org.bukkit.World getWorld() -> getWorld
    345:345:int getSizeX() -> markets
    355:355:int getSizeY() -> services
    365:365:int getSizeZ() -> tailers
    375:375:com.volmit.wormholes.util.Dimension getDimension() -> experiences
    385:385:int getLowerX() -> eyeballs
    395:395:int getLowerY() -> functionalities
    405:405:int getLowerZ() -> infomediaries
    415:415:int getUpperX() -> infrastructures
    425:425:int getUpperY() -> initiatives
    435:435:int getUpperZ() -> interfaces
    445:455:org.bukkit.block.Block[] corners() -> methodologies
    472:487:com.volmit.wormholes.util.Cuboid expand(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> Lorem
    502:502:com.volmit.wormholes.util.Cuboid shift(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> ipsum
    518:532:com.volmit.wormholes.util.Cuboid outset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> dolor
    548:548:com.volmit.wormholes.util.Cuboid inset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> sit
    564:564:boolean contains(int,int,int) -> Lorem
    576:576:boolean contains(org.bukkit.block.Block) -> Lorem
    588:588:boolean contains(org.bukkit.Location) -> pulvinar
    598:598:int volume() -> metrics
    609:619:byte averageLightLevel() -> mindshare
    630:630:com.volmit.wormholes.util.Cuboid contract() -> models
    644:684:com.volmit.wormholes.util.Cuboid contract(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> Lorem
    698:713:com.volmit.wormholes.util.Cuboid getFace(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> ipsum
    726:733:boolean containsOnly(org.bukkit.Material) -> Lorem
    746:758:com.volmit.wormholes.util.Cuboid getBoundingCuboid(com.volmit.wormholes.util.Cuboid) -> ipsum
    774:774:org.bukkit.block.Block getRelativeBlock(int,int,int) -> ipsum
    794:794:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> Lorem
    805:819:java.util.List getChunks() -> networks
    834:838:void fill(int,byte) -> Lorem
    861:861:java.util.Iterator iterator() -> iterator
    871:871:com.volmit.wormholes.util.Cuboid clone() -> niches
    881:881:java.lang.String toString() -> toString
    977:986:int hashCode() -> hashCode
    992:1052:boolean equals(java.lang.Object) -> equals
    1:1:java.lang.Object clone() -> clone
    24:24:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis() -> paradigms
    24:24:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Cuboid$CuboidDirection() -> partnerships
com.volmit.wormholes.util.Cuboid$1 -> com.volmit.wormholes.src.maximus$1:
    com.volmit.wormholes.util.Cuboid this$0 -> bi
    1:95:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    100:105:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    1:1:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Cuboid$CuboidDirection -> com.volmit.wormholes.src.maximus$Lorem:
    com.volmit.wormholes.util.Cuboid$CuboidDirection North -> bj
    com.volmit.wormholes.util.Cuboid$CuboidDirection East -> bk
    com.volmit.wormholes.util.Cuboid$CuboidDirection South -> bl
    com.volmit.wormholes.util.Cuboid$CuboidDirection West -> bm
    com.volmit.wormholes.util.Cuboid$CuboidDirection Up -> bn
    com.volmit.wormholes.util.Cuboid$CuboidDirection Down -> bo
    com.volmit.wormholes.util.Cuboid$CuboidDirection Horizontal -> bp
    com.volmit.wormholes.util.Cuboid$CuboidDirection Vertical -> bq
    com.volmit.wormholes.util.Cuboid$CuboidDirection Both -> br
    com.volmit.wormholes.util.Cuboid$CuboidDirection Unknown -> bs
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Cuboid$CuboidDirection -> bh
    com.volmit.wormholes.util.Cuboid$CuboidDirection[] ENUM$VALUES -> bt
    932:944:void <clinit>() -> <clinit>
    932:932:void <init>(java.lang.String,int) -> <init>
    948:969:com.volmit.wormholes.util.Cuboid$CuboidDirection opposite() -> platforms
    1:1:com.volmit.wormholes.util.Cuboid$CuboidDirection[] values() -> values
    1:1:com.volmit.wormholes.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    932:932:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Cuboid$CuboidDirection() -> partnerships
com.volmit.wormholes.util.Cuboid$CuboidIterator -> com.volmit.wormholes.src.maximus$ipsum:
    org.bukkit.World w -> bu
    int baseX -> bv
    int baseY -> bw
    int baseZ -> bx
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> by
    int sizeY -> bz
    int sizeZ -> bA
    com.volmit.wormholes.util.Cuboid this$0 -> bi
    891:901:void <init>(com.volmit.wormholes.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    906:906:boolean hasNext() -> hasNext
    912:922:org.bukkit.block.Block next() -> next
    929:929:void remove() -> remove
    1:1:java.lang.Object next() -> next
com.volmit.wormholes.util.CuboidException -> com.volmit.wormholes.src.ex:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.CustomGZIPOutputStream -> com.volmit.wormholes.src.porttitor:
    11:12:void <init>(java.io.OutputStream) -> <init>
    16:17:void setLevel(int) -> setLevel
com.volmit.wormholes.util.D -> com.volmit.wormholes.src.nisi:
    boolean rdebug -> bB
    boolean fool -> bC
    java.lang.String name -> name
    com.volmit.wormholes.util.GList listeners -> bD
    com.volmit.wormholes.util.GList queue -> bE
    com.volmit.wormholes.util.GList globalListeners -> bF
    java.lang.Boolean silent -> bG
    15:333:void <clinit>() -> <clinit>
    24:30:void d(java.lang.Object,java.lang.String) -> Lorem
    34:38:void d(java.lang.Class,java.lang.String) -> Lorem
    46:50:void <init>(java.lang.String) -> <init>
    71:71:com.volmit.wormholes.util.GList getListeners() -> portals
    81:81:com.volmit.wormholes.util.GList getGlobalListeners() -> relationships
    86:119:void log(com.volmit.wormholes.util.D$DispatchType,java.lang.String,java.lang.String[]) -> Lorem
    123:153:void flush() -> flush
    163:164:void info(java.lang.String[]) -> elit
    174:175:void i(java.lang.String[]) -> ipsum
    185:186:void success(java.lang.String[]) -> Morbi
    196:197:void s(java.lang.String[]) -> dolor
    207:208:void failure(java.lang.String[]) -> pulvinar
    218:219:void f(java.lang.String[]) -> sit
    229:230:void warning(java.lang.String[]) -> vulputate
    240:241:void w(java.lang.String[]) -> amet
    251:252:void verbose(java.lang.String[]) -> dictum
    262:263:void v(java.lang.String[]) -> consectetur
    273:274:void overbose(java.lang.String[]) -> Vestibulum
    284:285:void o(java.lang.String[]) -> adipiscing
    294:294:java.lang.String getName() -> getName
    305:306:void setName(java.lang.String) -> setName
    315:315:java.lang.Boolean isSilent() -> ROI
    326:327:void setSilent(java.lang.Boolean) -> ipsum
    338:341:int hashCode() -> hashCode
    347:377:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.D$DispatchType -> com.volmit.wormholes.src.nisi$Lorem:
    com.volmit.wormholes.util.D$DispatchType INFO -> bH
    com.volmit.wormholes.util.D$DispatchType SUCCESS -> bI
    com.volmit.wormholes.util.D$DispatchType FAILURE -> bJ
    com.volmit.wormholes.util.D$DispatchType WARNING -> bK
    com.volmit.wormholes.util.D$DispatchType VERBOSE -> bL
    com.volmit.wormholes.util.D$DispatchType OVERBOSE -> bM
    com.volmit.wormholes.util.D$DispatchType[] ENUM$VALUES -> bN
    52:59:void <clinit>() -> <clinit>
    52:52:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.D$DispatchType[] values() -> values
    1:1:com.volmit.wormholes.util.D$DispatchType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.DBoolean -> com.volmit.wormholes.src.justo:
    java.lang.Boolean integer -> bO
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Boolean) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Boolean get() -> readiness
com.volmit.wormholes.util.DByte -> com.volmit.wormholes.src.Suspendisse:
    java.lang.Byte integer -> bP
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Byte) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Byte get() -> schemas
com.volmit.wormholes.util.DBytes -> com.volmit.wormholes.src.elementum:
    byte[] integer -> bQ
    9:12:void <init>() -> <init>
    14:17:void <init>(byte[]) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:byte[] get() -> get
com.volmit.wormholes.util.DChar -> com.volmit.wormholes.src.mattis:
    java.lang.Character integer -> bR
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Character) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Character get() -> solutions
com.volmit.wormholes.util.DDouble -> com.volmit.wormholes.src.primis:
    java.lang.Double integer -> bS
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Double) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Double get() -> supply
com.volmit.wormholes.util.DFloat -> com.volmit.wormholes.src.cubilia:
    java.lang.Float integer -> bT
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Float) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Float get() -> chains
com.volmit.wormholes.util.DInteger -> com.volmit.wormholes.src.Curae:
    java.lang.Integer integer -> bU
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Integer) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Integer get() -> systems
com.volmit.wormholes.util.DLong -> com.volmit.wormholes.src.habitant:
    java.lang.Long integer -> bV
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Long) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Long get() -> technologies
com.volmit.wormholes.util.DOP -> com.volmit.wormholes.src.morbi:
    java.lang.String type -> type
    9:12:void <init>(java.lang.String) -> <init>
    org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
    18:18:java.lang.String getType() -> getType
com.volmit.wormholes.util.DShort -> com.volmit.wormholes.src.senectus:
    java.lang.Short integer -> bW
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.Short) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.Short get() -> users
com.volmit.wormholes.util.DString -> com.volmit.wormholes.src.netus:
    java.lang.String string -> string
    9:12:void <init>() -> <init>
    14:17:void <init>(java.lang.String) -> <init>
    22:27:byte[] toData() -> aptent
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> synergies
    54:54:java.lang.String get() -> get
com.volmit.wormholes.util.DStringList -> com.volmit.wormholes.src.fames:
    com.volmit.wormholes.util.GList string -> bX
    9:12:void <init>() -> <init>
    14:17:void <init>(com.volmit.wormholes.util.GList) -> <init>
    22:33:byte[] toData() -> aptent
    39:59:void fromData(byte[]) -> elit
    64:64:byte getDataType() -> synergies
    69:69:com.volmit.wormholes.util.GList get() -> mus
com.volmit.wormholes.util.DataCluster -> com.volmit.wormholes.src.pharetra:
    java.util.Map data -> bY
    java.util.Map comments -> bZ
    long perm -> ca
    long permX -> cb
    long totalSize -> cc
    long totalNodes -> cd
    long totalClusters -> ce
    long bytes -> cf
    long nodes -> cg
    36:40:void <clinit>() -> <clinit>
    47:55:void <init>() -> <init>
    65:68:void <init>(com.volmit.wormholes.util.JSONObject) -> <init>
    78:124:void fromDataPack(com.volmit.wormholes.util.DataPack) -> Lorem
    133:170:com.volmit.wormholes.util.DataPack toDataPack() -> vortals
    181:184:void <init>(org.bukkit.configuration.file.FileConfiguration) -> <init>
    196:199:void <init>(byte[]) -> <init>
    209:213:void addYaml(org.bukkit.configuration.file.FileConfiguration) -> Lorem
    220:224:void <init>(java.util.Map) -> <init>
    236:237:void comment(java.lang.String,java.lang.String) -> sit
    248:255:byte[] compress() -> Nam
    268:274:void addCompressed(byte[]) -> Lorem
    283:290:com.volmit.wormholes.util.JSONObject toJSON() -> obfuscate
    300:331:com.volmit.wormholes.util.GMap makeNodes() -> star
    341:345:void addJson(com.volmit.wormholes.util.JSONObject) -> Lorem
    352:356:void clear() -> clear
    360:367:long byteSize() -> see
    374:413:long byteSize(java.lang.String) -> Pellentesque
    425:425:boolean hasComment(java.lang.String) -> at
    437:437:java.lang.String getComment(java.lang.String) -> iaculis
    449:467:java.util.List getComments(java.lang.String) -> urna
    477:477:com.volmit.wormholes.util.GSet getRoots() -> definition
    489:525:com.volmit.wormholes.util.GSet getRoots(java.lang.String) -> Proin
    562:582:com.volmit.wormholes.util.DataCluster crop(java.lang.String) -> ac
    592:592:int size() -> size
    602:602:com.volmit.wormholes.util.GList keys() -> show
    614:650:com.volmit.wormholes.util.GList toLines(boolean) -> vulputate
    660:667:org.bukkit.configuration.file.FileConfiguration toYaml() -> verb
    681:682:boolean isString(java.lang.String) -> isString
    696:697:boolean isStringList(java.lang.String) -> enim
    711:712:boolean isInteger(java.lang.String) -> posuere
    726:727:boolean isDouble(java.lang.String) -> isDouble
    741:742:boolean isLong(java.lang.String) -> isLong
    756:757:boolean isBoolean(java.lang.String) -> isBoolean
    772:773:boolean contains(java.lang.String,com.volmit.wormholes.util.DataCluster$ClusterType) -> Lorem
    788:791:void trySet(java.lang.String,java.lang.Object,java.lang.String) -> Lorem
    803:858:void trySet(java.lang.String,java.lang.Object) -> Lorem
    870:876:void set(java.lang.String,int) -> dolor
    888:894:void set(java.lang.String,long) -> Lorem
    906:912:void set(java.lang.String,double) -> Lorem
    924:930:void set(java.lang.String,boolean) -> Lorem
    942:948:void set(java.lang.String,java.lang.String) -> set
    960:966:void set(java.lang.String,java.util.List) -> Lorem
    978:979:void set(java.lang.String,com.volmit.wormholes.util.MetaObject) -> Lorem
    995:1005:com.volmit.wormholes.util.MetaObject getObject(java.lang.String,java.lang.Class) -> Lorem
    1018:1019:void set(java.lang.String,java.lang.Enum) -> Lorem
    1032:1040:java.lang.Enum getEnum(java.lang.String,java.lang.Class) -> ipsum
    1055:1057:void set(java.lang.String,int,java.lang.String) -> Lorem
    1071:1073:void set(java.lang.String,long,java.lang.String) -> Lorem
    1087:1089:void set(java.lang.String,double,java.lang.String) -> Lorem
    1103:1105:void set(java.lang.String,boolean,java.lang.String) -> Lorem
    1119:1121:void set(java.lang.String,java.lang.String,java.lang.String) -> Lorem
    1135:1137:void set(java.lang.String,java.util.List,java.lang.String) -> Lorem
    1148:1154:java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    1168:1172:void add(com.volmit.wormholes.util.DataCluster,java.lang.String) -> Lorem
    1182:1183:void add(com.volmit.wormholes.util.DataCluster) -> sit
    1194:1205:java.lang.Long getLong(java.lang.String) -> getLong
    1217:1223:java.lang.Integer getInt(java.lang.String) -> molestie
    1235:1247:java.lang.Double getDouble(java.lang.String) -> getDouble
    1259:1265:java.lang.String getString(java.lang.String) -> getString
    1277:1283:java.util.List getStringList(java.lang.String) -> getStringList
    1295:1296:boolean contains(java.lang.String) -> contains
    1307:1309:void remove(java.lang.String) -> remove
    1320:1351:java.lang.Object getAbstract(java.lang.String) -> odio
    1363:1367:com.volmit.wormholes.util.Cluster get(java.lang.String) -> a
    1379:1380:com.volmit.wormholes.util.DataCluster$ClusterType getType(java.lang.String) -> facilisis
    1390:1391:java.util.Map getData() -> getData
    1402:1407:void setData(java.util.Map) -> setData
    1416:1416:com.volmit.wormholes.util.DataCluster copy() -> confuse
    1422:1428:int hashCode() -> hashCode
    1434:1487:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.DataCluster$ClusterType -> com.volmit.wormholes.src.pharetra$Lorem:
    com.volmit.wormholes.util.DataCluster$ClusterType INTEGER -> ch
    com.volmit.wormholes.util.DataCluster$ClusterType DOUBLE -> ci
    com.volmit.wormholes.util.DataCluster$ClusterType BOOLEAN -> cj
    com.volmit.wormholes.util.DataCluster$ClusterType STRING -> ck
    com.volmit.wormholes.util.DataCluster$ClusterType STRING_LIST -> cl
    com.volmit.wormholes.util.DataCluster$ClusterType LONG -> cm
    com.volmit.wormholes.util.DataCluster$ClusterType[] ENUM$VALUES -> cn
    24:31:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.DataCluster$ClusterType[] values() -> values
    1:1:com.volmit.wormholes.util.DataCluster$ClusterType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.DataController -> com.volmit.wormholes.src.potenti:
    com.volmit.wormholes.util.GMap cache -> next
    18:21:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    26:42:com.volmit.wormholes.util.Configurable get(java.lang.Object) -> dolor
    48:52:void load(java.lang.Object) -> sit
    57:62:void save(java.lang.Object) -> save
    com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
    void onSave(java.lang.Object) -> consectetur
    73:79:void saveAll() -> saveAll
    84:84:boolean contains(java.lang.Object) -> contains
    90:90:com.volmit.wormholes.util.GMap getCache() -> baffle
    1:1:java.lang.Object get(java.lang.Object) -> get
    1:1:java.lang.Object onLoad(java.lang.Object) -> adipiscing
com.volmit.wormholes.util.DataEntity -> com.volmit.wormholes.src.pretium:
    byte[] toData() -> aptent
    void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataFile -> com.volmit.wormholes.src.dui:
    13:13:void <init>() -> <init>
    25:34:void load(java.io.File) -> load
    46:55:void save(java.io.File) -> save
    60:60:byte[] toData() -> aptent
    66:67:void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataHandle -> com.volmit.wormholes.src.massa:
    byte[] toData() -> aptent
    void fromData(byte[]) -> elit
    byte getDataType() -> synergies
    20:25:byte[] compress(byte[]) -> Morbi
    30:33:byte[] decompress(byte[]) -> pulvinar
com.volmit.wormholes.util.DataInput -> com.volmit.wormholes.src.gravida:
    11:11:void <init>() -> <init>
    16:28:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataInputtable -> com.volmit.wormholes.src.id:
    void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataOutput -> com.volmit.wormholes.src.fringilla:
    11:11:void <init>() -> <init>
    16:29:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataOutputtable -> com.volmit.wormholes.src.Nulla:
    void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataPack -> com.volmit.wormholes.src.facilisi:
    com.volmit.wormholes.util.GList entities -> magnis
    9:12:void <init>() -> <init>
    16:17:void put(com.volmit.wormholes.util.DataHandle) -> Lorem
    22:33:byte[] toData() -> aptent
    39:64:void fromData(byte[]) -> elit
    69:69:byte getDataType() -> synergies
    74:74:com.volmit.wormholes.util.GList getEntities() -> Nulla
    80:87:java.lang.String toString() -> toString
com.volmit.wormholes.util.Database -> com.volmit.wormholes.src.libero:
    java.sql.Connection connection -> co
    25:28:void <init>() -> <init>
    java.sql.Connection openConnection() -> Relevance
    50:50:boolean checkConnection() -> A
    60:60:java.sql.Connection getConnection() -> getConnection
    72:77:boolean closeConnection() -> ZComplexity
    95:104:java.sql.ResultSet querySQL(java.lang.String) -> In
    122:131:int updateSQL(java.lang.String) -> hac
com.volmit.wormholes.util.DatabaseConnection -> com.volmit.wormholes.src.condimentum:
    java.lang.String address -> address
    int port -> port
    java.lang.String database -> database
    java.lang.String username -> username
    java.lang.String password -> password
    31:32:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    48:49:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    63:64:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    80:87:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    91:91:java.lang.String getAddress() -> getAddress
    96:97:void setAddress(java.lang.String) -> setAddress
    101:101:int getPort() -> getPort
    106:107:void setPort(int) -> setPort
    111:111:java.lang.String getUsername() -> getUsername
    116:117:void setUsername(java.lang.String) -> setUsername
    121:121:java.lang.String getPassword() -> getPassword
    126:127:void setPassword(java.lang.String) -> setPassword
    131:131:java.lang.String getDatabase() -> getDatabase
    136:137:void setDatabase(java.lang.String) -> habitasse
com.volmit.wormholes.util.Depend -> com.volmit.wormholes.src.interdum:
    com.volmit.wormholes.util.Depend VAULT -> cp
    com.volmit.wormholes.util.Depend FAWE -> cq
    com.volmit.wormholes.util.Depend WORLDEDIT -> cr
    com.volmit.wormholes.util.Depend PROTOLIB -> cs
    com.volmit.wormholes.util.Depend CITIZENS -> ct
    java.lang.String name -> name
    com.volmit.wormholes.util.Depend[] ENUM$VALUES -> cu
    5:11:void <clinit>() -> <clinit>
    15:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    1:1:com.volmit.wormholes.util.Depend[] values() -> values
    1:1:com.volmit.wormholes.util.Depend valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Dialog -> com.volmit.wormholes.src.dapibus:
    com.volmit.wormholes.util.Dialog setCancellable(boolean) -> dictum
    void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
com.volmit.wormholes.util.Dimension -> com.volmit.wormholes.src.sollicitudin:
    int width -> width
    int height -> height
    int depth -> depth
    24:29:void <init>(int,int,int) -> <init>
    39:44:void <init>(int,int) -> <init>
    54:69:com.volmit.wormholes.util.DimensionFace getPane() -> Length
    74:74:int getWidth() -> getWidth
    79:79:int getHeight() -> getHeight
    84:84:int getDepth() -> getDepth
com.volmit.wormholes.util.DimensionFace -> com.volmit.wormholes.src.Aliquam:
    com.volmit.wormholes.util.DimensionFace X -> cv
    com.volmit.wormholes.util.DimensionFace Y -> cw
    com.volmit.wormholes.util.DimensionFace Z -> cx
    com.volmit.wormholes.util.DimensionFace[] ENUM$VALUES -> cy
    8:23:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.DimensionFace[] values() -> values
    1:1:com.volmit.wormholes.util.DimensionFace valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Direction -> com.volmit.wormholes.src.auctor:
    com.volmit.wormholes.util.Direction U -> cz
    com.volmit.wormholes.util.Direction D -> cA
    com.volmit.wormholes.util.Direction N -> cB
    com.volmit.wormholes.util.Direction S -> cC
    com.volmit.wormholes.util.Direction E -> cD
    com.volmit.wormholes.util.Direction W -> cE
    com.volmit.wormholes.util.GMap permute -> cF
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Cuboid$CuboidDirection f -> cG
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Direction -> cH
    com.volmit.wormholes.util.Direction[] ENUM$VALUES -> cI
    13:20:void <clinit>() -> <clinit>
    29:29:boolean isVertical() -> isVertical
    34:49:com.volmit.wormholes.util.Direction closest(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction[]) -> Lorem
    54:54:org.bukkit.util.Vector toVector() -> toVector
    59:69:boolean isCrooked(com.volmit.wormholes.util.Direction) -> ipsum
    72:78:void <init>(java.lang.String,int,int,int,int,com.volmit.wormholes.util.Cuboid$CuboidDirection) -> <init>
    82:92:org.bukkit.util.Vector angle(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction) -> Lorem
    97:115:com.volmit.wormholes.util.Direction reverse() -> lists
    120:120:int x() -> blocks
    125:125:int y() -> Common
    130:130:int z() -> Informal
    135:135:com.volmit.wormholes.util.Cuboid$CuboidDirection f() -> Synonyms
    140:140:com.volmit.wormholes.util.GList news() -> for
    145:155:com.volmit.wormholes.util.Direction getDirection(org.bukkit.util.Vector) -> adipiscing
    160:160:com.volmit.wormholes.util.GList udnews() -> b
    174:206:com.volmit.wormholes.util.Direction fromByte(byte) -> sit
    217:235:byte byteValue() -> byteValue
    240:377:void calculatePermutations() -> c
    381:397:com.volmit.wormholes.util.Axis getAxis() -> Nunc
    1:1:com.volmit.wormholes.util.Direction[] values() -> values
    1:1:com.volmit.wormholes.util.Direction valueOf(java.lang.String) -> valueOf
    11:11:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Direction() -> d
com.volmit.wormholes.util.Direction$1 -> com.volmit.wormholes.src.auctor$1:
    1:255:void <init>(java.lang.String) -> <init>
    260:260:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$10 -> com.volmit.wormholes.src.auctor$2:
    1:366:void <init>(java.lang.String) -> <init>
    371:371:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$2 -> com.volmit.wormholes.src.auctor$3:
    1:269:void <init>(java.lang.String) -> <init>
    274:274:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$3 -> com.volmit.wormholes.src.auctor$4:
    1:281:void <init>(java.lang.String) -> <init>
    286:286:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$4 -> com.volmit.wormholes.src.auctor$5:
    1:294:void <init>(java.lang.String) -> <init>
    299:299:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$5 -> com.volmit.wormholes.src.auctor$6:
    1:306:void <init>(java.lang.String) -> <init>
    311:311:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$6 -> com.volmit.wormholes.src.auctor$7:
    1:318:void <init>(java.lang.String) -> <init>
    323:323:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$7 -> com.volmit.wormholes.src.auctor$8:
    1:330:void <init>(java.lang.String) -> <init>
    335:335:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$8 -> com.volmit.wormholes.src.auctor$9:
    1:342:void <init>(java.lang.String) -> <init>
    347:347:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.Direction$9 -> com.volmit.wormholes.src.auctor$10:
    1:354:void <init>(java.lang.String) -> <init>
    359:359:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> consectetur
com.volmit.wormholes.util.DoubleTag -> com.volmit.wormholes.src.Curabitur:
    double value -> value
    54:56:void <init>(java.lang.String,double) -> <init>
    60:60:java.lang.Double getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Element -> com.volmit.wormholes.src.feugiat:
    com.volmit.wormholes.util.Element addText(java.lang.String) -> platea
    org.bukkit.Material getType() -> getType
    com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    java.lang.Byte getMetadata() -> f
    com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Element setTitle(java.lang.String) -> dictumst
    com.volmit.wormholes.util.GList getText() -> g
    com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    java.lang.Short getDurability() -> h
    com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    com.volmit.wormholes.util.Slot getSlot() -> i
    com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    java.lang.Integer getCount() -> getCount
    com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    com.volmit.wormholes.util.Element copy() -> j
    com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    org.bukkit.inventory.ItemStack getStack() -> k
    void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    void setGlowing(boolean) -> Vestibulum
    boolean isGlowing() -> l
    java.util.UUID getId() -> getId
com.volmit.wormholes.util.EndTag -> com.volmit.wormholes.src.efficitur:
    47:48:void <init>() -> <init>
    52:52:java.lang.Object getValue() -> getValue
    57:57:java.lang.String toString() -> toString
com.volmit.wormholes.util.EntityHologram -> com.volmit.wormholes.src.laoreet:
    com.volmit.wormholes.util.GList lock -> cJ
    org.bukkit.entity.Entity base -> cK
    org.bukkit.entity.Player exc -> cL
    15:15:void <clinit>() -> <clinit>
    25:30:void <init>(org.bukkit.entity.Entity) -> <init>
    35:35:org.bukkit.entity.Entity getHandle() -> m
    41:41:java.lang.String getDisplay() -> getDisplay
    47:55:void setDisplay(java.lang.String) -> setDisplay
    60:61:void setLocation(org.bukkit.Location) -> setLocation
    66:67:void setTextLocation(org.bukkit.Location) -> at
    72:74:void destroy() -> destroy
    79:79:org.bukkit.Location getLocation() -> getLocation
    85:96:void setExclusive(org.bukkit.entity.Player) -> posuere
    101:101:org.bukkit.entity.Player getExclusive() -> n
com.volmit.wormholes.util.EntityHud -> com.volmit.wormholes.src.nunc:
    org.bukkit.entity.Entity track -> cM
    double maxDist -> cN
    15:19:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity,double) -> <init>
    23:24:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> <init>
    29:32:org.bukkit.Location getBaseLocation() -> cross
    38:44:void onUpdateInternal() -> cutting
com.volmit.wormholes.util.Execution -> com.volmit.wormholes.src.venenatis:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ExecutiveIterator -> com.volmit.wormholes.src.rutrum:
    java.util.Iterator it -> cO
    java.lang.Boolean cancelled -> cP
    java.lang.Object repeated -> cQ
    java.lang.Integer size -> cR
    30:36:void <init>(java.util.List) -> <init>
    46:52:void <init>(java.util.Iterator) -> <init>
    void onIterate(java.lang.Object) -> elit
    59:59:boolean hasNext() -> hasNext
    65:79:java.lang.Object next() -> next
    89:89:int size() -> size
    99:99:boolean isCancelled() -> isCancelled
    107:108:void cancel() -> cancel
com.volmit.wormholes.util.ExecutivePool -> com.volmit.wormholes.src.mauris:
    com.volmit.wormholes.util.GList tasks -> cS
    com.volmit.wormholes.util.Task task -> aT
    22:56:void <init>(java.lang.Double,java.lang.Integer) -> <init>
    65:65:boolean isIdle() -> o
    76:77:void add(com.volmit.wormholes.util.ExecutiveIterator) -> Lorem
    86:93:int size() -> size
    101:107:void cancel() -> cancel
    116:116:boolean isRunning() -> isRunning
    11:11:com.volmit.wormholes.util.GList access$0(com.volmit.wormholes.util.ExecutivePool) -> Lorem
com.volmit.wormholes.util.ExecutivePool$1 -> com.volmit.wormholes.src.mauris$1:
    com.volmit.wormholes.util.ExecutivePool this$0 -> cT
    java.lang.Double val$limit -> cU
    1:25:void <init>(com.volmit.wormholes.util.ExecutivePool,int,java.lang.Double) -> <init>
    29:54:void run() -> run
com.volmit.wormholes.util.ExecutiveRunnable -> com.volmit.wormholes.src.lobortis:
    java.lang.Object next -> cV
    java.lang.Boolean cancelled -> cP
    java.lang.Boolean repeated -> cW
    11:11:void <init>() -> <init>
    25:29:void run(java.lang.Object) -> Morbi
    35:35:void run() -> run
    45:45:java.lang.Object next() -> next
    53:54:void cancel() -> cancel
    63:63:boolean isCancelled() -> isCancelled
    72:73:void repeat() -> p
    82:82:boolean isRepeated() -> q
com.volmit.wormholes.util.ExecutiveTask -> com.volmit.wormholes.src.bibendum:
    com.volmit.wormholes.util.ExecutiveIterator it -> cX
    java.lang.Double limit -> cY
    java.lang.Integer interval -> cZ
    java.lang.Runnable finish -> da
    com.volmit.wormholes.util.Task task -> aT
    32:57:void <init>(com.volmit.wormholes.util.ExecutiveIterator,java.lang.Double,java.lang.Integer,java.lang.Runnable) -> <init>
    64:66:void cancel() -> cancel
    75:75:boolean isRunning() -> isRunning
    14:14:com.volmit.wormholes.util.ExecutiveIterator access$0(com.volmit.wormholes.util.ExecutiveTask) -> Lorem
    15:15:java.lang.Double access$1(com.volmit.wormholes.util.ExecutiveTask) -> ipsum
    17:17:java.lang.Runnable access$2(com.volmit.wormholes.util.ExecutiveTask) -> dolor
com.volmit.wormholes.util.ExecutiveTask$1 -> com.volmit.wormholes.src.bibendum$1:
    com.volmit.wormholes.util.ExecutiveTask this$0 -> db
    1:39:void <init>(com.volmit.wormholes.util.ExecutiveTask,int) -> <init>
    43:55:void run() -> run
com.volmit.wormholes.util.Explosion -> com.volmit.wormholes.src.Orci:
    float power -> dc
    boolean pushBlocks -> dd
    14:18:void <init>() -> <init>
    22:23:com.volmit.wormholes.util.Explosion power(float) -> ipsum
    28:29:com.volmit.wormholes.util.Explosion pushBlocks() -> r
    34:40:void boom(org.bukkit.Location) -> iaculis
    45:47:void on(org.bukkit.event.entity.EntityExplodeEvent) -> Lorem
com.volmit.wormholes.util.F -> com.volmit.wormholes.src.natoque:
    java.text.NumberFormat NF -> de
    java.text.DecimalFormat DF -> df
    java.lang.String[] NAMES -> dg
    java.math.BigInteger THOUSAND -> dh
    java.util.NavigableMap MAP -> di
    24:35:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:39:java.lang.String b(int) -> b
    44:44:java.lang.String b(long) -> sit
    49:49:java.lang.String b(double) -> consectetur
    54:71:java.lang.String b(java.math.BigInteger) -> Lorem
    76:80:void instantiate() -> s
    91:91:java.lang.String color(java.lang.String) -> Nam
    106:121:com.volmit.wormholes.util.GList colorSplit(java.lang.String) -> metus
    134:134:java.lang.String fileSize(long) -> amet
    147:147:java.lang.String memSize(long) -> consectetur
    160:161:java.lang.String stamp(long) -> adipiscing
    171:171:java.lang.String stamp() -> t
    187:214:java.lang.String ofSize(long,int) -> Lorem
    227:227:com.volmit.wormholes.util.GList wrap(java.lang.String) -> nisl
    242:259:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    274:279:java.lang.String trim(java.lang.String,int) -> amet
    292:312:java.lang.String cname(java.lang.String) -> magna
    328:363:com.volmit.wormholes.util.GList getParameters(java.lang.String,char) -> Lorem
    377:389:java.lang.String repeat(java.lang.String,int) -> repeat
    401:408:java.lang.String mem(long) -> elit
    421:439:java.lang.String memx(long) -> Morbi
    453:454:java.lang.String f(long) -> pulvinar
    466:467:java.lang.String f(int) -> Proin
    481:490:java.lang.String f(double,int) -> Lorem
    506:515:java.lang.String fd(double,int) -> ipsum
    529:538:java.lang.String f(float,int) -> Lorem
    549:549:java.lang.String f(double) -> adipiscing
    560:560:java.lang.String f(float) -> dolor
    575:575:java.lang.String pc(double,int) -> dolor
    590:590:java.lang.String pc(float,int) -> ipsum
    603:603:java.lang.String pc(double) -> elit
    616:616:java.lang.String pc(float) -> sit
    632:632:java.lang.String pc(int,int,int) -> dolor
    646:646:java.lang.String pc(int,int) -> dolor
    662:662:java.lang.String pc(long,long,int) -> Lorem
    676:676:java.lang.String pc(long,long) -> Lorem
    688:688:java.lang.String msSeconds(long) -> vulputate
    702:702:java.lang.String msSeconds(long,int) -> ipsum
    714:714:java.lang.String nsMs(long) -> dictum
    728:728:java.lang.String nsMs(long,int) -> dolor
    742:742:java.lang.String nsMsd(long,int) -> sit
    754:761:com.volmit.wormholes.util.GList color(java.util.List) -> ipsum
com.volmit.wormholes.util.FM -> com.volmit.wormholes.src.penatibus:
    18:18:void <init>() -> <init>
    22:48:void createAll(java.io.File,java.io.File) -> sit
    52:78:void parseAll(java.io.File,java.io.File) -> amet
    82:92:void create(java.io.File,java.io.File) -> consectetur
    96:109:void parse(java.io.File,java.io.File) -> adipiscing
com.volmit.wormholes.util.FOP -> com.volmit.wormholes.src.magnis:
    void operate() -> u
    void reverse() -> reverse
    void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.FU -> com.volmit.wormholes.src.dis:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    95:95:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> Lorem
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> ipsum
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:807:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:831:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:863:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> amet
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> consectetur
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
com.volmit.wormholes.util.FileHack -> com.volmit.wormholes.src.parturient:
    com.volmit.wormholes.util.GList queue -> bE
    7:10:void <init>() -> <init>
    14:15:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    19:23:void execute() -> execute
com.volmit.wormholes.util.FinalDouble -> com.volmit.wormholes.src.montes:
    double i -> dj
    18:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> Morbi
com.volmit.wormholes.util.FinalFloat -> com.volmit.wormholes.src.nascetur:
    float i -> i
    18:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> amet
    52:53:void add(float) -> add
    63:64:void sub(float) -> consectetur
com.volmit.wormholes.util.FinalInteger -> com.volmit.wormholes.src.ridiculus:
    int i -> i
    18:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> ac
com.volmit.wormholes.util.FinalLong -> com.volmit.wormholes.src.mus:
    long i -> dk
    18:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> Vestibulum
com.volmit.wormholes.util.FinalString -> com.volmit.wormholes.src.Interdum:
    java.lang.String string -> string
    18:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
com.volmit.wormholes.util.FloatTag -> com.volmit.wormholes.src.aggregate:
    float value -> value
    54:56:void <init>(java.lang.String,float) -> <init>
    60:60:java.lang.Float getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Formula -> com.volmit.wormholes.src.architect:
    java.lang.String expression -> dl
    30:33:void <init>(java.lang.String) -> <init>
    48:48:double evaluate(java.lang.Double[]) -> Lorem
com.volmit.wormholes.util.ForwardedPluginMessage -> com.volmit.wormholes.src.benchmark:
    27:31:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
    35:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,byte[]) -> <init>
    53:54:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
com.volmit.wormholes.util.Frustrum -> com.volmit.wormholes.src.brand:
    int ox -> dm
    int oy -> dn
    int oz -> do
    int maxX -> dp
    int maxY -> dq
    int maxZ -> dr
    int minX -> minX
    int minY -> minY
    int minZ -> ds
    org.bukkit.World world -> world
    org.bukkit.util.Vector vMin -> dt
    org.bukkit.util.Vector vMax -> du
    org.bukkit.util.Vector vDirect -> dv
    org.bukkit.Location origin -> dw
    com.volmit.wormholes.util.Cuboid frame -> dx
    com.volmit.wormholes.util.Direction direction -> dy
    com.volmit.wormholes.util.Axis axis -> blandit
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Direction -> cH
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis -> bg
    31:50:void <init>(org.bukkit.World,int,int,int,int,int,int,int,int,int) -> <init>
    54:55:void <init>(org.bukkit.Location,org.bukkit.Location,org.bukkit.Location) -> <init>
    59:60:void <init>(org.bukkit.Location,com.volmit.wormholes.util.Cuboid) -> <init>
    64:76:com.volmit.wormholes.util.GList getPlayers(int) -> enim
    81:99:com.volmit.wormholes.util.GList getEntities(int) -> posuere
    104:128:com.volmit.wormholes.util.GList getBlocks(int) -> molestie
    133:168:boolean w(org.bukkit.Location) -> urna
    173:173:boolean w(int,int,int) -> sit
    178:178:int getOx() -> v
    183:183:int getOy() -> w
    188:188:int getOz() -> x
    193:193:int getMaxX() -> y
    198:198:int getMaxY() -> z
    203:203:int getMaxZ() -> B
    208:208:int getMinX() -> getMinX
    213:213:int getMinY() -> getMinY
    218:218:int getMinZ() -> C
    223:223:org.bukkit.World getWorld() -> getWorld
    228:228:org.bukkit.util.Vector getvMin() -> D
    233:233:org.bukkit.util.Vector getvMax() -> E
    238:238:org.bukkit.util.Vector getvDirect() -> F
    243:243:org.bukkit.Location getOrigin() -> G
    248:248:com.volmit.wormholes.util.Cuboid getFrame() -> H
    253:253:com.volmit.wormholes.util.Direction getDirection() -> I
    258:258:com.volmit.wormholes.util.Axis getAxis() -> Nunc
    11:11:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Direction() -> d
    11:11:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis() -> paradigms
com.volmit.wormholes.util.Frustrum$1 -> com.volmit.wormholes.src.brand$1:
    com.volmit.wormholes.util.Frustrum this$0 -> dz
    1:64:void <init>(com.volmit.wormholes.util.Frustrum) -> <init>
    69:74:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    1:1:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GAdapter -> com.volmit.wormholes.src.cultivate:
    12:12:void <init>() -> <init>
    17:17:java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GBiset -> com.volmit.wormholes.src.deliver:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> dA
    java.lang.Object b -> dB
    29:33:void <init>(java.lang.Object,java.lang.Object) -> <init>
    42:42:java.lang.Object getA() -> J
    53:54:void setA(java.lang.Object) -> pulvinar
    63:63:java.lang.Object getB() -> K
    73:74:void setB(java.lang.Object) -> vulputate
    79:83:int hashCode() -> hashCode
    89:125:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.GBook -> com.volmit.wormholes.src.deploy:
    com.volmit.wormholes.util.GList pages -> dC
    java.lang.String title -> title
    java.lang.String author -> author
    27:32:void <init>(java.lang.String,java.lang.String) -> <init>
    36:36:java.lang.String getTitle() -> getTitle
    41:42:void setTitle(java.lang.String) -> setTitle
    46:46:java.lang.String getAuthor() -> getAuthor
    51:52:void setAuthor(java.lang.String) -> setAuthor
    56:57:void setPages(com.volmit.wormholes.util.GList) -> adipiscing
    61:63:com.volmit.wormholes.util.GBook addPage(com.volmit.wormholes.util.GPage) -> Lorem
    68:68:com.volmit.wormholes.util.GList getPages() -> L
    73:87:com.volmit.wormholes.util.GList toPages() -> M
    97:104:org.bukkit.inventory.ItemStack toBook() -> N
    116:128:com.volmit.wormholes.util.GList read(org.bukkit.inventory.ItemStack) -> ipsum
com.volmit.wormholes.util.GChunk -> com.volmit.wormholes.src.disintermediate:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> dD
    java.lang.Integer z -> dE
    java.lang.String world -> dF
    28:29:void <init>(org.bukkit.Chunk) -> <init>
    38:39:void <init>(org.bukkit.Location) -> <init>
    51:56:void <init>(int,int,java.lang.String) -> <init>
    61:66:int hashCode() -> hashCode
    72:128:boolean equals(java.lang.Object) -> equals
    140:145:boolean isChunk(org.bukkit.Chunk) -> ipsum
    155:155:java.lang.Integer getX() -> O
    166:167:void setX(java.lang.Integer) -> ipsum
    176:176:java.lang.Integer getZ() -> P
    187:188:void setZ(java.lang.Integer) -> dolor
    197:197:java.lang.String getWorld() -> Q
    208:209:void setWorld(java.lang.String) -> setWorld
    218:218:org.bukkit.Chunk toChunk() -> R
    227:227:java.lang.String toString() -> toString
com.volmit.wormholes.util.GFile -> com.volmit.wormholes.src.drive:
    long serialVersionUID -> serialVersionUID
    27:28:void <init>(java.io.File,java.lang.String) -> <init>
    38:39:void <init>(java.net.URI) -> <init>
    51:52:void <init>(java.lang.String,java.lang.String) -> <init>
    64:65:void <init>(com.volmit.wormholes.util.GFile,java.lang.String[]) -> <init>
    75:76:void <init>(java.lang.String) -> <init>
    83:88:boolean createNewFile() -> createNewFile
com.volmit.wormholes.util.GList -> com.volmit.wormholes.src.e:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    40:46:void <init>(java.util.Set) -> <init>
    56:62:void <init>(java.util.Collection) -> <init>
    72:78:void <init>(java.util.Iterator) -> <init>
    88:90:void <init>(java.lang.Object[]) -> <init>
    101:109:void <init>(java.util.List) -> <init>
    118:145:java.lang.Object mostCommon() -> S
    155:157:com.volmit.wormholes.util.GList shuffleCopy() -> T
    165:166:void shuffle() -> U
    189:215:com.volmit.wormholes.util.GList split() -> V
    227:227:boolean hasIndex(int) -> hasIndex
    237:238:java.lang.Object pickRandom() -> W
    249:256:com.volmit.wormholes.util.GList stringList() -> X
    266:266:int last() -> last
    280:285:int getIndexOrLast(int) -> odio
    303:303:com.volmit.wormholes.util.GList cropFrom(int) -> a
    308:340:com.volmit.wormholes.util.GList split(int) -> facilisis
    358:358:com.volmit.wormholes.util.GList cropTo(int) -> In
    377:387:com.volmit.wormholes.util.GList crop(int,int) -> sit
    398:402:com.volmit.wormholes.util.GList removeDuplicates() -> Y
    413:417:void removeAll(java.lang.Object) -> dictum
    426:426:boolean hasDuplicates() -> Z
    434:442:void sort() -> sort
    455:461:void push(java.lang.Object,int) -> Lorem
    472:476:void add(java.lang.Object[]) -> add
    487:488:com.volmit.wormholes.util.GList qadd(java.lang.Object) -> Vestibulum
    499:503:void add(java.util.List) -> dolor
    516:548:java.lang.String toString(java.lang.String) -> toString
    558:560:com.volmit.wormholes.util.GList reverse() -> aa
    569:569:java.lang.String toString() -> toString
    579:586:com.volmit.wormholes.util.GList copy() -> ab
    598:599:com.volmit.wormholes.util.GList qdel(java.lang.Object) -> in
    609:616:java.lang.Object pop() -> pop
    621:630:java.lang.Object popRandom() -> ae
com.volmit.wormholes.util.GList$1 -> com.volmit.wormholes.src.e$1:
    com.volmit.wormholes.util.GList this$0 -> dG
    1:434:void <init>(com.volmit.wormholes.util.GList) -> <init>
    439:439:int compare(java.lang.Object,java.lang.Object) -> compare
com.volmit.wormholes.util.GListAdapter -> com.volmit.wormholes.src.enable:
    14:14:void <init>() -> <init>
    25:37:java.util.List adapt(java.util.List) -> sit
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GMCA -> com.volmit.wormholes.src.embrace:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> dD
    java.lang.Integer z -> dE
    java.lang.String world -> dF
    28:33:void <init>(int,int,java.lang.String) -> <init>
    38:43:int hashCode() -> hashCode
    49:105:boolean equals(java.lang.Object) -> equals
    115:115:java.lang.Integer getX() -> O
    126:127:void setX(java.lang.Integer) -> ipsum
    136:136:java.lang.Integer getZ() -> P
    147:148:void setZ(java.lang.Integer) -> dolor
    157:157:java.lang.String getWorld() -> Q
    168:169:void setWorld(java.lang.String) -> setWorld
    177:177:java.lang.String toString() -> toString
com.volmit.wormholes.util.GMap -> com.volmit.wormholes.src.empower:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:23:void <init>(java.util.Map) -> <init>
    32:39:com.volmit.wormholes.util.GMap copy() -> af
    53:54:com.volmit.wormholes.util.GMap qput(java.lang.Object,java.lang.Object) -> Lorem
    64:81:com.volmit.wormholes.util.GMap flip() -> ag
    87:94:java.lang.String toString() -> toString
    106:111:com.volmit.wormholes.util.GMap append(com.volmit.wormholes.util.GMap) -> ipsum
    121:121:com.volmit.wormholes.util.GList k() -> ah
    131:131:com.volmit.wormholes.util.GSet kset() -> ai
    141:141:com.volmit.wormholes.util.GList v() -> aj
    151:151:com.volmit.wormholes.util.GSet vset() -> ak
    164:168:void putNVD(java.lang.Object,java.lang.Object) -> ipsum
    176:176:boolean contains(java.lang.Object) -> contains
    188:198:com.volmit.wormholes.util.GList get(com.volmit.wormholes.util.GList) -> elit
    209:219:com.volmit.wormholes.util.GMap removeDuplicateValues() -> al
    233:242:void put(com.volmit.wormholes.util.GList,com.volmit.wormholes.util.GList) -> Lorem
    251:267:com.volmit.wormholes.util.GList sortK() -> am
    277:293:com.volmit.wormholes.util.GList sortV() -> an
com.volmit.wormholes.util.GPage -> com.volmit.wormholes.src.engage:
    com.volmit.wormholes.util.GMap elements -> dH
    15:18:void <init>() -> <init>
    31:42:com.volmit.wormholes.util.GPage put(java.lang.String,java.lang.String) -> amet
    47:47:com.volmit.wormholes.util.GMap getElements() -> ao
    52:53:void setElements(com.volmit.wormholes.util.GMap) -> dolor
com.volmit.wormholes.util.GQuadraset -> com.volmit.wormholes.src.engineer:
    java.lang.Object a -> dA
    java.lang.Object b -> dB
    java.lang.Object c -> dI
    java.lang.Object d -> dJ
    11:17:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    21:21:java.lang.Object getA() -> J
    26:27:void setA(java.lang.Object) -> pulvinar
    31:31:java.lang.Object getB() -> K
    36:37:void setB(java.lang.Object) -> vulputate
    41:41:java.lang.Object getC() -> ap
    46:47:void setC(java.lang.Object) -> purus
    51:51:java.lang.Object getD() -> aq
    56:57:void setD(java.lang.Object) -> non
com.volmit.wormholes.util.GSet -> com.volmit.wormholes.src.enhance:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
com.volmit.wormholes.util.GSound -> com.volmit.wormholes.src.envisioneer:
    java.lang.String sound -> dK
    org.bukkit.Sound iSound -> dL
    java.lang.Float volume -> dM
    java.lang.Float pitch -> dN
    32:37:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    51:57:void <init>(org.bukkit.Sound,java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    65:70:void <init>(java.lang.String) -> <init>
    79:84:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    92:97:void <init>(org.bukkit.Sound) -> <init>
    102:102:void prePlay() -> ar
    114:127:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    137:138:void play(org.bukkit.entity.Player) -> ac
    145:145:com.volmit.wormholes.util.Audible clone() -> edge
    156:169:void play(org.bukkit.Location) -> Pellentesque
    181:196:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> ipsum
    205:205:java.lang.String getSound() -> as
    216:217:void setSound(java.lang.String) -> tortor
    226:226:org.bukkit.Sound getiSound() -> au
    237:238:void setiSound(org.bukkit.Sound) -> Lorem
    247:247:java.lang.Float getVolume() -> breed
    258:259:void setVolume(java.lang.Float) -> Lorem
    268:268:java.lang.Float getPitch() -> bleeding
    279:280:void setPitch(java.lang.Float) -> ipsum
    1:1:java.lang.Object clone() -> clone
com.volmit.wormholes.util.GText -> com.volmit.wormholes.src.evolve:
    com.volmit.wormholes.util.RTX t -> dO
    18:21:void <init>() -> <init>
    33:44:void add(java.lang.String) -> add
    58:86:void addWithHover(java.lang.String,java.lang.String) -> consectetur
    102:130:void addWithHoverCommand(java.lang.String,java.lang.String,java.lang.String) -> ipsum
    146:174:void addWithHoverSuggestCommand(java.lang.String,java.lang.String,java.lang.String) -> dolor
    190:218:void addWithHoverURL(java.lang.String,java.lang.String,java.lang.String) -> sit
    222:222:com.volmit.wormholes.util.GText pack() -> av
    232:232:com.volmit.wormholes.util.JSONArray toJSON() -> aw
    243:244:void tellRawTo(org.bukkit.entity.Player) -> molestie
com.volmit.wormholes.util.GTime -> com.volmit.wormholes.src.expedite:
    long serialVersionUID -> serialVersionUID
    long days -> dP
    long hours -> dQ
    long minutes -> dR
    long seconds -> dS
    long milliseconds -> dT
    33:34:void <init>(long,long,long,long,long) -> <init>
    42:54:void <init>(long) -> <init>
    62:98:void <init>(java.lang.String) -> <init>
    102:129:int getMult(java.lang.String) -> tempus
    135:135:long getDays() -> ax
    140:140:long getHours() -> ay
    145:145:long getMinutes() -> az
    150:150:long getSeconds() -> getSeconds
    155:155:long getMilliseconds() -> aA
    160:160:long getTotalDuration() -> aB
    170:187:java.lang.String shortDescription() -> aC
    193:198:java.lang.String s(long) -> in
    208:208:java.lang.String to() -> to
    220:258:java.lang.String to(java.lang.String) -> sem
    268:288:java.lang.String ago() -> aD
    293:315:java.lang.String toString() -> toString
com.volmit.wormholes.util.GTriset -> com.volmit.wormholes.src.exploit:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> dA
    java.lang.Object b -> dB
    java.lang.Object c -> dI
    13:18:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    22:22:java.lang.Object getA() -> J
    27:28:void setA(java.lang.Object) -> pulvinar
    32:32:java.lang.Object getB() -> K
    37:38:void setB(java.lang.Object) -> vulputate
    42:42:java.lang.Object getC() -> ap
    47:48:void setC(java.lang.Object) -> purus
com.volmit.wormholes.util.GVector -> com.volmit.wormholes.src.extend:
    double x -> x
    double y -> y
    double z -> z
    int blockX -> dU
    int blockY -> dV
    int blockZ -> dW
    25:33:void <init>(org.bukkit.util.Vector) -> <init>
    37:38:void <init>() -> <init>
    47:47:org.bukkit.util.Vector toVector() -> toVector
    57:57:double getX() -> getX
    68:69:void setX(double) -> setX
    78:78:double getY() -> getY
    89:90:void setY(double) -> setY
    99:99:double getZ() -> getZ
    110:111:void setZ(double) -> setZ
    120:120:int getBlockX() -> getBlockX
    130:130:int getBlockY() -> getBlockY
    140:140:int getBlockZ() -> getBlockZ
    146:155:int hashCode() -> hashCode
    161:208:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.GameProfileBuilder -> com.volmit.wormholes.src.facilitate:
    java.lang.String SERVICE_URL -> dX
    java.lang.String JSON_SKIN -> dY
    java.lang.String JSON_CAPE -> dZ
    com.google.gson.Gson gson -> gson
    java.util.HashMap cache -> ea
    long cacheTime -> eb
    37:41:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    45:45:com.mojang.authlib.GameProfile fetch(java.util.UUID) -> sit
    50:75:com.mojang.authlib.GameProfile fetch(java.util.UUID,boolean) -> Lorem
    82:82:com.mojang.authlib.GameProfile getProfile(java.util.UUID,java.lang.String,java.lang.String) -> Lorem
    87:101:com.mojang.authlib.GameProfile getProfile(java.util.UUID,java.lang.String,java.lang.String,java.lang.String) -> Lorem
    106:107:void setCacheTime(long) -> purus
    41:41:long access$0() -> aE
com.volmit.wormholes.util.GameProfileBuilder$CachedProfile -> com.volmit.wormholes.src.facilitate$Lorem:
    long timestamp -> timestamp
    com.mojang.authlib.GameProfile profile -> ec
    183:189:void <init>(com.mojang.authlib.GameProfile) -> <init>
    193:193:boolean isValid() -> isValid
    184:184:com.mojang.authlib.GameProfile access$0(com.volmit.wormholes.util.GameProfileBuilder$CachedProfile) -> Lorem
com.volmit.wormholes.util.GameProfileBuilder$GameProfileSerializer -> com.volmit.wormholes.src.facilitate$ipsum:
    109:109:void <init>() -> <init>
    114:142:com.mojang.authlib.GameProfile deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> Lorem
    148:177:com.google.gson.JsonElement serialize(com.mojang.authlib.GameProfile,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> Lorem
    1:1:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    1:1:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    109:109:void <init>(com.volmit.wormholes.util.GameProfileBuilder$GameProfileSerializer) -> <init>
com.volmit.wormholes.util.Guis -> com.volmit.wormholes.src.generate:
    8:8:void <init>() -> <init>
    21:57:com.volmit.wormholes.util.GList getCentered(int,int) -> amet
    69:91:com.volmit.wormholes.util.GList sortLTR(com.volmit.wormholes.util.GList) -> Morbi
com.volmit.wormholes.util.HTTP -> com.volmit.wormholes.src.grow:
    java.lang.String CRLF -> ed
    34:34:void <init>() -> <init>
    72:103:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    128:161:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.HTTPTokener -> com.volmit.wormholes.src.harness:
    40:41:void <init>(java.lang.String) -> <init>
    52:74:java.lang.String nextToken() -> nextToken
com.volmit.wormholes.util.HandledConfig -> com.volmit.wormholes.src.implement:
com.volmit.wormholes.util.Heaft -> com.volmit.wormholes.src.incentivize:
    com.volmit.wormholes.util.Heaft TINY -> ee
    com.volmit.wormholes.util.Heaft SMALL -> ef
    com.volmit.wormholes.util.Heaft NORMAL -> eg
    com.volmit.wormholes.util.Heaft BIG -> eh
    com.volmit.wormholes.util.Heaft MASSIVE -> ei
    com.volmit.wormholes.util.Heaft[] ENUM$VALUES -> ej
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.Heaft[] values() -> values
    1:1:com.volmit.wormholes.util.Heaft valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Health -> com.volmit.wormholes.src.incubate:
    double hp -> ek
    19:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> aF
    41:41:double getHearts() -> aG
    51:51:double getHalfHearts() -> aH
    61:61:int getFlatHalfHearts() -> aI
com.volmit.wormholes.util.Hologram -> com.volmit.wormholes.src.innovate:
    org.bukkit.entity.Entity getHandle() -> m
    void setExclusive(org.bukkit.entity.Player) -> posuere
    org.bukkit.entity.Player getExclusive() -> n
    java.lang.String getDisplay() -> getDisplay
    void setLocation(org.bukkit.Location) -> setLocation
    void setTextLocation(org.bukkit.Location) -> at
    void setDisplay(java.lang.String) -> setDisplay
    void destroy() -> destroy
    org.bukkit.Location getLocation() -> getLocation
com.volmit.wormholes.util.Hud -> com.volmit.wormholes.src.integrate:
    void open() -> open
    void close() -> close
    void setContents(com.volmit.wormholes.util.GList) -> sit
    com.volmit.wormholes.util.GList getContents() -> platform
    java.lang.String getSelection() -> media
    int getSelectionRow() -> customized
    void onUpdate() -> generate
    void onOpen() -> grow
    java.lang.String onDisable(java.lang.String) -> elit
    java.lang.String onEnable(java.lang.String) -> adipiscing
    void onClose() -> harness
    void onSelect(java.lang.String,int) -> Lorem
    void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.util.ICopy -> com.volmit.wormholes.src.iterate:
    java.io.File target -> el
    java.io.File destination -> em
    13:17:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    22:47:void operate() -> u
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDeflate -> com.volmit.wormholes.src.leverage:
    java.io.File target -> el
    java.io.File destination -> em
    17:21:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    28:63:void operate() -> u
    69:69:void reverse() -> reverse
com.volmit.wormholes.util.IDelete -> com.volmit.wormholes.src.matrix:
    java.io.File target -> el
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:46:void operate() -> u
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDirectory -> com.volmit.wormholes.src.maximize:
    java.io.File target -> el
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:21:void operate() -> u
    27:27:void reverse() -> reverse
com.volmit.wormholes.util.IEncrypt -> com.volmit.wormholes.src.mesh:
    java.io.File target -> el
    java.io.File destination -> em
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:44:void operate() -> u
    50:50:void reverse() -> reverse
com.volmit.wormholes.util.IInflate -> com.volmit.wormholes.src.monetize:
    java.io.File target -> el
    java.io.File destination -> em
    20:24:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    31:47:void operate() -> u
    51:121:void add(java.io.File,java.util.jar.JarOutputStream) -> Lorem
    127:127:void reverse() -> reverse
com.volmit.wormholes.util.IModify -> com.volmit.wormholes.src.morph:
    java.io.File target -> el
    java.lang.String key -> key
    java.lang.Object value -> value
    15:20:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.Object) -> <init>
    27:38:void operate() -> u
    44:44:void reverse() -> reverse
com.volmit.wormholes.util.IMove -> com.volmit.wormholes.src.optimize:
    java.io.File target -> el
    java.io.File destination -> em
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:23:void operate() -> u
    29:29:void reverse() -> reverse
com.volmit.wormholes.util.IO -> com.volmit.wormholes.src.orchestrate:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    97:122:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
com.volmit.wormholes.util.IOP -> com.volmit.wormholes.src.productize:
    com.volmit.wormholes.util.D d -> aU
    com.volmit.wormholes.util.FileHack h -> en
    10:14:void <init>(com.volmit.wormholes.util.FileHack) -> <init>
    18:19:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    24:32:void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.IPatch -> com.volmit.wormholes.src.recontextualize:
    java.io.File target -> el
    java.lang.String key -> key
    java.lang.String value -> value
    13:18:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.String) -> <init>
    23:42:void operate() -> u
    48:48:void reverse() -> reverse
com.volmit.wormholes.util.IntTag -> com.volmit.wormholes.src.redefine:
    int value -> value
    54:56:void <init>(java.lang.String,int) -> <init>
    60:60:java.lang.Integer getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Intersection -> com.volmit.wormholes.src.reintermediate:
    7:7:void <init>() -> <init>
    48:66:boolean intersectRayWithSquare(com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3,com.volmit.wormholes.util.Intersection$MVector3) -> Lorem
    71:77:boolean intersects(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector) -> Lorem
com.volmit.wormholes.util.Intersection$MVector3 -> com.volmit.wormholes.src.reintermediate$Lorem:
    float x -> x
    float y -> y
    float z -> z
    13:18:void <init>(float,float,float) -> <init>
    22:22:com.volmit.wormholes.util.Intersection$MVector3 add(com.volmit.wormholes.util.Intersection$MVector3) -> Lorem
    27:27:com.volmit.wormholes.util.Intersection$MVector3 sub(com.volmit.wormholes.util.Intersection$MVector3) -> ipsum
    32:32:com.volmit.wormholes.util.Intersection$MVector3 scale(float) -> adipiscing
    37:37:com.volmit.wormholes.util.Intersection$MVector3 cross(com.volmit.wormholes.util.Intersection$MVector3) -> dolor
    42:42:float dot(com.volmit.wormholes.util.Intersection$MVector3) -> sit
com.volmit.wormholes.util.Inventories -> com.volmit.wormholes.src.reinvent:
    12:12:void <init>() -> <init>
    23:23:boolean hasSpace(org.bukkit.inventory.Inventory) -> Lorem
    37:37:boolean hasSpace(org.bukkit.inventory.Inventory,int) -> Lorem
    50:60:com.volmit.wormholes.util.GList getActualContents(org.bukkit.inventory.Inventory) -> ipsum
    76:92:boolean hasSpace(org.bukkit.inventory.Inventory,org.bukkit.inventory.ItemStack) -> Lorem
    104:114:int getEmptySlots(org.bukkit.inventory.Inventory) -> dolor
com.volmit.wormholes.util.Items -> com.volmit.wormholes.src.repurpose:
    18:18:void <init>() -> <init>
    29:29:boolean is(org.bukkit.inventory.ItemStack) -> dolor
    43:43:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> Lorem
    58:58:boolean is(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    74:74:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> Lorem
    95:107:org.bukkit.inventory.ItemStack getSkull(java.lang.String) -> volutpat
    123:123:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> Lorem
    135:135:boolean hasMeta(org.bukkit.inventory.ItemStack) -> sit
    147:147:boolean hasName(org.bukkit.inventory.ItemStack) -> amet
    159:159:boolean hasLore(org.bukkit.inventory.ItemStack) -> consectetur
    173:173:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> Lorem
    187:187:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> Lorem
    201:201:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> Lorem
    217:222:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> Lorem
    234:239:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> adipiscing
    252:257:com.volmit.wormholes.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> elit
    269:269:boolean isBroken(org.bukkit.inventory.ItemStack) -> Morbi
    281:281:boolean hasDurability(org.bukkit.inventory.ItemStack) -> pulvinar
    293:303:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> vulputate
    316:329:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> Lorem
    340:345:short getMaxDurability(org.bukkit.inventory.ItemStack) -> dictum
    357:362:short getDurability(org.bukkit.inventory.ItemStack) -> Vestibulum
    375:381:void setDurability(org.bukkit.inventory.ItemStack,short) -> Lorem
    393:399:void setDurability(org.bukkit.inventory.ItemStack,int) -> Lorem
    411:417:void damage(org.bukkit.inventory.ItemStack,int) -> ipsum
    431:474:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> Lorem
com.volmit.wormholes.util.JSONArray -> com.volmit.wormholes.src.revolutionize:
    java.util.ArrayList myArrayList -> eo
    92:94:void <init>() -> <init>
    105:133:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    146:147:void <init>(java.lang.String) -> <init>
    155:163:void <init>(java.util.Collection) -> <init>
    172:182:void <init>(java.lang.Object) -> <init>
    186:186:java.util.Iterator iterator() -> iterator
    199:203:java.lang.Object get(int) -> get
    218:228:boolean getBoolean(int) -> getBoolean
    242:247:double getDouble(int) -> getDouble
    264:273:java.lang.Enum getEnum(java.lang.Class,int) -> Lorem
    287:292:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    307:312:java.math.BigInteger getBigInteger(int) -> hac
    326:331:int getInt(int) -> getInt
    346:350:com.volmit.wormholes.util.JSONArray getJSONArray(int) -> habitasse
    364:368:com.volmit.wormholes.util.JSONObject getJSONObject(int) -> platea
    382:387:long getLong(int) -> getLong
    401:405:java.lang.String getString(int) -> getString
    416:416:boolean isNull(int) -> isNull
    431:440:java.lang.String join(java.lang.String) -> rhoncus
    449:449:int length() -> length
    460:461:java.lang.Object opt(int) -> dictumst
    474:474:boolean optBoolean(int) -> Nam
    490:492:boolean optBoolean(int,boolean) -> Lorem
    506:506:double optDouble(int) -> metus
    522:524:double optDouble(int,double) -> Lorem
    538:538:int optInt(int) -> nisl
    554:556:int optInt(int,int) -> consectetur
    570:570:java.lang.Enum optEnum(java.lang.Class,int) -> ipsum
    587:607:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> Lorem
    625:627:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> Lorem
    644:646:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> Lorem
    659:660:com.volmit.wormholes.util.JSONArray optJSONArray(int) -> magna
    673:674:com.volmit.wormholes.util.JSONObject optJSONObject(int) -> tortor
    687:687:long optLong(int) -> tempus
    703:705:long optLong(int,long) -> Lorem
    719:719:java.lang.String optString(int) -> sem
    733:735:java.lang.String optString(int,java.lang.String) -> ipsum
    746:747:com.volmit.wormholes.util.JSONArray put(boolean) -> in
    759:760:com.volmit.wormholes.util.JSONArray put(java.util.Collection) -> Lorem
    773:776:com.volmit.wormholes.util.JSONArray put(double) -> pulvinar
    787:788:com.volmit.wormholes.util.JSONArray put(int) -> sed
    799:800:com.volmit.wormholes.util.JSONArray put(long) -> non
    812:813:com.volmit.wormholes.util.JSONArray put(java.util.Map) -> Lorem
    826:827:com.volmit.wormholes.util.JSONArray put(java.lang.Object) -> mi
    844:845:com.volmit.wormholes.util.JSONArray put(int,boolean) -> ipsum
    861:862:com.volmit.wormholes.util.JSONArray put(int,java.util.Collection) -> Lorem
    879:880:com.volmit.wormholes.util.JSONArray put(int,double) -> ipsum
    897:898:com.volmit.wormholes.util.JSONArray put(int,int) -> adipiscing
    915:916:com.volmit.wormholes.util.JSONArray put(int,long) -> ipsum
    933:934:com.volmit.wormholes.util.JSONArray put(int,java.util.Map) -> Lorem
    954:966:com.volmit.wormholes.util.JSONArray put(int,java.lang.Object) -> Lorem
    978:980:java.lang.Object remove(int) -> remove
    991:1013:boolean similar(java.lang.Object) -> euismod
    1029:1036:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.JSONArray) -> Lorem
    1052:1054:java.lang.String toString() -> toString
    1071:1073:java.lang.String toString(int) -> toString
    1087:1087:java.io.Writer write(java.io.Writer) -> Lorem
    1106:1136:java.io.Writer write(java.io.Writer,int,int) -> Lorem
com.volmit.wormholes.util.JSONDataInput -> com.volmit.wormholes.src.scale:
    8:8:void <init>() -> <init>
    12:40:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.JSONDataOutput -> com.volmit.wormholes.src.seize:
    7:7:void <init>() -> <init>
    12:24:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.JSONException -> com.volmit.wormholes.src.strategize:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> ep
    20:21:void <init>(java.lang.String) -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    41:41:java.lang.Throwable getCause() -> getCause
com.volmit.wormholes.util.JSONML -> com.volmit.wormholes.src.streamline:
    38:38:void <init>() -> <init>
    56:231:java.lang.Object parse(com.volmit.wormholes.util.XMLTokener,boolean,com.volmit.wormholes.util.JSONArray) -> Lorem
    251:251:com.volmit.wormholes.util.JSONArray toJSONArray(java.lang.String) -> sapien
    268:268:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.XMLTokener) -> Lorem
    286:286:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.XMLTokener) -> ipsum
    304:304:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    321:386:java.lang.String toString(com.volmit.wormholes.util.JSONArray) -> ipsum
    399:467:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.JSONObject -> com.volmit.wormholes.src.syndicate:
    java.util.Map map -> map
    java.lang.Object NULL -> eq
    154:154:void <clinit>() -> <clinit>
    159:162:void <init>() -> <init>
    180:191:void <init>(com.volmit.wormholes.util.JSONObject,java.lang.String[]) -> <init>
    204:250:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    263:279:void <init>(java.util.Map) -> <init>
    304:306:void <init>(java.lang.Object) -> <init>
    324:337:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    353:354:void <init>(java.lang.String) -> <init>
    368:403:void <init>(java.lang.String,java.util.Locale) -> <init>
    426:441:com.volmit.wormholes.util.JSONObject accumulate(java.lang.String,java.lang.Object) -> ipsum
    461:476:com.volmit.wormholes.util.JSONObject append(java.lang.String,java.lang.Object) -> dolor
    489:508:java.lang.String doubleToString(double) -> vulputate
    522:531:java.lang.Object get(java.lang.String) -> get
    548:556:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    571:581:boolean getBoolean(java.lang.String) -> getBoolean
    596:603:java.math.BigInteger getBigInteger(java.lang.String) -> orci
    619:626:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    642:649:double getDouble(java.lang.String) -> getDouble
    665:672:int getInt(java.lang.String) -> getInt
    687:692:com.volmit.wormholes.util.JSONArray getJSONArray(java.lang.String) -> ligula
    706:711:com.volmit.wormholes.util.JSONObject getJSONObject(java.lang.String) -> Sed
    726:733:long getLong(java.lang.String) -> getLong
    744:757:java.lang.String[] getNames(com.volmit.wormholes.util.JSONObject) -> dolor
    767:783:java.lang.String[] getNames(java.lang.Object) -> Pellentesque
    797:802:java.lang.String getString(java.lang.String) -> getString
    814:814:boolean has(java.lang.String) -> has
    831:870:com.volmit.wormholes.util.JSONObject increment(java.lang.String) -> ultrices
    884:884:boolean isNull(java.lang.String) -> isNull
    894:894:java.util.Iterator keys() -> keys
    904:904:java.util.Set keySet() -> keySet
    914:914:int length() -> length
    926:932:com.volmit.wormholes.util.JSONArray names() -> aJ
    946:966:java.lang.String numberToString(java.lang.Number) -> Lorem
    978:978:java.lang.Object opt(java.lang.String) -> imperdiet
    992:992:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> ipsum
    1011:1033:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> Lorem
    1047:1047:boolean optBoolean(java.lang.String) -> turpis
    1065:1069:boolean optBoolean(java.lang.String,boolean) -> ipsum
    1084:1084:double optDouble(java.lang.String) -> Nullam
    1102:1106:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> Lorem
    1125:1129:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> Lorem
    1148:1152:double optDouble(java.lang.String,double) -> ipsum
    1167:1167:int optInt(java.lang.String) -> vehicula
    1185:1189:int optInt(java.lang.String,int) -> consectetur
    1203:1204:com.volmit.wormholes.util.JSONArray optJSONArray(java.lang.String) -> porta
    1217:1218:com.volmit.wormholes.util.JSONObject optJSONObject(java.lang.String) -> ultricies
    1232:1232:long optLong(java.lang.String) -> vestibulum
    1250:1254:long optLong(java.lang.String,long) -> ipsum
    1269:1269:java.lang.String optString(java.lang.String) -> felis
    1284:1285:java.lang.String optString(java.lang.String,java.lang.String) -> adipiscing
    1290:1346:void populateMap(java.lang.Object) -> at
    1361:1362:com.volmit.wormholes.util.JSONObject put(java.lang.String,boolean) -> dolor
    1378:1379:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Collection) -> Lorem
    1395:1396:com.volmit.wormholes.util.JSONObject put(java.lang.String,double) -> dolor
    1412:1413:com.volmit.wormholes.util.JSONObject put(java.lang.String,int) -> adipiscing
    1429:1430:com.volmit.wormholes.util.JSONObject put(java.lang.String,long) -> dolor
    1446:1447:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Map) -> Lorem
    1466:1479:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.lang.Object) -> sit
    1497:1505:com.volmit.wormholes.util.JSONObject putOnce(java.lang.String,java.lang.Object) -> amet
    1524:1528:com.volmit.wormholes.util.JSONObject putOpt(java.lang.String,java.lang.Object) -> consectetur
    1543:1553:java.lang.String quote(java.lang.String) -> quote
    1560:1621:java.io.Writer quote(java.lang.String,java.io.Writer) -> Lorem
    1634:1634:java.lang.Object remove(java.lang.String) -> nec
    1650:1690:boolean similar(java.lang.Object) -> euismod
    1705:1760:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1773:1791:void testValidity(java.lang.Object) -> iaculis
    1806:1815:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.JSONArray) -> dolor
    1834:1838:java.lang.String toString() -> toString
    1858:1861:java.lang.String toString(int) -> toString
    1891:1936:java.lang.String valueToString(java.lang.Object) -> valueToString
    1955:1990:java.lang.Object wrap(java.lang.Object) -> wrap
    2005:2005:java.io.Writer write(java.io.Writer) -> Lorem
    2010:2071:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> Lorem
    2076:2080:void indent(java.io.Writer,int) -> Lorem
    2095:2147:java.io.Writer write(java.io.Writer,int,int) -> Lorem
com.volmit.wormholes.util.JSONObject$Null -> com.volmit.wormholes.src.syndicate$Lorem:
    103:103:void <init>() -> <init>
    115:115:java.lang.Object clone() -> clone
    129:129:boolean equals(java.lang.Object) -> equals
    139:139:java.lang.String toString() -> toString
    103:103:void <init>(com.volmit.wormholes.util.JSONObject$Null) -> <init>
com.volmit.wormholes.util.JSONString -> com.volmit.wormholes.src.synergize:
    java.lang.String toJSONString() -> toJSONString
com.volmit.wormholes.util.JSONStringer -> com.volmit.wormholes.src.synthesize:
    64:65:void <init>() -> <init>
    76:76:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONTokener -> com.volmit.wormholes.src.target:
    long character -> er
    boolean eof -> eof
    long index -> es
    long line -> ev
    char previous -> ew
    java.io.Reader reader -> reader
    boolean usePrevious -> ey
    57:67:void <init>(java.io.Reader) -> <init>
    75:76:void <init>(java.io.InputStream) -> <init>
    85:86:void <init>(java.lang.String) -> <init>
    95:102:void back() -> back
    112:121:int dehexchar(char) -> sit
    125:125:boolean end() -> aK
    135:140:boolean more() -> aL
    151:177:char next() -> next
    189:194:char next(char) -> amet
    208:222:java.lang.String next(int) -> volutpat
    233:235:char nextClean() -> aM
    254:297:java.lang.String nextString(char) -> consectetur
    310:319:java.lang.String nextTo(char) -> adipiscing
    332:342:java.lang.String nextTo(java.lang.String) -> tristique
    355:390:java.lang.Object nextValue() -> aN
    404:422:char skipTo(char) -> elit
    433:433:com.volmit.wormholes.util.JSONException syntaxError(java.lang.String) -> lacinia
    443:444:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONWriter -> com.volmit.wormholes.src.transform:
    int maxdepth -> ez
    boolean comma -> eA
    char mode -> eB
    com.volmit.wormholes.util.JSONObject[] stack -> eC
    int top -> top
    java.io.Writer writer -> writer
    96:102:void <init>(java.io.Writer) -> <init>
    111:129:com.volmit.wormholes.util.JSONWriter append(java.lang.String) -> Duis
    142:148:com.volmit.wormholes.util.JSONWriter array() -> aO
    159:171:com.volmit.wormholes.util.JSONWriter end(char,char) -> Lorem
    181:181:com.volmit.wormholes.util.JSONWriter endArray() -> aP
    191:191:com.volmit.wormholes.util.JSONWriter endObject() -> aQ
    203:221:com.volmit.wormholes.util.JSONWriter key(java.lang.String) -> tempor
    235:244:com.volmit.wormholes.util.JSONWriter object() -> aR
    255:268:void pop(char) -> Morbi
    276:282:void push(com.volmit.wormholes.util.JSONObject) -> sit
    293:293:com.volmit.wormholes.util.JSONWriter value(boolean) -> purus
    303:303:com.volmit.wormholes.util.JSONWriter value(double) -> dictum
    313:313:com.volmit.wormholes.util.JSONWriter value(long) -> mi
    325:325:com.volmit.wormholes.util.JSONWriter value(java.lang.Object) -> urna
com.volmit.wormholes.util.Keyed -> com.volmit.wormholes.src.transition:
    java.lang.String value() -> value
com.volmit.wormholes.util.Lang -> com.volmit.wormholes.src.unleash:
    java.lang.String value() -> value
com.volmit.wormholes.util.LineParticleManipulator -> com.volmit.wormholes.src.utilize:
    13:13:void <init>() -> <init>
    30:41:void play(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> Lorem
com.volmit.wormholes.util.ListTag -> com.volmit.wormholes.src.visualize:
    java.lang.Class type -> type
    java.util.List value -> value
    63:66:void <init>(java.lang.String,java.lang.Class,java.util.List) -> <init>
    73:73:java.lang.Class getType() -> getType
    78:78:java.util.List getValue() -> getValue
    83:94:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ListViewWindow -> com.volmit.wormholes.src.whiteboard:
    com.volmit.wormholes.util.GList binds -> eD
    16:19:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    23:25:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.LongTag -> com.volmit.wormholes.src.B2B:
    long value -> value
    54:56:void <init>(java.lang.String,long) -> <init>
    60:60:java.lang.Long getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.M -> com.volmit.wormholes.src.B2C:
    int precision -> eE
    int modulus -> eF
    float[] sin -> eG
    22:475:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    35:38:double evaluate(java.lang.String) -> eget
    50:55:boolean r(java.lang.Double) -> ipsum
    77:87:double evaluate(java.lang.String,java.lang.Double[]) -> Lorem
    92:115:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> Lorem
    130:130:double tps(long,int) -> amet
    142:142:double ticksFromNS(long) -> euismod
    154:180:java.lang.String toRoman(int) -> rhoncus
    194:206:java.lang.String repeat(java.lang.String,int) -> repeat
    211:211:int rand(int,int) -> elit
    223:295:int fromRoman(java.lang.String) -> semper
    305:305:long ns() -> aS
    315:315:long ms() -> aT
    327:334:double avg(com.volmit.wormholes.util.GList) -> pulvinar
    347:351:void lim(com.volmit.wormholes.util.GList,int) -> ipsum
    364:364:double distance(org.bukkit.Location,org.bukkit.Location) -> sit
    382:382:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> ipsum
    394:394:float sin(float) -> sin
    406:406:float cos(float) -> cos
    418:428:int max(int[]) -> max
    440:450:int min(int[]) -> min
    466:466:boolean within(int,int,int) -> amet
    479:479:float sinLookup(int) -> sapien
com.volmit.wormholes.util.MFADistortion -> com.volmit.wormholes.src.back:
    int span -> eH
    float to -> eI
    8:12:void <init>(int,float) -> <init>
    17:37:com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.MSound -> com.volmit.wormholes.src.end:
    com.volmit.wormholes.util.MSound AMBIENCE_CAVE -> eJ
    com.volmit.wormholes.util.MSound AMBIENCE_RAIN -> eK
    com.volmit.wormholes.util.MSound AMBIENCE_THUNDER -> eL
    com.volmit.wormholes.util.MSound ANVIL_BREAK -> eM
    com.volmit.wormholes.util.MSound ANVIL_LAND -> eN
    com.volmit.wormholes.util.MSound ANVIL_USE -> eO
    com.volmit.wormholes.util.MSound ARROW_HIT -> eP
    com.volmit.wormholes.util.MSound BURP -> eQ
    com.volmit.wormholes.util.MSound CHEST_CLOSE -> eR
    com.volmit.wormholes.util.MSound CHEST_OPEN -> eS
    com.volmit.wormholes.util.MSound CLICK -> eT
    com.volmit.wormholes.util.MSound DOOR_CLOSE -> eU
    com.volmit.wormholes.util.MSound DOOR_OPEN -> eV
    com.volmit.wormholes.util.MSound DRINK -> eW
    com.volmit.wormholes.util.MSound EAT -> eX
    com.volmit.wormholes.util.MSound EXPLODE -> eY
    com.volmit.wormholes.util.MSound FALL_BIG -> eZ
    com.volmit.wormholes.util.MSound FALL_SMALL -> fa
    com.volmit.wormholes.util.MSound FIRE -> fb
    com.volmit.wormholes.util.MSound FIRE_IGNITE -> fc
    com.volmit.wormholes.util.MSound FIZZ -> fd
    com.volmit.wormholes.util.MSound FUSE -> fe
    com.volmit.wormholes.util.MSound GLASS -> ff
    com.volmit.wormholes.util.MSound HURT_FLESH -> fg
    com.volmit.wormholes.util.MSound ITEM_BREAK -> fh
    com.volmit.wormholes.util.MSound ITEM_PICKUP -> fi
    com.volmit.wormholes.util.MSound LAVA -> fj
    com.volmit.wormholes.util.MSound LAVA_POP -> fk
    com.volmit.wormholes.util.MSound LEVEL_UP -> fl
    com.volmit.wormholes.util.MSound MINECART_BASE -> fm
    com.volmit.wormholes.util.MSound MINECART_INSIDE -> fn
    com.volmit.wormholes.util.MSound NOTE_BASS -> fo
    com.volmit.wormholes.util.MSound NOTE_PIANO -> fp
    com.volmit.wormholes.util.MSound NOTE_BASS_DRUM -> fq
    com.volmit.wormholes.util.MSound NOTE_STICKS -> fr
    com.volmit.wormholes.util.MSound NOTE_BASS_GUITAR -> fs
    com.volmit.wormholes.util.MSound NOTE_SNARE_DRUM -> ft
    com.volmit.wormholes.util.MSound NOTE_PLING -> fu
    com.volmit.wormholes.util.MSound ORB_PICKUP -> fv
    com.volmit.wormholes.util.MSound PISTON_EXTEND -> fw
    com.volmit.wormholes.util.MSound PISTON_RETRACT -> fx
    com.volmit.wormholes.util.MSound PORTAL -> fy
    com.volmit.wormholes.util.MSound PORTAL_TRAVEL -> fz
    com.volmit.wormholes.util.MSound PORTAL_TRIGGER -> fA
    com.volmit.wormholes.util.MSound SHOOT_ARROW -> fB
    com.volmit.wormholes.util.MSound SPLASH -> fC
    com.volmit.wormholes.util.MSound SPLASH2 -> fD
    com.volmit.wormholes.util.MSound STEP_GRASS -> fE
    com.volmit.wormholes.util.MSound STEP_GRAVEL -> fF
    com.volmit.wormholes.util.MSound STEP_LADDER -> fG
    com.volmit.wormholes.util.MSound STEP_SAND -> fH
    com.volmit.wormholes.util.MSound STEP_SNOW -> fI
    com.volmit.wormholes.util.MSound STEP_STONE -> fJ
    com.volmit.wormholes.util.MSound STEP_WOOD -> fK
    com.volmit.wormholes.util.MSound STEP_WOOL -> fL
    com.volmit.wormholes.util.MSound SWIM -> fM
    com.volmit.wormholes.util.MSound WATER -> fN
    com.volmit.wormholes.util.MSound WOOD_CLICK -> fO
    com.volmit.wormholes.util.MSound BAT_DEATH -> fP
    com.volmit.wormholes.util.MSound BAT_HURT -> fQ
    com.volmit.wormholes.util.MSound BAT_IDLE -> fR
    com.volmit.wormholes.util.MSound BAT_LOOP -> fS
    com.volmit.wormholes.util.MSound BAT_TAKEOFF -> fT
    com.volmit.wormholes.util.MSound BLAZE_BREATH -> fU
    com.volmit.wormholes.util.MSound BLAZE_DEATH -> fV
    com.volmit.wormholes.util.MSound BLAZE_HIT -> fW
    com.volmit.wormholes.util.MSound CAT_HISS -> fX
    com.volmit.wormholes.util.MSound CAT_HIT -> fY
    com.volmit.wormholes.util.MSound CAT_MEOW -> fZ
    com.volmit.wormholes.util.MSound CAT_PURR -> ga
    com.volmit.wormholes.util.MSound CAT_PURREOW -> gb
    com.volmit.wormholes.util.MSound CHICKEN_IDLE -> gc
    com.volmit.wormholes.util.MSound CHICKEN_HURT -> gd
    com.volmit.wormholes.util.MSound CHICKEN_EGG_POP -> ge
    com.volmit.wormholes.util.MSound CHICKEN_WALK -> gf
    com.volmit.wormholes.util.MSound COW_IDLE -> gg
    com.volmit.wormholes.util.MSound COW_HURT -> gh
    com.volmit.wormholes.util.MSound COW_WALK -> gi
    com.volmit.wormholes.util.MSound CREEPER_HISS -> gj
    com.volmit.wormholes.util.MSound CREEPER_DEATH -> gk
    com.volmit.wormholes.util.MSound ENDERDRAGON_DEATH -> gl
    com.volmit.wormholes.util.MSound ENDERDRAGON_GROWL -> gm
    com.volmit.wormholes.util.MSound ENDERDRAGON_HIT -> gn
    com.volmit.wormholes.util.MSound ENDERDRAGON_WINGS -> go
    com.volmit.wormholes.util.MSound ENDERMAN_DEATH -> gp
    com.volmit.wormholes.util.MSound ENDERMAN_HIT -> gq
    com.volmit.wormholes.util.MSound ENDERMAN_IDLE -> gr
    com.volmit.wormholes.util.MSound ENDERMAN_TELEPORT -> gs
    com.volmit.wormholes.util.MSound ENDERMAN_SCREAM -> gt
    com.volmit.wormholes.util.MSound ENDERMAN_STARE -> gu
    com.volmit.wormholes.util.MSound GHAST_SCREAM -> gv
    com.volmit.wormholes.util.MSound GHAST_SCREAM2 -> gw
    com.volmit.wormholes.util.MSound GHAST_CHARGE -> gx
    com.volmit.wormholes.util.MSound GHAST_DEATH -> gy
    com.volmit.wormholes.util.MSound GHAST_FIREBALL -> gz
    com.volmit.wormholes.util.MSound GHAST_MOAN -> gA
    com.volmit.wormholes.util.MSound IRONGOLEM_DEATH -> gB
    com.volmit.wormholes.util.MSound IRONGOLEM_HIT -> gC
    com.volmit.wormholes.util.MSound IRONGOLEM_THROW -> gD
    com.volmit.wormholes.util.MSound IRONGOLEM_WALK -> gE
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK -> gF
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK2 -> gG
    com.volmit.wormholes.util.MSound MAGMACUBE_JUMP -> gH
    com.volmit.wormholes.util.MSound PIG_IDLE -> gI
    com.volmit.wormholes.util.MSound PIG_DEATH -> gJ
    com.volmit.wormholes.util.MSound PIG_WALK -> gK
    com.volmit.wormholes.util.MSound SHEEP_IDLE -> gL
    com.volmit.wormholes.util.MSound SHEEP_SHEAR -> gM
    com.volmit.wormholes.util.MSound SHEEP_WALK -> gN
    com.volmit.wormholes.util.MSound SILVERFISH_HIT -> gO
    com.volmit.wormholes.util.MSound SILVERFISH_KILL -> gP
    com.volmit.wormholes.util.MSound SILVERFISH_IDLE -> gQ
    com.volmit.wormholes.util.MSound SILVERFISH_WALK -> gR
    com.volmit.wormholes.util.MSound SKELETON_IDLE -> gS
    com.volmit.wormholes.util.MSound SKELETON_DEATH -> gT
    com.volmit.wormholes.util.MSound SKELETON_HURT -> gU
    com.volmit.wormholes.util.MSound SKELETON_WALK -> gV
    com.volmit.wormholes.util.MSound SLIME_ATTACK -> gW
    com.volmit.wormholes.util.MSound SLIME_WALK -> gX
    com.volmit.wormholes.util.MSound SLIME_WALK2 -> gY
    com.volmit.wormholes.util.MSound SPIDER_IDLE -> gZ
    com.volmit.wormholes.util.MSound SPIDER_DEATH -> ha
    com.volmit.wormholes.util.MSound SPIDER_WALK -> hb
    com.volmit.wormholes.util.MSound WITHER_DEATH -> hc
    com.volmit.wormholes.util.MSound WITHER_HURT -> hd
    com.volmit.wormholes.util.MSound WITHER_IDLE -> he
    com.volmit.wormholes.util.MSound WITHER_SHOOT -> hf
    com.volmit.wormholes.util.MSound WITHER_SPAWN -> hg
    com.volmit.wormholes.util.MSound WOLF_BARK -> hh
    com.volmit.wormholes.util.MSound WOLF_DEATH -> hi
    com.volmit.wormholes.util.MSound WOLF_GROWL -> hj
    com.volmit.wormholes.util.MSound WOLF_HOWL -> hk
    com.volmit.wormholes.util.MSound WOLF_HURT -> hl
    com.volmit.wormholes.util.MSound WOLF_PANT -> hm
    com.volmit.wormholes.util.MSound WOLF_SHAKE -> hn
    com.volmit.wormholes.util.MSound WOLF_WALK -> ho
    com.volmit.wormholes.util.MSound WOLF_WHINE -> hp
    com.volmit.wormholes.util.MSound ZOMBIE_METAL -> hq
    com.volmit.wormholes.util.MSound ZOMBIE_WOOD -> hr
    com.volmit.wormholes.util.MSound ZOMBIE_WOODBREAK -> hs
    com.volmit.wormholes.util.MSound ZOMBIE_IDLE -> ht
    com.volmit.wormholes.util.MSound ZOMBIE_DEATH -> hu
    com.volmit.wormholes.util.MSound ZOMBIE_HURT -> hv
    com.volmit.wormholes.util.MSound ZOMBIE_INFECT -> hw
    com.volmit.wormholes.util.MSound ZOMBIE_UNFECT -> hx
    com.volmit.wormholes.util.MSound ZOMBIE_REMEDY -> hy
    com.volmit.wormholes.util.MSound ZOMBIE_WALK -> hz
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_IDLE -> hA
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_ANGRY -> hB
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_DEATH -> hC
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_HURT -> hD
    com.volmit.wormholes.util.MSound DIG_WOOL -> hE
    com.volmit.wormholes.util.MSound DIG_GRASS -> hF
    com.volmit.wormholes.util.MSound DIG_GRAVEL -> hG
    com.volmit.wormholes.util.MSound DIG_SAND -> hH
    com.volmit.wormholes.util.MSound DIG_SNOW -> hI
    com.volmit.wormholes.util.MSound DIG_STONE -> hJ
    com.volmit.wormholes.util.MSound DIG_WOOD -> hK
    com.volmit.wormholes.util.MSound FIREWORK_BLAST -> hL
    com.volmit.wormholes.util.MSound FIREWORK_BLAST2 -> hM
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST -> hN
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST2 -> hO
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE -> hP
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE2 -> hQ
    com.volmit.wormholes.util.MSound FIREWORK_LAUNCH -> hR
    com.volmit.wormholes.util.MSound SUCCESSFUL_HIT -> hS
    com.volmit.wormholes.util.MSound HORSE_ANGRY -> hT
    com.volmit.wormholes.util.MSound HORSE_ARMOR -> hU
    com.volmit.wormholes.util.MSound HORSE_BREATHE -> hV
    com.volmit.wormholes.util.MSound HORSE_DEATH -> hW
    com.volmit.wormholes.util.MSound HORSE_GALLOP -> hX
    com.volmit.wormholes.util.MSound HORSE_HIT -> hY
    com.volmit.wormholes.util.MSound HORSE_IDLE -> hZ
    com.volmit.wormholes.util.MSound HORSE_JUMP -> ia
    com.volmit.wormholes.util.MSound HORSE_LAND -> ib
    com.volmit.wormholes.util.MSound HORSE_SADDLE -> ic
    com.volmit.wormholes.util.MSound HORSE_SOFT -> ie
    com.volmit.wormholes.util.MSound HORSE_WOOD -> if
    com.volmit.wormholes.util.MSound DONKEY_ANGRY -> ig
    com.volmit.wormholes.util.MSound DONKEY_DEATH -> ih
    com.volmit.wormholes.util.MSound DONKEY_HIT -> ii
    com.volmit.wormholes.util.MSound DONKEY_IDLE -> ij
    com.volmit.wormholes.util.MSound HORSE_SKELETON_DEATH -> ik
    com.volmit.wormholes.util.MSound HORSE_SKELETON_HIT -> il
    com.volmit.wormholes.util.MSound HORSE_SKELETON_IDLE -> im
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_DEATH -> io
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_HIT -> ip
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_IDLE -> iq
    com.volmit.wormholes.util.MSound VILLAGER_DEATH -> ir
    com.volmit.wormholes.util.MSound VILLAGER_HAGGLE -> is
    com.volmit.wormholes.util.MSound VILLAGER_HIT -> it
    com.volmit.wormholes.util.MSound VILLAGER_IDLE -> iu
    com.volmit.wormholes.util.MSound VILLAGER_NO -> iv
    com.volmit.wormholes.util.MSound VILLAGER_YES -> iw
    java.lang.String pre19sound -> ix
    java.lang.String post19sound -> iy
    org.bukkit.Sound resolvedSound -> iz
    com.volmit.wormholes.util.MSound[] ENUM$VALUES -> iA
    8:203:void <clinit>() -> <clinit>
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:230:org.bukkit.Sound bukkitSound() -> aU
    1:1:com.volmit.wormholes.util.MSound[] values() -> values
    1:1:com.volmit.wormholes.util.MSound valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.MaterialBlock -> com.volmit.wormholes.src.best:
    org.bukkit.Material material -> iB
    java.lang.Byte data -> iC
    25:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    31:35:void <init>(org.bukkit.Material) -> <init>
    37:41:void <init>(org.bukkit.Location) -> <init>
    43:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> aV
    66:67:void setData(java.lang.Byte) -> ipsum
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.MessageBuilder -> com.volmit.wormholes.src.of:
    java.lang.String tag -> tag
    java.lang.String hoverText -> iD
    19:23:void <init>() -> <init>
    31:35:void <init>(com.volmit.wormholes.util.TagProvider) -> <init>
    47:78:void message(org.bukkit.command.CommandSender,java.lang.String) -> Lorem
    89:90:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String) -> aliquam
    104:107:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String,java.lang.String) -> elit
    112:112:java.lang.String getHoverText() -> aW
    117:118:void setHoverText(java.lang.String) -> lectus
    122:122:java.lang.String getTag() -> getTag
com.volmit.wormholes.util.MetaObject -> com.volmit.wormholes.src.breed:
    void write(com.volmit.wormholes.util.DataCluster,java.lang.String) -> ipsum
    void read(com.volmit.wormholes.util.DataCluster,java.lang.String) -> dolor
com.volmit.wormholes.util.MultiDataHandler -> com.volmit.wormholes.src.bleeding:
    java.lang.Object get(java.lang.Object) -> get
    void load(java.lang.Object) -> sit
    void save(java.lang.Object) -> save
    java.lang.Object onLoad(java.lang.Object) -> adipiscing
    void onSave(java.lang.Object) -> consectetur
    boolean contains(java.lang.Object) -> contains
    com.volmit.wormholes.util.GMap getCache() -> baffle
    void saveAll() -> saveAll
com.volmit.wormholes.util.NBTConstants -> com.volmit.wormholes.src.edge:
    java.nio.charset.Charset CHARSET -> CHARSET
    int TYPE_END -> TYPE_END
    int TYPE_BYTE -> TYPE_BYTE
    int TYPE_SHORT -> TYPE_SHORT
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_BYTE_ARRAY -> TYPE_BYTE_ARRAY
    int TYPE_STRING -> TYPE_STRING
    int TYPE_LIST -> TYPE_LIST
    int TYPE_COMPOUND -> TYPE_COMPOUND
    int TYPE_BOOLEAN -> iE
    48:64:void <clinit>() -> <clinit>
    69:71:void <init>() -> <init>
com.volmit.wormholes.util.NBTInputStream -> com.volmit.wormholes.src.bricks:
    java.io.DataInputStream is -> iF
    70:72:void <init>(java.io.InputStream) -> <init>
    80:80:com.volmit.wormholes.util.Tag readTag() -> aX
    90:102:com.volmit.wormholes.util.Tag readTag(int) -> orci
    114:172:com.volmit.wormholes.util.Tag readTagPayload(int,java.lang.String,int) -> Lorem
    178:179:void close() -> close
com.volmit.wormholes.util.NBTOutputStream -> com.volmit.wormholes.src.and:
    java.io.DataOutputStream os -> iG
    67:69:void <init>(java.io.OutputStream) -> <init>
    77:90:void writeTag(com.volmit.wormholes.util.Tag) -> Lorem
    98:139:void writeTagPayload(com.volmit.wormholes.util.Tag) -> ipsum
    147:148:void writeByteTagPayload(com.volmit.wormholes.util.ByteTag) -> Lorem
    156:159:void writeByteArrayTagPayload(com.volmit.wormholes.util.ByteArrayTag) -> Lorem
    167:171:void writeCompoundTagPayload(com.volmit.wormholes.util.CompoundTag) -> Lorem
    179:188:void writeListTagPayload(com.volmit.wormholes.util.ListTag) -> Lorem
    196:199:void writeStringTagPayload(com.volmit.wormholes.util.StringTag) -> Lorem
    207:208:void writeDoubleTagPayload(com.volmit.wormholes.util.DoubleTag) -> Lorem
    216:217:void writeBooleanTagPayload(com.volmit.wormholes.util.BooleanTag) -> Lorem
    225:226:void writeFloatTagPayload(com.volmit.wormholes.util.FloatTag) -> Lorem
    234:235:void writeLongTagPayload(com.volmit.wormholes.util.LongTag) -> Lorem
    243:244:void writeIntTagPayload(com.volmit.wormholes.util.IntTag) -> Lorem
    252:253:void writeShortTagPayload(com.volmit.wormholes.util.ShortTag) -> Lorem
    262:262:void writeEndTagPayload(com.volmit.wormholes.util.EndTag) -> Lorem
    266:267:void close() -> close
com.volmit.wormholes.util.NBTUtils -> com.volmit.wormholes.src.clicks:
    47:97:java.lang.String getTypeName(java.lang.Class) -> getTypeName
    112:162:int getTypeCode(java.lang.Class) -> getTypeCode
    177:204:java.lang.Class getTypeClass(int) -> getTypeClass
    211:214:void <init>() -> <init>
com.volmit.wormholes.util.NMSClass -> com.volmit.wormholes.src.mortar:
    boolean init -> iH
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> iI
    java.lang.Class IChatBaseComponent -> iJ
    java.lang.Class ChatSerializer -> iK
    java.lang.Class PacketPlayOutPlayerInfo -> iL
    java.lang.Class PlayerInfoData -> iM
    java.lang.Class EnumPlayerInfoAction -> iN
    java.lang.Class GameProfile -> iO
    java.lang.Class EnumGamemode -> iP
    java.lang.Class TileEntitySkull -> iQ
    java.lang.Class LoadingCache -> iR
    11:130:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
com.volmit.wormholes.util.NMSX -> com.volmit.wormholes.src.collaborative:
    com.volmit.wormholes.util.NMSX instance -> iS
    boolean useOldMethods -> iT
    java.lang.String nmsver -> iU
    com.volmit.wormholes.util.GList colors -> iV
    1001:1027:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    38:40:java.lang.String getVersion() -> getVersion
    47:55:java.lang.Object serializeChat(java.lang.String) -> consequat
    66:71:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> ipsum
    86:104:void setChestState(org.bukkit.Location,boolean) -> Lorem
    108:122:java.lang.Class getCraftClass(java.lang.String) -> neque
    133:135:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> Lorem
    147:161:java.lang.Class getCBNMSClass(java.lang.String) -> sagittis
    173:187:java.lang.Class getOBCClass(java.lang.String) -> lorem
    194:202:java.lang.Object getHandle(java.lang.Object) -> Proin
    209:219:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    224:233:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    238:254:boolean ClassListEqual(java.lang.Class[],java.lang.Class[]) -> Lorem
    269:278:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> Lorem
    294:303:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    317:318:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    330:331:void launchFirework(org.bukkit.Location,org.bukkit.Color) -> Lorem
    344:345:void playRecord(org.bukkit.entity.Player,org.bukkit.Material) -> Lorem
    360:361:void playRecord(org.bukkit.entity.Player,org.bukkit.Location,org.bukkit.Material) -> Lorem
    371:372:void launchFirework(org.bukkit.Location) -> Proin
    387:391:void spreadParticles(org.bukkit.Location,org.bukkit.Material,int) -> Lorem
    406:410:void breakParticles(org.bukkit.Location,org.bukkit.Material,int) -> ipsum
    422:432:java.lang.Class getNMSClass(java.lang.String) -> vel
    447:452:java.lang.Class getPacket(java.lang.String) -> Quisque
    464:465:void setWeatherDownfall(org.bukkit.entity.Player) -> odio
    475:476:void setWeatherClear(org.bukkit.entity.Player) -> a
    486:487:void resetWeather(org.bukkit.entity.Player) -> facilisis
    499:500:void setTime(org.bukkit.entity.Player,long) -> Lorem
    510:511:void resetTime(org.bukkit.entity.Player) -> In
    525:525:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> ipsum
    537:537:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location) -> ac
    549:549:long getPlayerTime(org.bukkit.entity.Player) -> hac
    575:612:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> Lorem
    622:623:void clearTitle(org.bukkit.entity.Player) -> habitasse
    637:669:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> ipsum
    681:736:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> Lorem
    747:747:java.lang.String getEntityName(org.bukkit.entity.Entity) -> non
    752:752:java.lang.String getNBTV() -> aY
    762:762:java.lang.String getBukkitVersion() -> getBukkitVersion
    772:772:java.lang.String nmsPackage() -> aZ
    782:782:java.lang.String craftPackage() -> ba
    795:808:void showEnd(org.bukkit.entity.Player) -> platea
    820:832:void showDemo(org.bukkit.entity.Player) -> dictumst
    846:858:void showBrightness(org.bukkit.entity.Player,float) -> Lorem
    872:884:void showWeather(org.bukkit.entity.Player,float) -> ipsum
    890:900:java.lang.Object getBlockPosition(org.bukkit.Location) -> enim
    907:920:void showBlockBreakAnimation(org.bukkit.entity.Player,org.bukkit.Location,int) -> Lorem
    932:944:void showControls(org.bukkit.entity.Player) -> Nam
    958:970:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> Lorem
    983:996:int ping(org.bukkit.entity.Player) -> metus
com.volmit.wormholes.util.P -> com.volmit.wormholes.src.compelling:
    22:22:void <init>() -> <init>
    33:33:boolean isOnline(java.lang.String) -> congue
    45:45:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    55:55:org.bukkit.entity.Player getAnyPlayer() -> bb
    65:65:boolean isAnyOnline() -> bc
    77:77:com.volmit.wormholes.util.GList inWorld(org.bukkit.World) -> Lorem
    89:101:com.volmit.wormholes.util.GList inChunk(org.bukkit.Chunk) -> dolor
    115:115:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,double) -> Lorem
    129:129:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,int) -> Lorem
    140:141:void disable(org.bukkit.entity.Player) -> nisl
    151:152:void enable(org.bukkit.entity.Player) -> magna
    165:165:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> dolor
    179:179:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> sit
    191:192:boolean hasInventoryOpen(org.bukkit.entity.Player) -> tortor
    208:240:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> Lorem
    254:263:int getTotalExperience(org.bukkit.entity.Player) -> tempus
    278:286:void setTotalExperience(org.bukkit.entity.Player,int) -> amet
    297:297:boolean canFindPlayer(java.lang.String) -> vitae
    309:325:org.bukkit.entity.Player findPlayer(java.lang.String) -> ornare
    335:342:com.volmit.wormholes.util.GList onlinePlayers() -> bd
    354:354:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> sem
    365:368:void clear(org.bukkit.entity.Player) -> sed
    378:382:void clearEffects(org.bukkit.entity.Player) -> volutpat
    394:395:void heal(org.bukkit.entity.Player,double) -> Lorem
    405:406:void heal(org.bukkit.entity.Player) -> rhoncus
    416:417:void resetMaxHeath(org.bukkit.entity.Player) -> sapien
    427:428:void resetHunger(org.bukkit.entity.Player) -> orci
    438:439:void kill(org.bukkit.entity.Player) -> ligula
    450:450:com.volmit.wormholes.util.Shape getShape(org.bukkit.entity.Player) -> Sed
    462:462:org.bukkit.Location getHand(org.bukkit.entity.Player) -> ultrices
    478:487:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> Lorem
com.volmit.wormholes.util.P$1 -> com.volmit.wormholes.src.compelling$1:
    1:89:void <init>() -> <init>
    94:99:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> purus
    1:1:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.P$2 -> com.volmit.wormholes.src.compelling$2:
    java.lang.Double val$doff -> iW
    org.bukkit.entity.Player val$e -> iX
    org.bukkit.entity.Entity[] val$result -> iY
    1:221:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    226:237:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.util.PE -> com.volmit.wormholes.src.cross:
    com.volmit.wormholes.util.PE ABSORPTION -> iZ
    com.volmit.wormholes.util.PE BLINDNESS -> ja
    com.volmit.wormholes.util.PE CONFUSION -> jb
    com.volmit.wormholes.util.PE DAMAGE_RESISTANCE -> jc
    com.volmit.wormholes.util.PE FAST_DIGGING -> jd
    com.volmit.wormholes.util.PE FIRE_RESISTANCE -> je
    com.volmit.wormholes.util.PE GLOWING -> jf
    com.volmit.wormholes.util.PE HARM -> jg
    com.volmit.wormholes.util.PE HEAL -> jh
    com.volmit.wormholes.util.PE HEALTH_BOOST -> ji
    com.volmit.wormholes.util.PE HUNGER -> jj
    com.volmit.wormholes.util.PE INCREASE_DAMAGE -> jk
    com.volmit.wormholes.util.PE INVISIBILITY -> jl
    com.volmit.wormholes.util.PE JUMP -> jm
    com.volmit.wormholes.util.PE LEVITATION -> jn
    com.volmit.wormholes.util.PE LUCK -> jo
    com.volmit.wormholes.util.PE NIGHT_VISION -> jp
    com.volmit.wormholes.util.PE POISON -> jq
    com.volmit.wormholes.util.PE REGENERATION -> jr
    com.volmit.wormholes.util.PE SATURATION -> js
    com.volmit.wormholes.util.PE SLOW -> jt
    com.volmit.wormholes.util.PE SLOW_DIGGING -> ju
    com.volmit.wormholes.util.PE SPEED -> jv
    com.volmit.wormholes.util.PE UNLUCK -> jw
    com.volmit.wormholes.util.PE WATER_BREATHING -> jx
    com.volmit.wormholes.util.PE WEAKNESS -> jy
    com.volmit.wormholes.util.PE WITHER -> jz
    192:215:void <clinit>() -> <clinit>
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:com.volmit.wormholes.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> Lorem
    144:144:com.volmit.wormholes.util.PE d(int) -> ligula
    156:156:com.volmit.wormholes.util.PE a(int) -> Sed
    166:166:org.bukkit.potion.PotionEffect c() -> be
    177:178:void c(org.bukkit.entity.LivingEntity) -> Lorem
    182:183:void crm(org.bukkit.entity.LivingEntity) -> ipsum
    187:188:void rm(org.bukkit.entity.LivingEntity) -> dolor
com.volmit.wormholes.util.PackageType -> com.volmit.wormholes.src.platform:
    com.volmit.wormholes.util.PackageType STRING -> jA
    com.volmit.wormholes.util.PackageType SHORT -> jB
    com.volmit.wormholes.util.PackageType LONG -> jC
    com.volmit.wormholes.util.PackageType INTEGER -> jD
    com.volmit.wormholes.util.PackageType FLOAT -> jE
    com.volmit.wormholes.util.PackageType DOUBLE -> jF
    com.volmit.wormholes.util.PackageType CHAR -> jG
    com.volmit.wormholes.util.PackageType BYTES -> jH
    com.volmit.wormholes.util.PackageType BYTE -> jI
    com.volmit.wormholes.util.PackageType BOOLEAN -> jJ
    com.volmit.wormholes.util.PackageType DATA_PACK -> jK
    byte type -> type
    java.lang.Class clazz -> clazz
    com.volmit.wormholes.util.PackageType[] ENUM$VALUES -> jL
    3:15:void <clinit>() -> <clinit>
    20:24:void <init>(java.lang.String,int,byte,java.lang.Class) -> <init>
    28:28:byte getType() -> getType
    33:33:java.lang.Class getClazz() -> getClazz
    40:48:com.volmit.wormholes.util.DataHandle getInstance() -> bf
    53:61:com.volmit.wormholes.util.PackageType getType(byte) -> amet
    66:73:com.volmit.wormholes.util.DataHandle getInstance(byte) -> consectetur
    1:1:com.volmit.wormholes.util.PackageType[] values() -> values
    1:1:com.volmit.wormholes.util.PackageType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.PacketWrapper -> com.volmit.wormholes.src.media:
    23:23:void <init>() -> <init>
    27:27:void onEnable() -> onEnable
com.volmit.wormholes.util.ParallelPoolManager -> com.volmit.wormholes.src.customized:
    com.volmit.wormholes.util.QueueMode mode -> jM
    com.volmit.wormholes.util.GList threads -> jN
    int next -> jO
    int threadCount -> jP
    java.util.Queue squeue -> jQ
    java.lang.String key -> key
    com.volmit.wormholes.util.ThreadInformation info -> jR
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$QueueMode -> jS
    17:18:void syncQueue(com.volmit.wormholes.util.Execution) -> Lorem
    22:26:void tickSyncQueue() -> bg
    30:33:void <init>(java.lang.String,int,com.volmit.wormholes.util.QueueMode) -> <init>
    35:53:void <init>(int,com.volmit.wormholes.util.QueueMode) -> <init>
    57:72:long lock() -> bh
    77:78:void start() -> start
    82:86:void shutdown() -> shutdown
    90:91:void <init>(int) -> <init>
    95:96:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    100:100:int getSize() -> getSize
    105:112:int getQueueSize() -> bi
    117:117:com.volmit.wormholes.util.ParallelThread[] getThreads() -> bj
    122:143:void updateThreadInformation() -> bk
    147:179:com.volmit.wormholes.util.ParallelThread nextThread() -> bl
    184:190:void createThreads(int) -> ultrices
    194:194:com.volmit.wormholes.util.QueueMode getMode() -> bm
    199:199:int getNext() -> bn
    204:204:int getThreadCount() -> getThreadCount
    209:209:java.util.Queue getSqueue() -> bo
    214:214:java.lang.String getKey() -> getKey
    219:219:com.volmit.wormholes.util.ThreadInformation getAverageInfo() -> bp
    5:5:int[] $SWITCH_TABLE$com$volmit$wormholes$util$QueueMode() -> bq
com.volmit.wormholes.util.ParallelThread -> com.volmit.wormholes.src.cutting:
    java.util.Queue queue -> jT
    com.volmit.wormholes.util.ThreadInformation info -> jR
    11:17:void <init>(java.lang.String,int) -> <init>
    22:54:void run() -> run
    58:62:void conditionallySleep(double) -> Vestibulum
    68:75:void execute(com.volmit.wormholes.util.Execution) -> dolor
    79:89:void execute() -> execute
    93:94:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    98:98:java.util.Queue getQueue() -> br
    103:103:com.volmit.wormholes.util.ThreadInformation getInfo() -> bs
com.volmit.wormholes.util.ParameterAdapter -> com.volmit.wormholes.src.distributed:
    10:13:void <init>() -> <init>
    24:29:java.lang.String adapt(java.lang.String) -> Integer
    java.lang.String onParameterRequested(java.lang.String) -> commodo
com.volmit.wormholes.util.ParticleEffect -> com.volmit.wormholes.src.dot:
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_NORMAL -> jU
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_LARGE -> jV
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_HUGE -> jW
    com.volmit.wormholes.util.ParticleEffect FIREWORKS_SPARK -> jX
    com.volmit.wormholes.util.ParticleEffect WATER_BUBBLE -> jY
    com.volmit.wormholes.util.ParticleEffect WATER_SPLASH -> jZ
    com.volmit.wormholes.util.ParticleEffect WATER_WAKE -> ka
    com.volmit.wormholes.util.ParticleEffect SUSPENDED -> kb
    com.volmit.wormholes.util.ParticleEffect SUSPENDED_DEPTH -> kc
    com.volmit.wormholes.util.ParticleEffect CRIT -> kd
    com.volmit.wormholes.util.ParticleEffect CRIT_MAGIC -> ke
    com.volmit.wormholes.util.ParticleEffect SMOKE_NORMAL -> kf
    com.volmit.wormholes.util.ParticleEffect SMOKE_LARGE -> kg
    com.volmit.wormholes.util.ParticleEffect SPELL -> kh
    com.volmit.wormholes.util.ParticleEffect SPELL_INSTANT -> ki
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB -> kj
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB_AMBIENT -> kk
    com.volmit.wormholes.util.ParticleEffect SPELL_WITCH -> kl
    com.volmit.wormholes.util.ParticleEffect DRIP_WATER -> km
    com.volmit.wormholes.util.ParticleEffect DRIP_LAVA -> kn
    com.volmit.wormholes.util.ParticleEffect VILLAGER_ANGRY -> ko
    com.volmit.wormholes.util.ParticleEffect VILLAGER_HAPPY -> kp
    com.volmit.wormholes.util.ParticleEffect TOWN_AURA -> kq
    com.volmit.wormholes.util.ParticleEffect NOTE -> kr
    com.volmit.wormholes.util.ParticleEffect PORTAL -> ks
    com.volmit.wormholes.util.ParticleEffect ENCHANTMENT_TABLE -> kt
    com.volmit.wormholes.util.ParticleEffect FLAME -> ku
    com.volmit.wormholes.util.ParticleEffect LAVA -> kv
    com.volmit.wormholes.util.ParticleEffect FOOTSTEP -> kw
    com.volmit.wormholes.util.ParticleEffect CLOUD -> kx
    com.volmit.wormholes.util.ParticleEffect REDSTONE -> ky
    com.volmit.wormholes.util.ParticleEffect SNOWBALL -> kz
    com.volmit.wormholes.util.ParticleEffect SNOW_SHOVEL -> kA
    com.volmit.wormholes.util.ParticleEffect SLIME -> kB
    com.volmit.wormholes.util.ParticleEffect HEART -> kC
    com.volmit.wormholes.util.ParticleEffect BARRIER -> kD
    com.volmit.wormholes.util.ParticleEffect ITEM_CRACK -> kE
    com.volmit.wormholes.util.ParticleEffect BLOCK_CRACK -> kF
    com.volmit.wormholes.util.ParticleEffect BLOCK_DUST -> kG
    com.volmit.wormholes.util.ParticleEffect WATER_DROP -> kH
    com.volmit.wormholes.util.ParticleEffect ITEM_TAKE -> kI
    com.volmit.wormholes.util.ParticleEffect MOB_APPEARANCE -> kJ
    com.volmit.wormholes.util.ParticleEffect DRAGON_BREATH -> kK
    com.volmit.wormholes.util.ParticleEffect END_ROD -> kL
    com.volmit.wormholes.util.ParticleEffect DAMAGE_INDICATOR -> kM
    com.volmit.wormholes.util.ParticleEffect SWEEP_ATTACK -> kN
    java.util.Map NAME_MAP -> kO
    java.util.Map ID_MAP -> kP
    java.lang.String name -> name
    int id -> id
    int requiredVersion -> kQ
    java.util.List properties -> kR
    com.volmit.wormholes.util.ParticleEffect[] ENUM$VALUES -> kS
    53:468:void <clinit>() -> <clinit>
    482:488:void <init>(java.lang.String,int,java.lang.String,int,int,com.volmit.wormholes.util.ParticleEffect$ParticleProperty[]) -> <init>
    497:497:java.lang.String getName() -> getName
    507:507:int getId() -> getId
    517:517:int getRequiredVersion() -> bt
    527:527:boolean hasProperty(com.volmit.wormholes.util.ParticleEffect$ParticleProperty) -> Lorem
    538:542:boolean isSupported() -> isSupported
    554:562:com.volmit.wormholes.util.ParticleEffect fromName(java.lang.String) -> ante
    574:582:com.volmit.wormholes.util.ParticleEffect fromId(int) -> imperdiet
    594:595:boolean isWater(org.bukkit.Location) -> posuere
    608:618:boolean isLongDistance(org.bukkit.Location,java.util.List) -> Lorem
    632:632:boolean isDataCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> Lorem
    646:646:boolean isColorCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor) -> Lorem
    682:699:void display(float,int,org.bukkit.Location,double) -> Lorem
    734:747:void display(float,int,org.bukkit.Location,java.util.List) -> Lorem
    781:782:void display(float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    810:827:void display(org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    854:871:void display(org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    896:897:void display(org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    920:933:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,double) -> Lorem
    956:969:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,java.util.List) -> Lorem
    990:991:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1027:1043:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,double) -> Lorem
    1078:1091:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,java.util.List) -> Lorem
    1126:1127:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1154:1167:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    1193:1206:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    1231:1232:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    2133:2154:void phantom(org.bukkit.Location,int) -> ipsum
    1:1:com.volmit.wormholes.util.ParticleEffect[] values() -> values
    1:1:com.volmit.wormholes.util.ParticleEffect valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ParticleEffect$1 -> com.volmit.wormholes.src.dot$1:
    int[] val$in -> kT
    org.bukkit.Location val$l -> incentivize
    1:2135:void <init>(int,int[],org.bukkit.Location) -> <init>
    2140:2152:void run() -> run
com.volmit.wormholes.util.ParticleEffect$BlockData -> com.volmit.wormholes.src.dot$Lorem:
    1388:1393:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$ItemData -> com.volmit.wormholes.src.dot$ipsum:
    1359:1360:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$NoteColor -> com.volmit.wormholes.src.dot$dolor:
    int note -> note
    1586:1597:void <init>(int) -> <init>
    1607:1607:float getValueX() -> bu
    1618:1618:float getValueY() -> bv
    1629:1629:float getValueZ() -> bw
com.volmit.wormholes.util.ParticleEffect$OrdinaryColor -> com.volmit.wormholes.src.dot$sit:
    int red -> red
    int green -> green
    int blue -> blue
    1459:1488:void <init>(int,int,int) -> <init>
    1498:1499:void <init>(org.bukkit.Color) -> <init>
    1508:1508:int getRed() -> getRed
    1518:1518:int getGreen() -> getGreen
    1528:1528:int getBlue() -> getBlue
    1539:1539:float getValueX() -> bu
    1550:1550:float getValueY() -> bv
    1561:1561:float getValueZ() -> bw
com.volmit.wormholes.util.ParticleEffect$ParticleColor -> com.volmit.wormholes.src.dot$amet:
    1407:1407:void <init>() -> <init>
    float getValueX() -> bu
    float getValueY() -> bv
    float getValueZ() -> bw
com.volmit.wormholes.util.ParticleEffect$ParticleColorException -> com.volmit.wormholes.src.dot$consectetur:
    long serialVersionUID -> serialVersionUID
    1684:1685:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleData -> com.volmit.wormholes.src.dot$adipiscing:
    org.bukkit.Material material -> iB
    byte data -> data
    int[] packetData -> kU
    1289:1294:void <init>(org.bukkit.Material,byte) -> <init>
    1303:1303:org.bukkit.Material getMaterial() -> getMaterial
    1313:1313:byte getData() -> getData
    1323:1323:int[] getPacketData() -> bx
    1333:1333:java.lang.String getPacketDataString() -> by
com.volmit.wormholes.util.ParticleEffect$ParticleDataException -> com.volmit.wormholes.src.dot$elit:
    long serialVersionUID -> serialVersionUID
    1657:1658:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket -> com.volmit.wormholes.src.dot$Morbi:
    int version -> version
    java.lang.Class enumParticle -> kV
    java.lang.reflect.Constructor packetConstructor -> kW
    java.lang.reflect.Method getHandle -> kX
    java.lang.reflect.Field playerConnection -> kY
    java.lang.reflect.Method sendPacket -> kZ
    boolean initialized -> initialized
    com.volmit.wormholes.util.ParticleEffect effect -> la
    float offsetX -> lb
    float offsetY -> lc
    float offsetZ -> ld
    float speed -> le
    int amount -> lf
    boolean longDistance -> lg
    com.volmit.wormholes.util.ParticleEffect$ParticleData data -> lh
    java.lang.Object packet -> li
    1770:1789:void <init>(com.volmit.wormholes.util.ParticleEffect,float,float,float,float,int,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1813:1814:void <init>(com.volmit.wormholes.util.ParticleEffect,org.bukkit.util.Vector,float,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1831:1836:void <init>(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor,boolean) -> <init>
    1852:1888:void initialize() -> initialize
    1897:1901:int getVersion() -> getVersion
    1913:1913:boolean isInitialized() -> isInitialized
    1926:1965:void initializePacket(org.bukkit.Location) -> molestie
    1982:1991:void sendTo(org.bukkit.Location,org.bukkit.entity.Player) -> Lorem
    2006:2014:void sendTo(org.bukkit.Location,java.util.List) -> ipsum
    2031:2045:void sendTo(org.bukkit.Location,double) -> ipsum
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketInstantiationException -> com.volmit.wormholes.src.dot$Morbi$Lorem:
    long serialVersionUID -> serialVersionUID
    2099:2100:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketSendingException -> com.volmit.wormholes.src.dot$Morbi$ipsum:
    long serialVersionUID -> serialVersionUID
    2126:2127:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$VersionIncompatibleException -> com.volmit.wormholes.src.dot$Morbi$dolor:
    long serialVersionUID -> serialVersionUID
    2071:2072:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleProperty -> com.volmit.wormholes.src.dot$pulvinar:
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_WATER -> lj
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_DATA -> lk
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty DIRECTIONAL -> ll
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty COLORABLE -> lm
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] ENUM$VALUES -> ln
    1243:1260:void <clinit>() -> <clinit>
    1243:1243:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] values() -> values
    1:1:com.volmit.wormholes.util.ParticleEffect$ParticleProperty valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ParticleEffect$ParticleVersionException -> com.volmit.wormholes.src.dot$vulputate:
    long serialVersionUID -> serialVersionUID
    1710:1711:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleManipulator -> com.volmit.wormholes.src.com:
    9:9:void <init>() -> <init>
com.volmit.wormholes.util.PhantomDialog -> com.volmit.wormholes.src.dynamic:
    boolean cancellable -> lo
    27:30:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    34:52:com.volmit.wormholes.util.Window close() -> bz
    62:62:boolean isCancellable() -> isCancellable
    67:69:com.volmit.wormholes.util.Dialog setCancellable(boolean) -> dictum
    76:76:void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
    81:81:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomDialog$1 -> com.volmit.wormholes.src.dynamic$1:
    com.volmit.wormholes.util.PhantomDialog this$0 -> lp
    1:43:void <init>(com.volmit.wormholes.util.PhantomDialog,java.lang.Integer) -> <init>
    47:48:void run() -> run
com.volmit.wormholes.util.PhantomEffect -> com.volmit.wormholes.src.business:
    10:10:void <init>() -> <init>
    15:15:com.volmit.wormholes.util.GList getEffects() -> key
    void play(org.bukkit.Location) -> Pellentesque
    25:25:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.PhantomElement -> com.volmit.wormholes.src.efficient:
    org.bukkit.Material type -> lq
    java.lang.Byte metadata -> lr
    java.lang.String title -> title
    com.volmit.wormholes.util.GList text -> ls
    java.lang.Short durability -> lt
    java.lang.Integer count -> lu
    com.volmit.wormholes.util.Slot slot -> lv
    org.bukkit.inventory.ItemStack stack -> lw
    boolean glowing -> lx
    java.util.UUID id -> ly
    38:50:void <init>(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.Slot) -> <init>
    71:94:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    108:109:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    125:126:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    142:143:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    159:160:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    178:179:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    197:198:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    218:219:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short,java.lang.Integer) -> <init>
    224:226:com.volmit.wormholes.util.Element addText(java.lang.String) -> platea
    232:232:org.bukkit.Material getType() -> getType
    238:240:com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    246:246:java.lang.Byte getMetadata() -> f
    252:254:com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    260:260:java.lang.String getTitle() -> getTitle
    266:268:com.volmit.wormholes.util.Element setTitle(java.lang.String) -> dictumst
    274:274:com.volmit.wormholes.util.GList getText() -> g
    280:282:com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    288:288:java.lang.Short getDurability() -> h
    294:296:com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    302:302:java.lang.Integer getCount() -> getCount
    308:310:com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    316:316:com.volmit.wormholes.util.Slot getSlot() -> i
    322:324:com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    331:348:org.bukkit.inventory.ItemStack getStack() -> k
    354:356:com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    362:362:com.volmit.wormholes.util.Element copy() -> j
    375:375:java.util.UUID getId() -> getId
    382:382:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    387:392:boolean equals(java.lang.Object) -> equals
    398:399:void setGlowing(boolean) -> Vestibulum
    404:404:boolean isGlowing() -> l
com.volmit.wormholes.util.PhantomElement$1 -> com.volmit.wormholes.src.efficient$1:
    com.volmit.wormholes.util.PhantomElement this$0 -> lz
    1:362:void <init>(com.volmit.wormholes.util.PhantomElement,org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    368:368:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.PhantomEvent -> com.volmit.wormholes.src.to:
    org.bukkit.event.HandlerList handlers -> lA
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    20:20:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    28:28:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
com.volmit.wormholes.util.PhantomHologram -> com.volmit.wormholes.src.enterprise:
    com.volmit.wormholes.util.GList meta -> lB
    java.lang.String text -> text
    org.bukkit.Location base -> lC
    double splitDistance -> lD
    org.bukkit.entity.Player exclusive -> lE
    27:34:void <init>(org.bukkit.Location) -> <init>
    39:39:org.bukkit.entity.Entity getHandle() -> m
    45:45:java.lang.String getDisplay() -> getDisplay
    51:53:void setLocation(org.bukkit.Location) -> setLocation
    58:59:void setTextLocation(org.bukkit.Location) -> at
    64:66:void setDisplay(java.lang.String) -> setDisplay
    74:113:void update() -> update
    118:125:void destroy() -> destroy
    130:130:org.bukkit.Location getLocation() -> getLocation
    135:135:double getSplitDistance() -> bA
    140:142:void setSplitDistance(double) -> in
    147:153:void setExclusive(org.bukkit.entity.Player) -> posuere
    158:158:org.bukkit.entity.Player getExclusive() -> n
com.volmit.wormholes.util.PhantomSelectDialog -> com.volmit.wormholes.src.extensible:
    com.volmit.wormholes.util.GMap bindings -> lF
    30:33:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    37:39:com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    44:49:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    55:55:void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.PhantomSpinner -> com.volmit.wormholes.src.frictionless:
    com.volmit.wormholes.util.ProgressSpinner s -> lG
    com.volmit.wormholes.util.ProgressSpinner c -> lH
    13:17:void <init>(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C) -> <init>
    22:22:java.lang.String toString() -> toString
com.volmit.wormholes.util.PhantomWindow -> com.volmit.wormholes.src.front:
    java.lang.Integer viewport -> lI
    java.lang.String title -> title
    com.volmit.wormholes.util.GList elements -> lJ
    org.bukkit.inventory.Inventory inventory -> inventory
    com.volmit.wormholes.util.Element background -> lK
    boolean open -> star
    org.bukkit.entity.Player viewer -> mollis
    java.util.UUID id -> ly
    39:56:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    61:65:com.volmit.wormholes.util.Window open() -> bB
    71:78:com.volmit.wormholes.util.Window close() -> bz
    84:88:void update() -> update
    93:113:com.volmit.wormholes.util.Window build() -> bC
    118:150:void rebuild() -> lobortis
    155:163:boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    169:169:boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    175:186:com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    192:197:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    203:205:com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    211:211:java.lang.String getTitle() -> getTitle
    217:219:com.volmit.wormholes.util.Window setTitle(java.lang.String) -> cursus
    225:225:com.volmit.wormholes.util.GList getElements() -> bD
    231:233:com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    239:239:org.bukkit.entity.Player getViewer() -> ligula
    245:245:org.bukkit.inventory.Inventory getInventory() -> getInventory
    251:251:java.util.UUID getId() -> getId
    257:257:com.volmit.wormholes.util.Element getBackground() -> bE
    263:265:com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    271:271:java.lang.Integer getViewport() -> bF
    277:279:com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    285:287:com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    293:293:boolean isOpen() -> isOpen
    299:304:void on(org.bukkit.event.inventory.InventoryCloseEvent) -> Lorem
    309:313:void on(org.bukkit.event.inventory.InventoryDragEvent) -> Lorem
    318:343:void on(org.bukkit.event.inventory.InventoryClickEvent) -> Lorem
    348:353:boolean equals(java.lang.Object) -> equals
    359:359:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    366:366:void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomWindow$1 -> com.volmit.wormholes.src.front$1:
    com.volmit.wormholes.util.PhantomWindow this$0 -> lL
    1:47:void <init>(com.volmit.wormholes.util.PhantomWindow,org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    53:53:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.Physical -> com.volmit.wormholes.src.global:
    org.bukkit.Location getLocation() -> getLocation
    org.bukkit.util.Vector getVelocity() -> getVelocity
    org.bukkit.util.Vector getVolume() -> bG
    java.lang.Double getMass() -> bH
    java.lang.Double getDensity() -> bI
    void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    void influenceForce(org.bukkit.util.Vector) -> amet
com.volmit.wormholes.util.PhysicalObject -> com.volmit.wormholes.src.granular:
    org.bukkit.Location location -> suscipit
    org.bukkit.util.Vector velocity -> montes
    org.bukkit.util.Vector volume -> lM
    java.lang.Double mass -> lN
    29:35:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double) -> <init>
    47:48:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    52:52:org.bukkit.Location getLocation() -> getLocation
    57:57:org.bukkit.util.Vector getVelocity() -> getVelocity
    62:62:org.bukkit.util.Vector getVolume() -> bG
    67:67:java.lang.Double getMass() -> bH
    72:72:java.lang.Double getDensity() -> bI
    77:82:void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    87:89:void influenceForce(org.bukkit.util.Vector) -> amet
com.volmit.wormholes.util.PlayerDataHandler -> com.volmit.wormholes.src.holistic:
    17:18:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    com.volmit.wormholes.util.Configurable onLoad(org.bukkit.entity.Player) -> imperdiet
    void onSave(org.bukkit.entity.Player) -> turpis
    1:1:void onSave(java.lang.Object) -> consectetur
    1:1:com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
com.volmit.wormholes.util.PlayerDataSet -> com.volmit.wormholes.src.impactful:
    java.io.File folder -> lO
    23:26:void <init>(java.io.File) -> <init>
    40:42:void load(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> Lorem
    56:58:void save(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> ipsum
com.volmit.wormholes.util.PlayerEvent -> com.volmit.wormholes.src.innovative:
    org.bukkit.entity.Player player -> player
    14:17:void <init>(org.bukkit.entity.Player) -> <init>
    26:26:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.util.PlayerHud -> com.volmit.wormholes.src.integrated:
    boolean closeOnMove -> lP
    org.bukkit.Location last -> Mauris
    14:18:void <init>(org.bukkit.entity.Player,boolean) -> <init>
    22:23:void <init>(org.bukkit.entity.Player) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> cross
    37:51:void onUpdateInternal() -> cutting
com.volmit.wormholes.util.PlayerInventorySet -> com.volmit.wormholes.src.interactive:
    org.bukkit.entity.Player p -> grow
    org.bukkit.inventory.ItemStack[] contents -> lQ
    11:15:void <init>(org.bukkit.entity.Player) -> <init>
    19:35:void pop() -> pop
    39:42:void push() -> push
com.volmit.wormholes.util.PlayerScrollEvent -> com.volmit.wormholes.src.intuitive:
    int from -> lR
    int to -> lS
    int distance -> lT
    int movement -> lU
    com.volmit.wormholes.util.ScrollDirection direction -> lV
    15:47:void <init>(org.bukkit.entity.Player,int,int) -> <init>
    51:51:int getFrom() -> bJ
    56:56:int getTo() -> bK
    61:61:int getDistance() -> bL
    66:66:int getMovement() -> bM
    71:71:com.volmit.wormholes.util.ScrollDirection getDirection() -> bN
com.volmit.wormholes.util.PluginMessage -> com.volmit.wormholes.src.killer:
    com.google.common.io.ByteArrayDataOutput out -> lW
    org.bukkit.entity.Player player -> player
    org.bukkit.plugin.Plugin plugin -> plugin
    28:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String[]) -> <init>
    46:52:void send() -> send
com.volmit.wormholes.util.PluginUtil -> com.volmit.wormholes.src.leading:
    34:34:void <init>() -> <init>
    45:49:void enable(org.bukkit.plugin.Plugin) -> ipsum
    56:60:void enableAll() -> bO
    70:74:void disable(org.bukkit.plugin.Plugin) -> dolor
    81:85:void disableAll() -> bP
    96:96:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> sit
    110:116:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> Lorem
    128:135:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> suscipit
    145:151:java.util.List getPluginNames(boolean) -> non
    163:168:java.lang.String getPluginVersion(java.lang.String) -> Mauris
    182:204:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> amet
    219:298:java.util.List findByCommand(java.lang.String) -> mollis
    319:320:void load(org.bukkit.plugin.Plugin) -> consectetur
    324:346:java.lang.String getPluginFileName(java.lang.String) -> convallis
    359:409:boolean load(java.lang.String) -> load
    421:426:void reload(org.bukkit.plugin.Plugin) -> adipiscing
    433:437:void reloadAll() -> bQ
    449:577:void unload(org.bukkit.plugin.Plugin) -> elit
    584:707:void unloadNoGC(org.bukkit.plugin.Plugin) -> Morbi
    712:712:org.bukkit.plugin.Plugin getAnyPlugin() -> bR
com.volmit.wormholes.util.Polygon -> com.volmit.wormholes.src.magnetic:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Priority -> com.volmit.wormholes.src.mission:
    com.volmit.wormholes.util.Priority LOWEST -> lX
    com.volmit.wormholes.util.Priority VERY_LOW -> lY
    com.volmit.wormholes.util.Priority LOW -> lZ
    com.volmit.wormholes.util.Priority NORMAL -> ma
    com.volmit.wormholes.util.Priority HIGH -> mb
    com.volmit.wormholes.util.Priority VERY_HIGH -> mc
    com.volmit.wormholes.util.Priority HIGHEST -> md
    com.volmit.wormholes.util.Priority[] ENUM$VALUES -> me
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    9:9:com.volmit.wormholes.util.GList topDown() -> bS
    1:1:com.volmit.wormholes.util.Priority[] values() -> values
    1:1:com.volmit.wormholes.util.Priority valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ProgressSpinner -> com.volmit.wormholes.src.critical:
    java.lang.String[] chars -> mf
    int index -> index
    com.volmit.wormholes.util.ProgressSpinner DEFAULT -> mg
    com.volmit.wormholes.util.ProgressSpinner NETWORK -> mh
    com.volmit.wormholes.util.ProgressSpinner CIRCLES -> mj
    com.volmit.wormholes.util.ProgressSpinner RANDOMS -> mk
    com.volmit.wormholes.util.ProgressSpinner MERGERS -> ml
    70:75:void <clinit>() -> <clinit>
    25:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> bT
    65:65:int getIndex() -> getIndex
com.volmit.wormholes.util.QueueMode -> com.volmit.wormholes.src.next:
    com.volmit.wormholes.util.QueueMode ROUND_ROBIN -> mm
    com.volmit.wormholes.util.QueueMode SMALLEST -> mn
    com.volmit.wormholes.util.QueueMode[] ENUM$VALUES -> mo
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.QueueMode[] values() -> values
    1:1:com.volmit.wormholes.util.QueueMode valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.RTEX -> com.volmit.wormholes.src.generation:
    com.volmit.wormholes.util.GList extras -> mp
    18:21:void <init>(com.volmit.wormholes.util.ColoredString[]) -> <init>
    30:44:com.volmit.wormholes.util.JSONObject toJSON() -> obfuscate
com.volmit.wormholes.util.RTX -> com.volmit.wormholes.src.one:
    com.volmit.wormholes.util.JSONArray base -> mq
    18:22:void <init>() -> <init>
    32:33:void add(com.volmit.wormholes.util.JSONObject) -> amet
    43:47:void addText(java.lang.String) -> addText
    59:63:void addText(java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    77:86:void addTextHover(java.lang.String,com.volmit.wormholes.util.RTEX,com.volmit.wormholes.util.C) -> Lorem
    100:110:void addTextSuggestedCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    124:134:void addTextOpenURL(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    150:160:void addTextFireCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    178:192:void addTextSuggestedHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    208:222:void addTextOpenHoverURL(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    238:252:void addTextFireHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    261:261:com.volmit.wormholes.util.JSONArray toJSON() -> aw
    272:273:void tellRawTo(org.bukkit.entity.Player) -> molestie
com.volmit.wormholes.util.RayTrace -> com.volmit.wormholes.src.open:
    org.bukkit.Location start -> mr
    org.bukkit.util.Vector direction -> nascetur
    java.lang.Double maxDistance -> ms
    java.lang.Double distanceCovered -> mt
    java.lang.Double step -> mu
    java.lang.Boolean stop -> mv
    36:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> bU
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> adipiscing
    89:89:org.bukkit.Location getStart() -> bV
    94:95:void setStart(org.bukkit.Location) -> odio
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> bW
    114:115:void setMaxDistance(java.lang.Double) -> dolor
    119:119:java.lang.Double getDistanceCovered() -> bX
    124:125:void setDistanceCovered(java.lang.Double) -> sit
    129:129:java.lang.Double getStep() -> bY
    134:135:void setStep(java.lang.Double) -> amet
com.volmit.wormholes.util.RedstonePower -> com.volmit.wormholes.src.source:
    byte power -> mw
    18:21:void <init>(byte) -> <init>
    30:40:byte getPower() -> bZ
    51:52:void setPower(byte) -> adipiscing
com.volmit.wormholes.util.ReflectionUtils -> com.volmit.wormholes.src.out:
    33:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Class[]) -> Lorem
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> Lorem
    156:156:java.lang.Object instantiateObject(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Object[]) -> Lorem
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> Lorem
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> Lorem
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> Lorem
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> Lorem
    360:360:java.lang.reflect.Field getField(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> Lorem
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> Lorem
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> Lorem
    509:510:void setValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> Lorem
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> Lorem
com.volmit.wormholes.util.ReflectionUtils$DataType -> com.volmit.wormholes.src.out$Lorem:
    com.volmit.wormholes.util.ReflectionUtils$DataType BYTE -> mx
    com.volmit.wormholes.util.ReflectionUtils$DataType SHORT -> my
    com.volmit.wormholes.util.ReflectionUtils$DataType INTEGER -> mz
    com.volmit.wormholes.util.ReflectionUtils$DataType LONG -> mA
    com.volmit.wormholes.util.ReflectionUtils$DataType CHARACTER -> mB
    com.volmit.wormholes.util.ReflectionUtils$DataType FLOAT -> mC
    com.volmit.wormholes.util.ReflectionUtils$DataType DOUBLE -> mD
    com.volmit.wormholes.util.ReflectionUtils$DataType BOOLEAN -> mE
    java.util.Map CLASS_MAP -> mF
    java.lang.Class primitive -> mG
    java.lang.Class reference -> mH
    com.volmit.wormholes.util.ReflectionUtils$DataType[] ENUM$VALUES -> mI
    632:646:void <clinit>() -> <clinit>
    656:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> ca
    679:679:java.lang.Class getReference() -> cb
    691:691:com.volmit.wormholes.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> dolor
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> sit
    718:719:java.lang.Class getReference(java.lang.Class) -> amet
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> Lorem
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> ipsum
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> Lorem
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> ipsum
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> ipsum
    1:1:com.volmit.wormholes.util.ReflectionUtils$DataType[] values() -> values
    1:1:com.volmit.wormholes.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ReflectionUtils$PackageType -> com.volmit.wormholes.src.out$ipsum:
    com.volmit.wormholes.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> mJ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT -> mK
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> mL
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> mM
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> mN
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> mO
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> mP
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> mQ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> mR
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> mS
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> mT
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> mU
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> mV
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> mW
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> mX
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> mY
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> mZ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> na
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> nb
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> nc
    java.lang.String path -> path
    com.volmit.wormholes.util.ReflectionUtils$PackageType[] ENUM$VALUES -> nd
    548:550:void <clinit>() -> <clinit>
    560:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    1:1:com.volmit.wormholes.util.ReflectionUtils$PackageType[] values() -> values
    1:1:com.volmit.wormholes.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Registrar -> com.volmit.wormholes.src.the:
    com.volmit.wormholes.util.RegistrarType value() -> cc
com.volmit.wormholes.util.RegistrarType -> com.volmit.wormholes.src.box:
    com.volmit.wormholes.util.RegistrarType AUTO -> ne
    com.volmit.wormholes.util.RegistrarType MANUAL -> nf
    com.volmit.wormholes.util.RegistrarType[] ENUM$VALUES -> ng
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.RegistrarType[] values() -> values
    1:1:com.volmit.wormholes.util.RegistrarType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.RootedHud -> com.volmit.wormholes.src.plug:
    org.bukkit.Location track -> nh
    double maxDist -> cN
    14:18:void <init>(org.bukkit.entity.Player,org.bukkit.Location,double) -> <init>
    22:23:void <init>(org.bukkit.entity.Player,org.bukkit.Location) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> cross
    37:43:void onUpdateInternal() -> cutting
com.volmit.wormholes.util.S -> com.volmit.wormholes.src.play:
    5:15:void <init>() -> <init>
    void sync() -> sync
com.volmit.wormholes.util.S$1 -> com.volmit.wormholes.src.play$1:
    com.volmit.wormholes.util.S this$0 -> ni
    1:7:void <init>(com.volmit.wormholes.util.S) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.SR -> com.volmit.wormholes.src.proactive:
    java.lang.Object t -> nj
    boolean f -> f
    5:32:void <init>() -> <init>
    36:36:java.lang.Object get() -> get
    java.lang.Object sync() -> cd
    5:5:void access$0(com.volmit.wormholes.util.SR,java.lang.Object) -> Lorem
    6:6:void access$1(com.volmit.wormholes.util.SR,boolean) -> Lorem
com.volmit.wormholes.util.SR$1 -> com.volmit.wormholes.src.proactive$1:
    com.volmit.wormholes.util.SR this$0 -> nk
    1:10:void <init>(com.volmit.wormholes.util.SR) -> <init>
    15:17:void run() -> run
com.volmit.wormholes.util.SYM -> com.volmit.wormholes.src.real:
    char QUOTE_LEFT -> nl
    char QUOTE_RIGHT -> nm
    char QUOTE_SINGLE_LEFT -> nn
    char QUOTE_SINGLE_RIGHT -> no
    char DEGREE_CELCIUS -> np
    char DEGREE_FAHRENHEIT -> nq
    char BRACKET_LEFT -> nr
    char BRACKET_RIGHT -> ns
    char BRACKET_SHELL_LEFT -> nt
    char BRACKET_SHELL_RIGHT -> nu
    char ARROW_LEFT -> nv
    char ARROW_UP -> nw
    char ARROW_RIGHT -> nx
    char ARROW_DOWN -> ny
    char ARROW_DOUBLE_LEFT -> nz
    char ARROW_DOUBLE_UP -> nA
    char ARROW_DOUBLE_RIGHT -> nB
    char ARROW_DOUBLE_DOWN -> nC
    char ARROW_LEFT_RIGHT -> nD
    char ARROW_UP_DOWN -> nE
    char ARROW_UP_LEFT -> nF
    char ARROW_UP_RIGHT -> nG
    char ARROW_DOWN_RIGHT -> nH
    char ARROW_DOWN_LEFT -> nI
    char SYMBOL_SNOWFLAKE -> nJ
    char SYMBOL_HEART -> nK
    char SYMBOL_COPYRIGHT -> nL
    char SYMBOL_REGISTERED -> nM
    char SYMBOL_WARNING -> nN
    char SYMBOL_DIAMOND -> nO
    char SYMBOL_NIB -> nP
    char SYMBOL_CUT -> nQ
    char SYMBOL_OHM -> nR
    char SYMBOL_GEAR -> nS
    char SYMBOL_PENCIL -> nT
    char SYMBOL_SMILE -> nU
    char SYMBOL_RADIOACTIVE -> nV
    char SYMBOL_PEACE -> nW
    char SYMBOL_FEMALE -> nX
    char SYMBOL_MALE -> nY
    char SYMBOL_KING -> nZ
    char SYNBOL_QUEEN -> oa
    char SYMBOL_CASTLE -> ob
    char SYMBOL_HORSE -> oc
    char SYMBOL_CLOVER -> od
    char SYMBOL_FLAG -> oe
    char SYMBOL_VOLTAGE -> og
    char SYMBOL_EGG -> oh
    char SHAPE_CIRCLE -> oi
    char SHAPE_SQUARE -> oj
    char SHAPE_TRIANGLE -> ok
    char SHAPE_DIAMOND -> ol
    char SHAPE_PENTAGON -> om
    char SHAPE_HEXAGON -> on
    char SHAPE_HEXAGON_HORIZONTAL -> oo
    char SHAPE_ELIPSE -> op
    11:11:void <init>() -> <init>
    83:99:void printSymbols(org.bukkit.entity.Player) -> Nullam
com.volmit.wormholes.util.ScrollDirection -> com.volmit.wormholes.src.time:
    com.volmit.wormholes.util.ScrollDirection UP -> oq
    com.volmit.wormholes.util.ScrollDirection DOWN -> or
    com.volmit.wormholes.util.ScrollDirection[] ENUM$VALUES -> os
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.ScrollDirection[] values() -> values
    1:1:com.volmit.wormholes.util.ScrollDirection valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.ScrollingText -> com.volmit.wormholes.src.revolutionary:
    java.lang.String text -> text
    int shift -> ot
    8:12:void <init>(java.lang.String) -> <init>
    14:18:void <init>() -> <init>
    22:23:void shiftLeft(int) -> turpis
    27:28:void shiftRight(int) -> Nullam
    32:32:java.lang.String getText() -> getText
    37:38:void setText(java.lang.String) -> setText
    42:42:int getShift() -> getShift
    47:48:void setShift(int) -> vehicula
    53:65:java.lang.String toString() -> toString
com.volmit.wormholes.util.SelectDialog -> com.volmit.wormholes.src.rich:
    com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.Sequencer -> com.volmit.wormholes.src.robust:
    void add(com.volmit.wormholes.util.Audible,int) -> Lorem
    boolean isPlaying() -> isPlaying
    void setPlayHead(int) -> porta
    int getLength() -> getLength
    int getPlayHead() -> ce
com.volmit.wormholes.util.Serializer -> com.volmit.wormholes.src.scalable:
    21:21:void <init>() -> <init>
    34:40:byte[] serialize(java.io.Serializable) -> serialize
    56:61:java.io.Serializable deserialize(byte[]) -> vulputate
    76:79:void serializeToFile(java.io.Serializable,java.io.File) -> Lorem
    94:98:java.io.Serializable deserializeFromFile(java.io.File) -> adipiscing
com.volmit.wormholes.util.Shape -> com.volmit.wormholes.src.seamless:
    org.bukkit.Location location -> suscipit
    org.bukkit.util.Vector offset -> ridiculus
    org.bukkit.util.Vector size -> ou
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> a
    90:94:org.bukkit.Location randomLocation() -> cf
    104:104:org.bukkit.Location randomSurface() -> cg
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> condimentum
    129:129:org.bukkit.util.Vector getSize() -> ch
com.volmit.wormholes.util.ShockEffect -> com.volmit.wormholes.src.sexy:
    java.lang.Float power -> ov
    10:13:void <init>(java.lang.Float) -> <init>
    17:27:void play(org.bukkit.Location,org.bukkit.util.Vector) -> dolor
    31:31:com.volmit.wormholes.util.LineParticleManipulator getArm() -> ci
com.volmit.wormholes.util.ShockEffect$1 -> com.volmit.wormholes.src.sexy$1:
    com.volmit.wormholes.util.ShockEffect this$0 -> ow
    1:31:void <init>(com.volmit.wormholes.util.ShockEffect) -> <init>
    36:37:void play(org.bukkit.Location) -> Pellentesque
com.volmit.wormholes.util.ShortTag -> com.volmit.wormholes.src.sticky:
    short value -> value
    54:56:void <init>(java.lang.String,short) -> <init>
    60:60:java.lang.Short getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.SkinErrorException -> com.volmit.wormholes.src.strategic:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.SkinProperties -> com.volmit.wormholes.src.synergistic:
    java.lang.String uvd -> ox
    java.lang.String value -> value
    java.lang.String signature -> signature
    15:33:void <init>(java.util.UUID) -> <init>
    38:59:com.volmit.wormholes.util.JSONObject get() -> cj
    64:64:com.comphenix.protocol.wrappers.WrappedSignedProperty sign() -> ck
com.volmit.wormholes.util.Slot -> com.volmit.wormholes.src.transparent:
    java.lang.Integer x -> dD
    java.lang.Integer y -> oy
    java.lang.Integer s -> oz
    23:43:void <init>(java.lang.Integer,java.lang.Integer) -> <init>
    51:56:void <init>(java.lang.Integer) -> <init>
    65:65:java.lang.Integer getSlot() -> cl
    75:75:java.lang.Integer getX() -> O
    85:85:java.lang.Integer getY() -> cm
    90:90:int getPosition(int,int) -> Morbi
    102:105:void setSlot(java.lang.Integer) -> amet
    116:129:void setX(java.lang.Integer) -> ipsum
    139:147:void setY(java.lang.Integer) -> consectetur
    152:152:java.lang.String toString() -> toString
    162:162:com.volmit.wormholes.util.Slot copy() -> cn
    168:173:int hashCode() -> hashCode
    179:235:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.SortedGMap -> com.volmit.wormholes.src.turn:
    long serialVersionUID -> serialVersionUID
    12:12:void <init>() -> <init>
    21:37:com.volmit.wormholes.util.GList k() -> ah
    45:61:com.volmit.wormholes.util.GList v() -> aj
com.volmit.wormholes.util.SphereParticleManipulator -> com.volmit.wormholes.src.key:
    11:11:void <init>() -> <init>
    29:52:void play(org.bukkit.Location,java.lang.Double,java.lang.Double) -> Lorem
com.volmit.wormholes.util.StringTag -> com.volmit.wormholes.src.ubiquitous:
    java.lang.String value -> value
    54:56:void <init>(java.lang.String,java.lang.String) -> <init>
    60:60:java.lang.String getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    1:1:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.SubCommand -> com.volmit.wormholes.src.user:
    java.lang.String sub -> oA
    com.volmit.wormholes.util.GList osub -> oB
    java.lang.String description -> description
    12:17:void <init>(java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
    25:25:java.lang.String getSub() -> co
    30:30:com.volmit.wormholes.util.GList getOsub() -> cp
    35:35:java.lang.String getDescription() -> getDescription
com.volmit.wormholes.util.SubGroup -> com.volmit.wormholes.src.centric:
    com.volmit.wormholes.util.GList subCommands -> oC
    java.lang.String root -> oD
    12:16:void <init>(java.lang.String) -> <init>
    20:21:void add(com.volmit.wormholes.util.SubCommand) -> Lorem
    25:33:void showHelp(org.bukkit.command.CommandSender) -> sit
    37:38:void sendLine(org.bukkit.command.CommandSender,com.volmit.wormholes.util.SubCommand) -> Lorem
    42:72:void hit(org.bukkit.command.CommandSender,java.lang.String[]) -> dolor
com.volmit.wormholes.util.SystemEffect -> com.volmit.wormholes.src.value:
    com.volmit.wormholes.util.GList effects -> oE
    19:22:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getEffects() -> key
    33:37:void play(org.bukkit.Location) -> Pellentesque
    42:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.TFColor -> com.volmit.wormholes.src.added:
    com.volmit.wormholes.util.C c -> aC
    7:10:void <init>(com.volmit.wormholes.util.C) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TFRemove -> com.volmit.wormholes.src.vertical:
    java.lang.String grep -> oF
    7:10:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TFReplace -> com.volmit.wormholes.src.viral:
    java.lang.String grep -> oF
    java.lang.String rep -> oG
    8:12:void <init>(java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TICK -> com.volmit.wormholes.src.virtual:
    long tick -> oH
    5:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.TXT -> com.volmit.wormholes.src.visionary:
    10:10:void <init>() -> <init>
    23:23:java.lang.String repeat(java.lang.String,int) -> repeat
    37:45:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    65:65:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    83:83:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    97:97:java.lang.String line(com.volmit.wormholes.util.C,int) -> Lorem
    111:111:java.lang.String underline(com.volmit.wormholes.util.C,int) -> ipsum
    133:138:java.lang.String getLine(com.volmit.wormholes.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> Lorem
com.volmit.wormholes.util.TabbedWindow -> com.volmit.wormholes.src.web:
    com.volmit.wormholes.util.GMap elements -> dH
    24:27:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    39:45:void bindTab(com.volmit.wormholes.util.Element,java.lang.Integer) -> Lorem
    55:67:void setTab(int) -> ultricies
com.volmit.wormholes.util.Tabled -> com.volmit.wormholes.src.enabled:
    java.lang.String value() -> value
com.volmit.wormholes.util.Tabulator -> com.volmit.wormholes.src.wireless:
    long serialVersionUID -> serialVersionUID
    int tabSize -> oI
    18:21:void <init>(int) -> <init>
    31:37:void <init>(java.util.Set,int) -> <init>
    47:53:void <init>(java.util.Collection,int) -> <init>
    63:69:void <init>(java.util.Iterator,int) -> <init>
    79:81:void <init>(java.lang.Object[],int) -> <init>
    92:100:void <init>(java.util.List,int) -> <init>
    109:109:int getTabCount() -> getTabCount
    121:126:int getFirstIndex(int) -> vestibulum
    138:143:int getLastIndex(int) -> felis
    155:162:com.volmit.wormholes.util.GList getTab(int) -> nec
    174:174:boolean hasTab(int) -> tristique
    184:184:int getTabSize() -> getTabSize
    195:196:void setTabSize(int) -> setTabSize
com.volmit.wormholes.util.Tag -> com.volmit.wormholes.src.world:
    java.lang.String name -> name
    52:54:void <init>(java.lang.String) -> <init>
    61:61:java.lang.String getName() -> getName
    java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.TagProvider -> com.volmit.wormholes.src.class:
    java.lang.String getChatTag() -> cq
    java.lang.String getChatTagHover() -> cr
com.volmit.wormholes.util.Task -> com.volmit.wormholes.src.action:
    int taskx -> oJ
    com.volmit.wormholes.util.FinalInteger task -> oK
    java.lang.Boolean running -> oL
    10:10:void <clinit>() -> <clinit>
    20:32:void <init>(int) -> <init>
    void run() -> run
    42:45:void cancel() -> cancel
    54:54:boolean isRunning() -> isRunning
com.volmit.wormholes.util.Task$1 -> com.volmit.wormholes.src.action$1:
    com.volmit.wormholes.util.Task this$0 -> oM
    1:24:void <init>(com.volmit.wormholes.util.Task) -> <init>
    29:30:void run() -> run
com.volmit.wormholes.util.TaskLater -> com.volmit.wormholes.src.items:
    int taskx -> oJ
    10:10:void <clinit>() -> <clinit>
    17:18:void <init>() -> <init>
    26:36:void <init>(java.lang.Integer) -> <init>
    void run() -> run
com.volmit.wormholes.util.TaskLater$1 -> com.volmit.wormholes.src.items$1:
    com.volmit.wormholes.util.TaskLater this$0 -> oN
    1:28:void <init>(com.volmit.wormholes.util.TaskLater) -> <init>
    33:34:void run() -> run
com.volmit.wormholes.util.TaskManager -> com.volmit.wormholes.src.applications:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.TextBlock -> com.volmit.wormholes.src.architectures:
    com.volmit.wormholes.util.GList block -> oO
    7:10:void <init>() -> <init>
    14:15:void add(java.lang.String) -> add
    19:19:com.volmit.wormholes.util.GList getBlock() -> cs
com.volmit.wormholes.util.TextFilter -> com.volmit.wormholes.src.bandwidth:
    java.lang.String onFilter(java.lang.String) -> viverra
com.volmit.wormholes.util.TextFilterer -> com.volmit.wormholes.src.channels:
    com.volmit.wormholes.util.GList filters -> dignissim
    7:10:void <init>() -> <init>
    14:15:void registerFilter(com.volmit.wormholes.util.TextFilter) -> Lorem
    20:27:java.lang.String onFilter(java.lang.String) -> viverra
    32:32:java.lang.String filter(java.lang.String) -> lacus
com.volmit.wormholes.util.TextListener -> com.volmit.wormholes.src.communities:
    org.bukkit.entity.Player player -> player
    12:22:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    27:40:void on(org.bukkit.event.player.AsyncPlayerChatEvent) -> Lorem
    void onTextEntered(java.lang.String) -> eu
com.volmit.wormholes.util.TextListener$1 -> com.volmit.wormholes.src.communities$1:
    com.volmit.wormholes.util.TextListener this$0 -> oP
    org.bukkit.event.player.AsyncPlayerChatEvent val$e -> oQ
    1:31:void <init>(com.volmit.wormholes.util.TextListener,org.bukkit.event.player.AsyncPlayerChatEvent) -> <init>
    36:37:void run() -> run
com.volmit.wormholes.util.TextMap -> com.volmit.wormholes.src.content:
    java.lang.String name -> name
    com.volmit.wormholes.util.GMap mapping -> enable
    int height -> height
    11:16:void <init>(java.lang.String) -> <init>
    20:21:void addBlock(java.lang.Character,com.volmit.wormholes.util.TextBlock) -> Lorem
    25:25:java.lang.String getName() -> getName
    30:30:com.volmit.wormholes.util.GMap getMapping() -> dis
    35:75:void check() -> check
    79:98:java.lang.String[] build(java.lang.String) -> Phasellus
    103:125:java.lang.String[] build(java.lang.String,com.volmit.wormholes.util.C[]) -> dolor
    130:142:java.lang.String[] build(char,com.volmit.wormholes.util.C) -> Lorem
    147:159:java.lang.String[] build(char) -> pulvinar
com.volmit.wormholes.util.ThreadInformation -> com.volmit.wormholes.src.convergence:
    double ticksPerSecond -> oR
    int queuedSize -> oS
    boolean processing -> oT
    double utilization -> oU
    com.volmit.wormholes.util.Average ticksPerSecondAverage -> oV
    long tick -> oH
    int id -> id
    13:22:void <init>(int) -> <init>
    26:26:double getTicksPerSecond() -> ct
    31:33:void setTicksPerSecond(double) -> purus
    37:37:int getQueuedSize() -> cu
    42:43:void setQueuedSize(int) -> lacinia
    47:47:boolean isProcessing() -> cv
    52:53:void setProcessing(boolean) -> mi
    57:57:double getUtilization() -> cw
    62:63:void setUtilization(double) -> non
    67:67:double getTicksPerSecondAverage() -> cx
    72:72:long getTick() -> getTick
    77:78:void setTick(long) -> setTick
    82:82:long getTickLag() -> cy
    87:87:int getId() -> getId
com.volmit.wormholes.util.TickHandle -> com.volmit.wormholes.src.deliverables:
    com.volmit.wormholes.util.TickHandler value() -> cz
com.volmit.wormholes.util.TickHandler -> com.volmit.wormholes.src.commerce:
    com.volmit.wormholes.util.TickHandler SYNCED -> oW
    com.volmit.wormholes.util.TickHandler REALTIME -> oX
    com.volmit.wormholes.util.TickHandler[] ENUM$VALUES -> oY
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.TickHandler[] values() -> values
    1:1:com.volmit.wormholes.util.TickHandler valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.Ticked -> com.volmit.wormholes.src.markets:
    double value() -> value
com.volmit.wormholes.util.Timed -> com.volmit.wormholes.src.services:
    long time -> time
    java.lang.String id -> id
    com.volmit.wormholes.util.GList timers -> oZ
    9:14:void <init>(java.lang.String,long) -> <init>
    18:18:long getTime() -> getTime
    23:24:void setTime(long) -> setTime
    28:28:java.lang.String getId() -> getId
    33:34:void setId(java.lang.String) -> setId
    38:38:com.volmit.wormholes.util.GList getTimers() -> cA
    43:44:void setTimers(com.volmit.wormholes.util.GList) -> dictum
    48:48:double getTimeMS() -> cB
    53:53:double getTotalTimeMS() -> cC
    58:65:long getTotalTime() -> getTotalTime
    70:70:com.volmit.wormholes.util.GList toLines() -> cD
    75:75:com.volmit.wormholes.util.GList toLines(int,int) -> pulvinar
    80:90:com.volmit.wormholes.util.GList toLines(int,int,com.volmit.wormholes.util.GList) -> Lorem
    95:104:com.volmit.wormholes.util.Timed get(java.lang.String) -> accumsan
    109:110:void hit(java.lang.String,long) -> sit
    114:124:void hit(com.volmit.wormholes.util.Timed) -> Lorem
com.volmit.wormholes.util.Timer -> com.volmit.wormholes.src.tailers:
    long tns -> pa
    long cns -> pb
    17:21:void <init>() -> <init>
    28:29:void start() -> start
    36:38:void stop() -> stop
    47:47:long getTime() -> getTime
    57:57:long getLastRun() -> cE
com.volmit.wormholes.util.Title -> com.volmit.wormholes.src.experiences:
    java.lang.String title -> title
    java.lang.String subTitle -> pc
    java.lang.String action -> action
    java.lang.Integer fadeIn -> pd
    java.lang.Integer fadeOut -> pe
    java.lang.Integer stayTime -> pf
    23:28:void <init>() -> <init>
    46:54:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    70:77:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    91:97:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    109:117:void send(org.bukkit.entity.Player) -> vehicula
    121:121:java.lang.String getTitle() -> getTitle
    126:128:com.volmit.wormholes.util.Title setTitle(java.lang.String) -> egestas
    133:133:java.lang.String getSubTitle() -> cF
    138:140:com.volmit.wormholes.util.Title setSubTitle(java.lang.String) -> Praesent
    145:145:java.lang.String getAction() -> getAction
    150:152:com.volmit.wormholes.util.Title setAction(java.lang.String) -> eros
    157:157:java.lang.Integer getFadeIn() -> cG
    162:163:void setFadeIn(java.lang.Integer) -> adipiscing
    167:167:java.lang.Integer getFadeOut() -> cH
    172:173:void setFadeOut(java.lang.Integer) -> elit
    177:177:java.lang.Integer getStayTime() -> cI
    182:183:void setStayTime(java.lang.Integer) -> Morbi
    187:187:java.lang.Integer totalTime() -> cJ
com.volmit.wormholes.util.Transmission -> com.volmit.wormholes.src.eyeballs:
    7:12:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    16:16:java.lang.String getType() -> getType
    21:21:java.lang.String getDestination() -> Quisque
    26:26:java.lang.String getSource() -> getSource
    31:32:void setType(java.lang.String) -> setType
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> dolor
com.volmit.wormholes.util.VariableBlock -> com.volmit.wormholes.src.functionalities:
    com.volmit.wormholes.util.GList blocks -> pg
    14:17:void <init>() -> <init>
    21:24:void <init>(java.lang.String) -> <init>
    32:35:void <init>(com.volmit.wormholes.util.MaterialBlock[]) -> <init>
    47:48:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    58:59:void <init>(org.bukkit.Material) -> <init>
    68:68:com.volmit.wormholes.util.GList getBlocks() -> aggregate
    73:73:com.volmit.wormholes.util.MaterialBlock random() -> cK
    85:85:boolean is(com.volmit.wormholes.util.MaterialBlock) -> ipsum
    96:100:void addBlock(com.volmit.wormholes.util.MaterialBlock) -> dolor
    110:111:void removeBlock(com.volmit.wormholes.util.MaterialBlock) -> sit
    115:145:void fromString(java.lang.String) -> consectetur
    150:157:java.lang.String toString() -> toString
com.volmit.wormholes.util.VectorMath -> com.volmit.wormholes.src.infomediaries:
    int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis -> bg
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> ph
    14:14:void <init>() -> <init>
    18:28:org.bukkit.util.Vector scaleStatic(com.volmit.wormholes.util.Axis,org.bukkit.util.Vector,double) -> Lorem
    33:38:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> Lorem
    43:48:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> ipsum
    53:58:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> dolor
    63:65:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> elit
    70:73:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> ipsum
    78:131:org.bukkit.util.Vector rotate(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> ipsum
    136:136:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> Morbi
    141:141:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> pulvinar
    146:146:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> vulputate
    151:151:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> dictum
    156:156:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> Vestibulum
    161:161:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> in
    166:187:org.bukkit.util.Vector getAxis(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> sit
    192:192:double round(double,int) -> sit
    197:200:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> Lorem
    205:218:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> Lorem
    231:316:com.volmit.wormholes.util.GList split(org.bukkit.block.BlockFace) -> Lorem
    330:330:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> amet
    335:335:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> consectetur
    349:349:org.bukkit.util.Vector toVector(float,float) -> dolor
    362:363:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> Lorem
    377:380:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> Lorem
    391:406:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> purus
    418:421:double getSpeed(org.bukkit.util.Vector) -> non
    435:442:com.volmit.wormholes.util.GList shift(org.bukkit.util.Vector,com.volmit.wormholes.util.GList) -> Lorem
    454:496:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> mi
    510:522:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> Lorem
    536:548:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> ipsum
    562:571:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> dolor
    585:594:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> sit
    608:656:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> euismod
    14:14:int[] $SWITCH_TABLE$com$volmit$wormholes$util$Axis() -> paradigms
    14:14:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> cL
com.volmit.wormholes.util.VectorMath$1 -> com.volmit.wormholes.src.infomediaries$1:
    org.bukkit.util.Vector val$vector -> pi
    1:435:void <init>(org.bukkit.util.Vector) -> <init>
    440:440:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> Pellentesque
    1:1:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.VectorSchematic -> com.volmit.wormholes.src.infrastructures:
    com.volmit.wormholes.util.GMap schematic -> pj
    18:21:void <init>() -> <init>
    33:41:boolean contains(com.volmit.wormholes.util.MaterialBlock) -> amet
    53:53:boolean containsMultiple(com.volmit.wormholes.util.MaterialBlock) -> consectetur
    65:75:com.volmit.wormholes.util.GList find(com.volmit.wormholes.util.MaterialBlock) -> adipiscing
    87:119:com.volmit.wormholes.util.GMap match(org.bukkit.Location) -> facilisis
    129:129:com.volmit.wormholes.util.GMap getSchematic() -> cM
    135:138:int hashCode() -> hashCode
    144:168:boolean equals(java.lang.Object) -> equals
    176:177:void clear() -> clear
com.volmit.wormholes.util.VectorTrace -> com.volmit.wormholes.src.initiatives:
    org.bukkit.Location hit -> pk
    10:21:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    25:25:boolean canHit(org.bukkit.Location) -> In
    30:30:org.bukkit.Location getHit() -> cN
com.volmit.wormholes.util.VersionBukkit -> com.volmit.wormholes.src.interfaces:
    com.volmit.wormholes.util.VersionBukkit VU -> pl
    com.volmit.wormholes.util.VersionBukkit V7 -> pm
    com.volmit.wormholes.util.VersionBukkit V8 -> pn
    com.volmit.wormholes.util.VersionBukkit V9 -> po
    com.volmit.wormholes.util.VersionBukkit V11 -> pp
    com.volmit.wormholes.util.VersionBukkit V111 -> pq
    com.volmit.wormholes.util.VersionBukkit V112 -> pr
    com.volmit.wormholes.util.VersionBukkit[] ENUM$VALUES -> ps
    5:13:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> cO
    27:32:boolean uc() -> cP
    37:67:com.volmit.wormholes.util.VersionBukkit get() -> cQ
    1:1:com.volmit.wormholes.util.VersionBukkit[] values() -> values
    1:1:com.volmit.wormholes.util.VersionBukkit valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.VisualEffect -> com.volmit.wormholes.src.methodologies:
    com.volmit.wormholes.util.GList getEffects() -> key
    void play(org.bukkit.Location) -> Pellentesque
    void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.W -> com.volmit.wormholes.src.metrics:
    28:28:void <init>() -> <init>
    39:47:boolean visible(org.bukkit.block.Block) -> ipsum
    52:52:org.bukkit.DyeColor getColor(org.bukkit.Location) -> hac
    57:57:boolean isColorable(org.bukkit.block.Block) -> dolor
    63:79:org.bukkit.DyeColor getColor(org.bukkit.block.Block) -> sit
    85:101:void setColor(org.bukkit.block.Block,org.bukkit.DyeColor) -> Lorem
    113:116:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> Lorem
    127:138:org.bukkit.entity.Entity getEntity(int) -> Duis
    153:166:int count(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    183:183:boolean has(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> Lorem
    195:195:int getChunkX(org.bukkit.block.Block) -> amet
    207:207:int getChunkY(org.bukkit.block.Block) -> consectetur
    220:221:void dropXp(org.bukkit.Location,int) -> dolor
    232:232:int getChunkZ(org.bukkit.block.Block) -> adipiscing
    248:255:void take(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> ipsum
    271:279:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> Lorem
    284:291:com.volmit.wormholes.util.GList news(org.bukkit.Location) -> habitasse
    308:316:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> Lorem
    328:328:com.volmit.wormholes.util.GList getBlocks(org.bukkit.Chunk) -> sit
    340:350:com.volmit.wormholes.util.GList getChunklets(org.bukkit.Chunk) -> amet
    362:362:org.bukkit.World getSyncWorld(org.bukkit.World) -> ipsum
    374:381:com.volmit.wormholes.util.GList getChunklets(com.volmit.wormholes.util.GList) -> Vestibulum
    398:465:com.volmit.wormholes.util.MaterialBlock getMaterialBlock(java.lang.String) -> et
    479:491:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> Lorem
    506:507:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> Lorem
    524:525:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> Lorem
    539:540:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> Lorem
    557:558:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> Lorem
    571:572:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> Lorem
    587:588:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> Lorem
    604:614:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> Lorem
    626:633:com.volmit.wormholes.util.GList chunkFaces(org.bukkit.Chunk) -> consectetur
    645:654:com.volmit.wormholes.util.GList blockFaces(org.bukkit.block.Block) -> elit
    666:680:org.bukkit.Location simulateFall(org.bukkit.Location) -> platea
    694:706:com.volmit.wormholes.util.GList chunkRadius(org.bukkit.Chunk,int) -> Lorem
    720:732:com.volmit.wormholes.util.GList blockRadius(org.bukkit.block.Block,int) -> Lorem
    755:787:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> Lorem
    805:812:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> Lorem
    826:826:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    831:831:int chunkDistance(org.bukkit.Chunk,org.bukkit.Chunk) -> Lorem
    836:836:boolean isColored(org.bukkit.block.Block) -> Morbi
com.volmit.wormholes.util.W$1 -> com.volmit.wormholes.src.metrics$1:
    java.lang.Double val$doff -> iW
    org.bukkit.entity.Entity val$e -> pt
    org.bukkit.entity.Entity[] val$result -> iY
    1:768:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    773:784:void onTrace(org.bukkit.Location) -> adipiscing
com.volmit.wormholes.util.WarpEffect -> com.volmit.wormholes.src.mindshare:
    java.lang.Float power -> ov
    10:13:void <init>(java.lang.Float) -> <init>
    17:41:void play(org.bukkit.Location,org.bukkit.util.Vector) -> dolor
    45:47:com.volmit.wormholes.util.LineParticleManipulator getArm(int) -> tempor
com.volmit.wormholes.util.WarpEffect$1 -> com.volmit.wormholes.src.mindshare$1:
    com.volmit.wormholes.util.WarpEffect this$0 -> pu
    org.bukkit.util.Vector val$direction -> dot
    org.bukkit.Location[] val$start -> pv
    int val$kv -> pw
    1:28:void <init>(com.volmit.wormholes.util.WarpEffect,java.lang.Integer,org.bukkit.util.Vector,org.bukkit.Location[],int) -> <init>
    33:37:void run() -> run
com.volmit.wormholes.util.WarpEffect$2 -> com.volmit.wormholes.src.mindshare$2:
    com.volmit.wormholes.util.WarpEffect this$0 -> pu
    int[] val$kv -> px
    int val$m -> py
    1:47:void <init>(com.volmit.wormholes.util.WarpEffect,int[],int) -> <init>
    52:61:void play(org.bukkit.Location) -> Pellentesque
com.volmit.wormholes.util.WarpEffect$2$1 -> com.volmit.wormholes.src.mindshare$2$1:
    com.volmit.wormholes.util.WarpEffect$2 this$1 -> pz
    org.bukkit.Location val$l -> incentivize
    1:53:void <init>(com.volmit.wormholes.util.WarpEffect$2,java.lang.Integer,org.bukkit.Location) -> <init>
    58:59:void run() -> run
com.volmit.wormholes.util.Window -> com.volmit.wormholes.src.models:
    com.volmit.wormholes.util.Window open() -> bB
    void update() -> update
    com.volmit.wormholes.util.Window close() -> bz
    void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
    com.volmit.wormholes.util.Window build() -> bC
    boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Window setTitle(java.lang.String) -> cursus
    com.volmit.wormholes.util.GList getElements() -> bD
    com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    org.bukkit.entity.Player getViewer() -> ligula
    org.bukkit.inventory.Inventory getInventory() -> getInventory
    java.util.UUID getId() -> getId
    com.volmit.wormholes.util.Element getBackground() -> bE
    com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    java.lang.Integer getViewport() -> bF
    com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    boolean isOpen() -> isOpen
com.volmit.wormholes.util.WindowBorder -> com.volmit.wormholes.src.networks:
    com.volmit.wormholes.util.GMap directionSet -> pA
    15:22:void <init>() -> <init>
    35:37:com.volmit.wormholes.util.WindowBorder put(com.volmit.wormholes.util.BorderDirection,int) -> Lorem
    49:69:boolean isValid(com.volmit.wormholes.util.Slot) -> sit
com.volmit.wormholes.util.Worlds -> com.volmit.wormholes.src.niches:
    11:11:void <init>() -> <init>
    20:20:com.volmit.wormholes.util.GList getWorlds() -> cR
    32:32:boolean hasWorld(java.lang.String) -> sodales
    44:44:org.bukkit.World getWorld(java.lang.String) -> getWorld
com.volmit.wormholes.util.Wraith -> com.volmit.wormholes.src.paradigms:
    com.volmit.wormholes.util.ParallelPoolManager poolManager -> pB
    org.bukkit.plugin.Plugin instance -> pC
    12:12:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    16:17:void registerListener(org.bukkit.event.Listener) -> Lorem
    21:22:void callEvent(org.bukkit.event.Event) -> callEvent
    26:27:void unregisterListener(org.bukkit.event.Listener) -> ipsum
    42:42:int scheduleSyncRepeatingTask(int,int,java.lang.Runnable) -> Lorem
    56:56:int scheduleSyncTask(int,java.lang.Runnable) -> Lorem
    67:68:void cancelTask(int) -> cancelTask
com.volmit.wormholes.util.WrapperHandshakingClientSetProtocol -> com.volmit.wormholes.src.partnerships:
    com.comphenix.protocol.PacketType TYPE -> pD
    24:24:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getProtocolVersion() -> getProtocolVersion
    57:58:void setProtocolVersion(int) -> setProtocolVersion
    69:69:java.lang.String getServerAddressHostnameOrIp() -> cS
    80:81:void setServerAddressHostnameOrIp(java.lang.String) -> scelerisque
    92:92:int getServerPort() -> getServerPort
    103:104:void setServerPort(int) -> eget
    115:115:com.comphenix.protocol.PacketType$Protocol getNextState() -> cT
    126:127:void setNextState(com.comphenix.protocol.PacketType$Protocol) -> Lorem
com.volmit.wormholes.util.WrapperLoginClientEncryptionBegin -> com.volmit.wormholes.src.platforms:
    com.comphenix.protocol.PacketType TYPE -> pD
    23:23:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:byte[] getSharedSecret() -> getSharedSecret
    54:55:void setSharedSecret(byte[]) -> setSharedSecret
    64:64:byte[] getVerifyToken() -> getVerifyToken
    75:76:void setVerifyToken(byte[]) -> setVerifyToken
com.volmit.wormholes.util.WrapperLoginClientStart -> com.volmit.wormholes.src.portals:
    com.comphenix.protocol.PacketType TYPE -> pD
    24:24:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    55:56:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
com.volmit.wormholes.util.WrapperLoginServerDisconnect -> com.volmit.wormholes.src.relationships:
    com.comphenix.protocol.PacketType TYPE -> pD
    24:24:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> cU
    50:50:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> cV
    61:62:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
    67:68:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
com.volmit.wormholes.util.WrapperLoginServerEncryptionBegin -> com.volmit.wormholes.src.ROI:
    com.comphenix.protocol.PacketType TYPE -> pD
    24:24:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getServerId() -> getServerId
    57:58:void setServerId(java.lang.String) -> setServerId
    67:67:java.security.PublicKey getPublicKey() -> getPublicKey
    78:79:void setPublicKey(java.security.PublicKey) -> setPublicKey
    88:88:byte[] getVerifyToken() -> getVerifyToken
    99:100:void setVerifyToken(byte[]) -> setVerifyToken
com.volmit.wormholes.util.WrapperLoginServerSetCompression -> com.volmit.wormholes.src.synergies:
    com.comphenix.protocol.PacketType TYPE -> pD
    23:23:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getThreshold() -> getThreshold
    56:57:void setThreshold(int) -> setThreshold
com.volmit.wormholes.util.WrapperLoginServerSuccess -> com.volmit.wormholes.src.readiness:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    52:53:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
com.volmit.wormholes.util.WrapperPlayClientAbilities -> com.volmit.wormholes.src.schemas:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> cW
    41:42:void setInvulnurable(boolean) -> euismod
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> cX
    57:58:void setCanFly(boolean) -> Pellentesque
    61:61:boolean canInstantlyBuild() -> cY
    65:66:void setCanInstantlyBuild(boolean) -> at
    69:69:float getFlyingSpeed() -> cZ
    73:74:void setFlyingSpeed(float) -> elit
    77:77:float getWalkingSpeed() -> da
    81:82:void setWalkingSpeed(float) -> Morbi
com.volmit.wormholes.util.WrapperPlayClientArmAnimation -> com.volmit.wormholes.src.solutions:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
com.volmit.wormholes.util.WrapperPlayClientBlockDig -> com.volmit.wormholes.src.supply:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    60:60:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> dc
    64:65:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
    75:75:com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType getStatus() -> dd
    84:85:void setStatus(com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType) -> Lorem
com.volmit.wormholes.util.WrapperPlayClientBlockPlace -> com.volmit.wormholes.src.chains:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> de
    42:43:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    46:46:long getTimestamp() -> getTimestamp
    50:51:void setTimestamp(long) -> Pellentesque
com.volmit.wormholes.util.WrapperPlayClientBoatMove -> com.volmit.wormholes.src.systems:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:boolean getLeftOar() -> df
    42:43:void setLeftOar(boolean) -> iaculis
    46:46:boolean getRightOar() -> dg
    50:51:void setRightOar(boolean) -> urna
com.volmit.wormholes.util.WrapperPlayClientChat -> com.volmit.wormholes.src.technologies:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:java.lang.String getMessage() -> getMessage
    51:52:void setMessage(java.lang.String) -> setMessage
com.volmit.wormholes.util.WrapperPlayClientClientCommand -> com.volmit.wormholes.src.users:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand getAction() -> dh
    54:55:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand) -> Lorem
com.volmit.wormholes.util.WrapperPlayClientCloseWindow -> com.volmit.wormholes.src.vortals:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(int) -> semper
com.volmit.wormholes.util.WrapperPlayClientCustomPayload -> com.volmit.wormholes.src.obfuscate:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> velit
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> dj
    74:77:byte[] getContents() -> dk
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
com.volmit.wormholes.util.WrapperPlayClientEnchantItem -> com.volmit.wormholes.src.star:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(byte) -> elit
    65:65:int getEnchantment() -> dl
    74:75:void setEnchantment(int) -> aliquam
com.volmit.wormholes.util.WrapperPlayClientEntityAction -> com.volmit.wormholes.src.see:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction getAction() -> dn
    98:99:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction) -> Lorem
    109:109:int getJumpBoost() -> do
    118:119:void setJumpBoost(int) -> consequat
com.volmit.wormholes.util.WrapperPlayClientFlying -> com.volmit.wormholes.src.definition:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:boolean getOnGround() -> dp
    53:54:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayClientHeldItemSlot -> com.volmit.wormholes.src.show:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> neque
com.volmit.wormholes.util.WrapperPlayClientKeepAlive -> com.volmit.wormholes.src.verb:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> dq
    51:52:void setKeepAliveId(int) -> sagittis
com.volmit.wormholes.util.WrapperPlayClientLook -> com.volmit.wormholes.src.confuse:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getYaw() -> getYaw
    53:54:void setYaw(float) -> setYaw
    64:64:float getPitch() -> getPitch
    73:74:void setPitch(float) -> setPitch
    84:84:boolean getOnGround() -> dp
    93:94:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayClientPosition -> com.volmit.wormholes.src.baffle:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:boolean getOnGround() -> dp
    114:115:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayClientPositionLook -> com.volmit.wormholes.src.Relevance:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    145:145:boolean getOnGround() -> dp
    154:155:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayClientResourcePackStatus -> com.volmit.wormholes.src.A:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus getResult() -> dr
    56:57:void setResult(com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus) -> Lorem
com.volmit.wormholes.util.WrapperPlayClientSetCreativeSlot -> com.volmit.wormholes.src.ZComplexity:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getSlot() -> getSlot
    56:57:void setSlot(int) -> neque
    65:65:org.bukkit.inventory.ItemStack getClickedItem() -> ds
    74:75:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
com.volmit.wormholes.util.WrapperPlayClientSettings -> com.volmit.wormholes.src.Length:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getLocale() -> getLocale
    54:55:void setLocale(java.lang.String) -> setLocale
    65:65:int getViewDistance() -> getViewDistance
    74:75:void setViewDistance(byte) -> setViewDistance
    85:85:com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility getChatFlags() -> dt
    94:95:void setChatFlags(com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility) -> Lorem
    105:105:boolean getChatColours() -> du
    114:115:void setChatColours(boolean) -> setChatColours
    125:125:int getDisplayedSkinParts() -> dv
    134:135:void setDisplayedSkinParts(int) -> lorem
com.volmit.wormholes.util.WrapperPlayClientSpectate -> com.volmit.wormholes.src.lists:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:java.util.UUID getTargetPlayer() -> dw
    53:54:void setTargetPlayer(java.util.UUID) -> amet
com.volmit.wormholes.util.WrapperPlayClientSteerVehicle -> com.volmit.wormholes.src.blocks:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getSideways() -> dx
    53:54:void setSideways(float) -> pulvinar
    64:64:float getForward() -> dy
    73:74:void setForward(float) -> vulputate
    77:77:boolean isJump() -> dz
    81:82:void setJump(boolean) -> ac
    85:85:boolean isUnmount() -> dA
    89:90:void setUnmount(boolean) -> enim
com.volmit.wormholes.util.WrapperPlayClientTabComplete -> com.volmit.wormholes.src.Common:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:java.lang.String getText() -> getText
    52:53:void setText(java.lang.String) -> setText
    61:61:com.comphenix.protocol.wrappers.BlockPosition getHasPosition() -> dB
    70:71:void setHasPosition(com.comphenix.protocol.wrappers.BlockPosition) -> ipsum
    82:82:com.comphenix.protocol.wrappers.BlockPosition getLookedAtBlock() -> dC
    91:92:void setLookedAtBlock(com.comphenix.protocol.wrappers.BlockPosition) -> dolor
com.volmit.wormholes.util.WrapperPlayClientTeleportAccept -> com.volmit.wormholes.src.Informal:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getTeleportId() -> dD
    55:56:void setTeleportId(int) -> vel
com.volmit.wormholes.util.WrapperPlayClientTransaction -> com.volmit.wormholes.src.Synonyms:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(byte) -> elit
    65:65:short getActionNumber() -> dE
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> dF
    94:95:void setAccepted(boolean) -> posuere
com.volmit.wormholes.util.WrapperPlayClientUpdateSign -> com.volmit.wormholes.src.for:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    63:63:java.lang.String[] getLines() -> getLines
    72:78:void setLines(java.lang.String[]) -> in
com.volmit.wormholes.util.WrapperPlayClientUseEntity -> com.volmit.wormholes.src.b:
    com.comphenix.protocol.PacketType TYPE -> pD
    31:31:void <clinit>() -> <clinit>
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getTargetID() -> dG
    58:58:org.bukkit.entity.Entity getTarget(org.bukkit.World) -> sit
    68:68:org.bukkit.entity.Entity getTarget(com.comphenix.protocol.events.PacketEvent) -> ipsum
    77:78:void setTargetID(int) -> Quisque
    86:86:com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction getType() -> dH
    95:96:void setType(com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction) -> Lorem
    106:106:org.bukkit.util.Vector getTargetVector() -> dI
    115:116:void setTargetVector(org.bukkit.util.Vector) -> at
com.volmit.wormholes.util.WrapperPlayClientUseItem -> com.volmit.wormholes.src.c:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    57:58:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    61:61:com.comphenix.protocol.wrappers.EnumWrappers$Direction getFace() -> dJ
    65:66:void setFace(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> ipsum
    69:69:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> de
    73:74:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    85:85:float getCursorPositionX() -> dK
    94:95:void setCursorPositionX(float) -> dictum
    106:106:float getCursorPositionY() -> dL
    115:116:void setCursorPositionY(float) -> Vestibulum
    127:127:float getCursorPositionZ() -> dM
    136:137:void setCursorPositionZ(float) -> in
com.volmit.wormholes.util.WrapperPlayClientVehicleMove -> com.volmit.wormholes.src.d:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
com.volmit.wormholes.util.WrapperPlayClientWindowClick -> com.volmit.wormholes.src.f:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getWindowId() -> di
    55:56:void setWindowId(int) -> semper
    66:66:int getSlot() -> getSlot
    75:76:void setSlot(int) -> neque
    86:86:int getButton() -> getButton
    95:96:void setButton(int) -> congue
    107:107:short getActionNumber() -> dE
    116:117:void setActionNumber(short) -> ipsum
    125:125:org.bukkit.inventory.ItemStack getClickedItem() -> ds
    134:135:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
    138:138:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType getShift() -> dN
    142:143:void setShift(com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType) -> Lorem
com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType -> com.volmit.wormholes.src.f$Lorem:
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP -> pE
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_MOVE -> pF
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType SWAP -> pG
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType CLONE -> pH
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType THROW -> pI
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_CRAFT -> pJ
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP_ALL -> pK
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] ENUM$VALUES -> pL
    145:146:void <clinit>() -> <clinit>
    145:145:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] values() -> values
    1:1:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.WrapperPlayServerAbilities -> com.volmit.wormholes.src.g:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> cW
    41:42:void setInvulnurable(boolean) -> euismod
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> cX
    57:58:void setCanFly(boolean) -> Pellentesque
    61:61:boolean canInstantlyBuild() -> cY
    65:66:void setCanInstantlyBuild(boolean) -> at
    69:69:float getFlyingSpeed() -> cZ
    73:74:void setFlyingSpeed(float) -> elit
    77:77:float getWalkingSpeed() -> da
    81:82:void setWalkingSpeed(float) -> Morbi
com.volmit.wormholes.util.WrapperPlayServerAnimation -> com.volmit.wormholes.src.h:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getAnimation() -> dO
    97:98:void setAnimation(int) -> vitae
com.volmit.wormholes.util.WrapperPlayServerAttachEntity -> com.volmit.wormholes.src.i:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getVehicleId() -> dP
    97:98:void setVehicleId(int) -> ornare
com.volmit.wormholes.util.WrapperPlayServerBed -> com.volmit.wormholes.src.j:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    98:99:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerBlockAction -> com.volmit.wormholes.src.k:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    67:67:int getByte1() -> dQ
    76:77:void setByte1(int) -> Integer
    87:87:int getByte2() -> dR
    96:97:void setByte2(int) -> commodo
    107:107:org.bukkit.Material getBlockType() -> dS
    116:117:void setBlockType(org.bukkit.Material) -> dolor
com.volmit.wormholes.util.WrapperPlayServerBlockBreakAnimation -> com.volmit.wormholes.src.l:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:31:void <clinit>() -> <clinit>
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> dm
    59:60:void setEntityID(int) -> lectus
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    99:100:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    110:110:int getDestroyStage() -> dT
    119:120:void setDestroyStage(int) -> ante
com.volmit.wormholes.util.WrapperPlayServerBlockChange -> com.volmit.wormholes.src.m:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    58:59:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    68:68:org.bukkit.Location getBukkitLocation(org.bukkit.World) -> amet
    77:77:com.comphenix.protocol.wrappers.WrappedBlockData getBlockData() -> dU
    86:87:void setBlockData(com.comphenix.protocol.wrappers.WrappedBlockData) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerCamera -> com.volmit.wormholes.src.n:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCameraId() -> dV
    51:52:void setCameraId(int) -> cursus
com.volmit.wormholes.util.WrapperPlayServerChat -> com.volmit.wormholes.src.o:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedChatComponent getMessage() -> dW
    53:53:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> cV
    62:63:void setMessage(com.comphenix.protocol.wrappers.WrappedChatComponent) -> dolor
    70:71:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
    82:82:byte getPosition() -> getPosition
    91:92:void setPosition(byte) -> setPosition
com.volmit.wormholes.util.WrapperPlayServerCloseWindow -> com.volmit.wormholes.src.p:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(int) -> semper
com.volmit.wormholes.util.WrapperPlayServerCollect -> com.volmit.wormholes.src.q:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCollectedEntityId() -> dX
    51:52:void setCollectedEntityId(int) -> suscipit
    60:60:int getCollectorEntityId() -> dY
    69:70:void setCollectorEntityId(int) -> Mauris
com.volmit.wormholes.util.WrapperPlayServerCombatEvent -> com.volmit.wormholes.src.r:
    com.comphenix.protocol.PacketType TYPE -> pD
    int[] $SWITCH_TABLE$com$comphenix$protocol$wrappers$EnumWrappers$CombatEventType -> pM
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType getEvent() -> dZ
    56:57:void setEvent(com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType) -> Lorem
    62:66:int getDuration() -> getDuration
    70:75:void setDuration(int) -> setDuration
    80:84:int getPlayerID() -> ea
    88:93:void setPlayerId(int) -> mollis
    96:103:int getEntityID() -> dm
    109:116:void setEntityId(int) -> setEntityId
    122:126:java.lang.String getMessage() -> getMessage
    130:135:void setMessage(java.lang.String) -> setMessage
    25:25:int[] $SWITCH_TABLE$com$comphenix$protocol$wrappers$EnumWrappers$CombatEventType() -> eb
com.volmit.wormholes.util.WrapperPlayServerCustomPayload -> com.volmit.wormholes.src.s:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> velit
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> dj
    74:77:byte[] getContents() -> dk
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
com.volmit.wormholes.util.WrapperPlayServerCustomSoundEffect -> com.volmit.wormholes.src.t:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getSoundName() -> ec
    56:57:void setSoundName(java.lang.String) -> Donec
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> ed
    77:78:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    89:89:int getX() -> getX
    98:99:void setX(int) -> setX
    110:110:int getY() -> getY
    119:120:void setY(int) -> setY
    131:131:int getZ() -> getZ
    140:141:void setZ(int) -> setZ
    151:151:float getVolume() -> ee
    160:161:void setVolume(float) -> purus
    171:171:float getPitch() -> getPitch
    180:181:void setPitch(float) -> setPitch
com.volmit.wormholes.util.WrapperPlayServerEntity -> com.volmit.wormholes.src.u:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerEntityDestroy -> com.volmit.wormholes.src.v:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    55:55:int[] getEntityIDs() -> ef
    64:65:void setEntityIds(int[]) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerEntityEffect -> com.volmit.wormholes.src.w:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEffectID() -> eg
    97:98:void setEffectID(byte) -> Morbi
    106:106:byte getAmplifier() -> eh
    115:116:void setAmplifier(byte) -> pulvinar
    124:124:int getDuration() -> getDuration
    133:134:void setDuration(int) -> setDuration
    142:142:boolean getHideParticles() -> ei
    151:152:void setHideParticles(boolean) -> molestie
com.volmit.wormholes.util.WrapperPlayServerEntityEquipment -> com.volmit.wormholes.src.x:
    com.comphenix.protocol.PacketType TYPE -> pD
    31:32:void <clinit>() -> <clinit>
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dm
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    84:84:com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot getSlot() -> ej
    88:89:void setSlot(com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot) -> Lorem
    99:99:org.bukkit.inventory.ItemStack getItem() -> getItem
    108:109:void setItem(org.bukkit.inventory.ItemStack) -> setItem
com.volmit.wormholes.util.WrapperPlayServerEntityHeadRotation -> com.volmit.wormholes.src.y:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:byte getHeadYaw() -> ek
    98:99:void setHeadYaw(byte) -> vulputate
com.volmit.wormholes.util.WrapperPlayServerEntityLook -> com.volmit.wormholes.src.z:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    86:86:float getYaw() -> getYaw
    95:96:void setYaw(float) -> setYaw
    104:104:float getPitch() -> getPitch
    113:114:void setPitch(float) -> setPitch
    122:122:boolean getOnGround() -> dp
    131:132:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayServerEntityMetadata -> com.volmit.wormholes.src.B:
    com.comphenix.protocol.PacketType TYPE -> pD
    32:33:void <clinit>() -> <clinit>
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> dm
    61:62:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getMetadata() -> getMetadata
    99:100:void setMetadata(java.util.List) -> setMetadata
com.volmit.wormholes.util.WrapperPlayServerEntityStatus -> com.volmit.wormholes.src.C:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    57:58:void setEntityID(int) -> lectus
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEntityStatus() -> el
    97:98:void setEntityStatus(byte) -> dictum
com.volmit.wormholes.util.WrapperPlayServerEntityTeleport -> com.volmit.wormholes.src.D:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getEntityID() -> dm
    56:57:void setEntityID(int) -> lectus
    66:66:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    76:76:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    80:80:double getX() -> getX
    84:85:void setX(double) -> setX
    88:88:double getY() -> getY
    92:93:void setY(double) -> setY
    96:96:double getZ() -> getZ
    100:101:void setZ(double) -> setZ
    109:109:float getYaw() -> getYaw
    118:119:void setYaw(float) -> setYaw
    127:127:float getPitch() -> getPitch
    136:137:void setPitch(float) -> setPitch
    140:140:boolean getOnGround() -> dp
    144:145:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayServerEntityVelocity -> com.volmit.wormholes.src.E:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    87:87:double getVelocityX() -> em
    96:97:void setVelocityX(double) -> mi
    105:105:double getVelocityY() -> en
    114:115:void setVelocityY(double) -> euismod
    123:123:double getVelocityZ() -> eo
    132:133:void setVelocityZ(double) -> Pellentesque
com.volmit.wormholes.util.WrapperPlayServerExperience -> com.volmit.wormholes.src.F:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getExperienceBar() -> ep
    53:54:void setExperienceBar(float) -> non
    62:62:int getLevel() -> getLevel
    71:72:void setLevel(int) -> setLevel
    80:80:int getTotalExperience() -> getTotalExperience
    89:90:void setTotalExperience(int) -> setTotalExperience
com.volmit.wormholes.util.WrapperPlayServerExplosion -> com.volmit.wormholes.src.G:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    63:63:double getY() -> getY
    72:73:void setY(double) -> setY
    81:81:double getZ() -> getZ
    90:91:void setZ(double) -> setZ
    101:101:float getRadius() -> getRadius
    110:111:void setRadius(float) -> setRadius
    121:121:java.util.List getRecors() -> eq
    130:131:void setRecords(java.util.List) -> amet
    134:134:float getPlayerVelocityX() -> er
    138:139:void setPlayerVelocityX(float) -> mi
    142:142:float getPlayerVelocityY() -> es
    146:147:void setPlayerVelocityY(float) -> euismod
    150:150:float getPlayerVelocityZ() -> ev
    154:155:void setPlayerVelocityZ(float) -> Pellentesque
com.volmit.wormholes.util.WrapperPlayServerGameStateChange -> com.volmit.wormholes.src.H:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:int getReason() -> getReason
    52:53:void setReason(int) -> convallis
    63:63:float getValue() -> getValue
    72:73:void setValue(float) -> setValue
com.volmit.wormholes.util.WrapperPlayServerHeldItemSlot -> com.volmit.wormholes.src.I:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> neque
com.volmit.wormholes.util.WrapperPlayServerKeepAlive -> com.volmit.wormholes.src.J:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> dq
    51:52:void setKeepAliveId(int) -> sagittis
com.volmit.wormholes.util.WrapperPlayServerKickDisconnect -> com.volmit.wormholes.src.K:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> cU
    56:57:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerLogin -> com.volmit.wormholes.src.L:
    com.comphenix.protocol.PacketType TYPE -> pD
    32:32:void <clinit>() -> <clinit>
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dm
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> ew
    101:102:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    112:112:int getDimension() -> getDimension
    121:122:void setDimension(int) -> setDimension
    132:132:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> ey
    141:142:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    152:152:int getMaxPlayers() -> getMaxPlayers
    161:162:void setMaxPlayers(int) -> setMaxPlayers
    172:172:org.bukkit.WorldType getLevelType() -> ez
    181:182:void setLevelType(org.bukkit.WorldType) -> Lorem
    190:190:boolean getReducedDebugInfo() -> eA
    199:200:void setReducedDebugInfo(boolean) -> setReducedDebugInfo
com.volmit.wormholes.util.WrapperPlayServerMap -> com.volmit.wormholes.src.M:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getItemDamage() -> eB
    53:54:void setItemDamage(int) -> viverra
    62:62:byte getScale() -> eC
    71:72:void setScale(byte) -> Vestibulum
    75:75:boolean getTrackingPosition() -> eD
    79:80:void setTrackingPosition(boolean) -> odio
    83:83:java.lang.Object[] getMapIcons() -> eE
    87:88:void setMapIcons(java.lang.Object[]) -> dolor
    91:91:int getColumns() -> getColumns
    95:96:void setColumns(int) -> setColumns
    99:99:int getRows() -> getRows
    103:104:void setRows(int) -> setRows
    107:107:int getX() -> getX
    111:112:void setX(int) -> setX
    115:115:int getZ() -> getZ
    119:120:void setZ(int) -> setZ
    123:123:byte[] getData() -> getData
    127:128:void setData(byte[]) -> setData
com.volmit.wormholes.util.WrapperPlayServerMapChunk -> com.volmit.wormholes.src.N:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getChunkX() -> getChunkX
    53:54:void setChunkX(int) -> lacus
    64:64:int getChunkZ() -> getChunkZ
    73:74:void setChunkZ(int) -> eu
    77:77:java.lang.Object getChunkMap() -> eF
    81:82:void setChunkMap(java.lang.Object) -> ac
    94:94:boolean getGroundUpContinuous() -> eG
    103:104:void setGroundUpContinuous(boolean) -> a
com.volmit.wormholes.util.WrapperPlayServerMount -> com.volmit.wormholes.src.O:
    com.comphenix.protocol.PacketType TYPE -> pD
    35:35:void <clinit>() -> <clinit>
    38:40:void <init>() -> <init>
    43:44:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    54:54:int getEntityID() -> dm
    64:64:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    74:74:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:84:void setEntityID(int) -> lectus
    87:87:int[] getPassengerIds() -> eH
    91:92:void setPassengerIds(int[]) -> ipsum
    95:95:java.util.List getPassengers(com.comphenix.protocol.events.PacketEvent) -> dolor
    99:110:java.util.List getPassengers(org.bukkit.World) -> consectetur
    114:120:void setPassengers(java.util.List) -> consectetur
com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange -> com.volmit.wormholes.src.P:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.ChunkCoordIntPair getChunk() -> getChunk
    54:55:void setChunk(com.comphenix.protocol.wrappers.ChunkCoordIntPair) -> Lorem
    63:63:com.comphenix.protocol.wrappers.MultiBlockChangeInfo[] getRecords() -> eI
    72:73:void setRecords(com.comphenix.protocol.wrappers.MultiBlockChangeInfo[]) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerNamedEntitySpawn -> com.volmit.wormholes.src.Q:
    com.comphenix.protocol.PacketType TYPE -> pD
    33:34:void <clinit>() -> <clinit>
    37:39:void <init>() -> <init>
    42:43:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    53:53:int getEntityID() -> dm
    62:63:void setEntityID(int) -> lectus
    72:72:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    82:82:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    93:93:java.util.UUID getPlayerUUID() -> eJ
    102:103:void setPlayerUUID(java.util.UUID) -> consectetur
    111:111:org.bukkit.util.Vector getPosition() -> eK
    120:123:void setPosition(org.bukkit.util.Vector) -> iaculis
    126:126:double getX() -> getX
    130:131:void setX(double) -> setX
    134:134:double getY() -> getY
    138:139:void setY(double) -> setY
    142:142:double getZ() -> getZ
    146:147:void setZ(double) -> setZ
    155:155:float getYaw() -> getYaw
    164:165:void setYaw(float) -> setYaw
    173:173:float getPitch() -> getPitch
    182:183:void setPitch(float) -> setPitch
    193:193:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> eL
    202:203:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerNamedSoundEffect -> com.volmit.wormholes.src.R:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:org.bukkit.Sound getSoundEffect() -> eM
    45:46:void setSoundEffect(org.bukkit.Sound) -> ipsum
    49:49:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> ed
    53:54:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    64:64:int getEffectPositionX() -> eN
    73:74:void setEffectPositionX(int) -> Phasellus
    84:84:int getEffectPositionY() -> eO
    93:94:void setEffectPositionY(int) -> accumsan
    104:104:int getEffectPositionZ() -> eP
    113:114:void setEffectPositionZ(int) -> egestas
    124:124:float getVolume() -> ee
    133:134:void setVolume(float) -> purus
    144:144:float getPitch() -> getPitch
    153:154:void setPitch(float) -> setPitch
com.volmit.wormholes.util.WrapperPlayServerOpenSignEditor -> com.volmit.wormholes.src.S:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerOpenWindow -> com.volmit.wormholes.src.T:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getWindowID() -> eQ
    59:60:void setWindowID(int) -> Praesent
    70:70:java.lang.String getInventoryType() -> eR
    79:80:void setInventoryType(java.lang.String) -> quam
    90:90:com.comphenix.protocol.wrappers.WrappedChatComponent getWindowTitle() -> eS
    99:100:void setWindowTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> sit
    111:111:int getNumberOfSlots() -> eT
    120:121:void setNumberOfSlots(int) -> eros
    131:131:int getEntityID() -> dm
    140:141:void setEntityID(int) -> lectus
    150:150:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    160:160:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerPlayerInfo -> com.volmit.wormholes.src.U:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction getAction() -> eU
    45:46:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction) -> Lorem
    49:49:java.util.List getData() -> eV
    53:54:void setData(java.util.List) -> adipiscing
com.volmit.wormholes.util.WrapperPlayServerPlayerListHeaderFooter -> com.volmit.wormholes.src.V:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getHeader() -> eW
    53:54:void setHeader(com.comphenix.protocol.wrappers.WrappedChatComponent) -> amet
    62:62:com.comphenix.protocol.wrappers.WrappedChatComponent getFooter() -> eX
    71:72:void setFooter(com.comphenix.protocol.wrappers.WrappedChatComponent) -> consectetur
com.volmit.wormholes.util.WrapperPlayServerPosition -> com.volmit.wormholes.src.W:
    com.comphenix.protocol.PacketType TYPE -> pD
    java.lang.Class FLAGS_CLASS -> pN
    31:144:void <clinit>() -> <clinit>
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:double getX() -> getX
    59:60:void setX(double) -> setX
    70:70:double getY() -> getY
    79:80:void setY(double) -> setY
    90:90:double getZ() -> getZ
    99:100:void setZ(double) -> setZ
    110:110:float getYaw() -> getYaw
    119:120:void setYaw(float) -> setYaw
    130:130:float getPitch() -> getPitch
    139:140:void setPitch(float) -> setPitch
    151:154:com.comphenix.protocol.reflect.StructureModifier getFlagsModifier() -> eY
    158:158:java.util.Set getFlags() -> eZ
    162:163:void setFlags(java.util.Set) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag -> com.volmit.wormholes.src.W$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X -> pO
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y -> pP
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Z -> pQ
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y_ROT -> pR
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X_ROT -> pS
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] ENUM$VALUES -> pT
    146:147:void <clinit>() -> <clinit>
    146:146:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] values() -> values
    1:1:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.WrapperPlayServerRelEntityMove -> com.volmit.wormholes.src.X:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    82:82:int getDx() -> fa
    86:87:void setDx(int) -> et
    90:90:int getDy() -> fb
    94:95:void setDy(int) -> sodales
    98:98:int getDz() -> fc
    102:103:void setDz(int) -> scelerisque
    111:111:boolean getOnGround() -> dp
    120:121:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayServerRelEntityMoveLook -> com.volmit.wormholes.src.Y:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> dm
    59:60:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    83:83:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    93:93:double getDx() -> fd
    104:105:void setDx(double) -> at
    114:114:double getDy() -> fe
    125:126:void setDy(double) -> iaculis
    135:135:double getDz() -> ff
    146:147:void setDz(double) -> urna
    156:156:float getYaw() -> getYaw
    167:168:void setYaw(float) -> setYaw
    177:177:float getPitch() -> getPitch
    188:189:void setPitch(float) -> setPitch
    198:198:boolean getOnGround() -> dp
    209:210:void setOnGround(boolean) -> Proin
com.volmit.wormholes.util.WrapperPlayServerRemoveEntityEffect -> com.volmit.wormholes.src.Z:
    com.comphenix.protocol.PacketType TYPE -> pD
    30:31:void <clinit>() -> <clinit>
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> dm
    59:60:void setEntityID(int) -> lectus
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:83:org.bukkit.potion.PotionEffectType getEffect() -> fg
    87:88:void setEffect(org.bukkit.potion.PotionEffectType) -> ipsum
com.volmit.wormholes.util.WrapperPlayServerResourcePackSend -> com.volmit.wormholes.src.aa:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getUrl() -> getUrl
    54:55:void setUrl(java.lang.String) -> setUrl
    69:69:java.lang.String getHash() -> getHash
    78:79:void setHash(java.lang.String) -> malesuada
com.volmit.wormholes.util.WrapperPlayServerRespawn -> com.volmit.wormholes.src.ab:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getDimension() -> getDimension
    57:58:void setDimension(int) -> setDimension
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> ey
    77:78:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> ew
    98:99:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    109:109:org.bukkit.WorldType getLevelType() -> ez
    118:119:void setLevelType(org.bukkit.WorldType) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerScoreboardDisplayObjective -> com.volmit.wormholes.src.ae:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getPosition() -> getPosition
    55:56:void setPosition(int) -> setPosition
    66:66:java.lang.String getScoreName() -> getScoreName
    75:76:void setScoreName(java.lang.String) -> setScoreName
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective -> com.volmit.wormholes.src.af:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    63:63:java.lang.String getName() -> getName
    72:73:void setName(java.lang.String) -> setName
    83:83:java.lang.String getDisplayName() -> getDisplayName
    92:93:void setDisplayName(java.lang.String) -> setDisplayName
    103:103:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay getHealthDisplay() -> fh
    113:114:void setHealthDisplay(com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay) -> Lorem
    125:125:int getMode() -> getMode
    134:135:void setMode(int) -> setMode
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay -> com.volmit.wormholes.src.af$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay INTEGER -> pU
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay HEARTS -> pV
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] ENUM$VALUES -> pW
    137:138:void <clinit>() -> <clinit>
    137:137:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] values() -> values
    1:1:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay valueOf(java.lang.String) -> valueOf
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode -> com.volmit.wormholes.src.af$ipsum:
    int ADD_OBJECTIVE -> pX
    int REMOVE_OBJECTIVE -> pY
    int UPDATE_VALUE -> pZ
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode INSTANCE -> qa
    48:48:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    51:51:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode getInstance() -> fi
com.volmit.wormholes.util.WrapperPlayServerScoreboardScore -> com.volmit.wormholes.src.ag:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getScoreName() -> getScoreName
    55:56:void setScoreName(java.lang.String) -> setScoreName
    66:66:java.lang.String getObjectiveName() -> fj
    75:76:void setObjectiveName(java.lang.String) -> quis
    87:87:int getValue() -> getValue
    96:97:void setValue(int) -> setValue
    100:100:com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction getAction() -> fk
    104:105:void setScoreboardAction(com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam -> com.volmit.wormholes.src.ah:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    68:68:java.lang.String getName() -> getName
    77:78:void setName(java.lang.String) -> setName
    88:88:java.lang.String getDisplayName() -> getDisplayName
    97:98:void setDisplayName(java.lang.String) -> setDisplayName
    109:109:java.lang.String getPrefix() -> getPrefix
    118:119:void setPrefix(java.lang.String) -> setPrefix
    130:130:java.lang.String getSuffix() -> getSuffix
    139:140:void setSuffix(java.lang.String) -> setSuffix
    151:151:java.lang.String getNameTagVisibility() -> getNameTagVisibility
    160:161:void setNameTagVisibility(java.lang.String) -> setNameTagVisibility
    171:171:int getColor() -> getColor
    180:181:void setColor(int) -> setColor
    189:189:java.lang.String getCollisionRule() -> getCollisionRule
    197:198:void setCollisionRule(java.lang.String) -> setCollisionRule
    210:211:java.util.List getPlayers() -> getPlayers
    220:221:void setPlayers(java.util.List) -> elit
    233:233:int getMode() -> getMode
    242:243:void setMode(int) -> setMode
    263:263:int getPackOptionData() -> fl
    273:274:void setPackOptionData(int) -> velit
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode -> com.volmit.wormholes.src.ah$Lorem:
    int TEAM_CREATED -> qb
    int TEAM_REMOVED -> qc
    int TEAM_UPDATED -> qd
    int PLAYERS_ADDED -> qe
    int PLAYERS_REMOVED -> qf
    com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode INSTANCE -> qg
    53:53:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    56:56:com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode getInstance() -> fm
com.volmit.wormholes.util.WrapperPlayServerServerDifficulty -> com.volmit.wormholes.src.ai:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> ey
    55:56:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerSetCooldown -> com.volmit.wormholes.src.aj:
    java.lang.Class ITEM_CLASS -> qh
    com.comphenix.protocol.PacketType TYPE -> pD
    31:33:void <clinit>() -> <clinit>
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:46:org.bukkit.Material getItem() -> fn
    50:53:void setItem(org.bukkit.Material) -> sit
    56:56:int getTicks() -> fo
    60:61:void setTicks(int) -> Donec
    31:31:java.lang.Class access$0() -> fp
com.volmit.wormholes.util.WrapperPlayServerSetCooldown$ItemConverter -> com.volmit.wormholes.src.aj$Lorem:
    com.comphenix.protocol.reflect.accessors.MethodAccessor getMaterial -> qi
    com.comphenix.protocol.reflect.accessors.MethodAccessor getItem -> qj
    64:65:void <clinit>() -> <clinit>
    63:63:void <init>() -> <init>
    69:76:org.bukkit.Material getSpecific(java.lang.Object) -> enim
    81:88:java.lang.Object getGeneric(java.lang.Class,org.bukkit.Material) -> Lorem
    93:93:java.lang.Class getSpecificType() -> getSpecificType
    1:1:java.lang.Object getGeneric(java.lang.Class,java.lang.Object) -> getGeneric
    1:1:java.lang.Object getSpecific(java.lang.Object) -> getSpecific
    63:63:void <init>(com.volmit.wormholes.util.WrapperPlayServerSetCooldown$ItemConverter) -> <init>
com.volmit.wormholes.util.WrapperPlayServerSetSlot -> com.volmit.wormholes.src.ak:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getWindowId() -> di
    60:61:void setWindowId(int) -> semper
    71:71:int getSlot() -> getSlot
    80:81:void setSlot(int) -> neque
    89:89:org.bukkit.inventory.ItemStack getSlotData() -> fq
    98:99:void setSlotData(org.bukkit.inventory.ItemStack) -> purus
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity -> com.volmit.wormholes.src.al:
    com.comphenix.protocol.PacketType TYPE -> pD
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> qk
    34:36:void <clinit>() -> <clinit>
    86:88:void <init>() -> <init>
    91:92:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    95:96:void <init>(org.bukkit.entity.Entity,int,int) -> <init>
    101:106:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity,int,int) -> Lorem
    115:115:int getEntityID() -> dm
    125:125:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    135:135:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    144:145:void setEntityID(int) -> lectus
    148:148:java.util.UUID getUniqueId() -> getUniqueId
    152:153:void setUniqueId(java.util.UUID) -> setUniqueId
    163:163:double getX() -> getX
    172:173:void setX(double) -> setX
    183:183:double getY() -> getY
    192:193:void setY(double) -> setY
    203:203:double getZ() -> getZ
    212:213:void setZ(double) -> setZ
    223:223:double getOptionalSpeedX() -> fr
    232:233:void setOptionalSpeedX(double) -> Proin
    243:243:double getOptionalSpeedY() -> fs
    252:253:void setOptionalSpeedY(double) -> ac
    263:263:double getOptionalSpeedZ() -> ft
    272:273:void setOptionalSpeedZ(double) -> enim
    281:281:float getPitch() -> getPitch
    290:291:void setPitch(float) -> setPitch
    299:299:float getYaw() -> getYaw
    308:309:void setYaw(float) -> setYaw
    317:317:int getType() -> getType
    326:327:void setType(int) -> setType
    364:364:int getObjectData() -> fu
    376:377:void setObjectData(int) -> quam
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes -> com.volmit.wormholes.src.al$Lorem:
    int BOAT -> ql
    int ITEM_STACK -> qm
    int AREA_EFFECT_CLOUD -> qn
    int MINECART -> qo
    int ACTIVATED_TNT -> qp
    int ENDER_CRYSTAL -> qq
    int TIPPED_ARROW_PROJECTILE -> qr
    int SNOWBALL_PROJECTILE -> qs
    int EGG_PROJECTILE -> qt
    int GHAST_FIREBALL -> qu
    int BLAZE_FIREBALL -> qv
    int THROWN_ENDERPEARL -> qw
    int WITHER_SKULL_PROJECTILE -> qx
    int SHULKER_BULLET -> qy
    int FALLING_BLOCK -> qz
    int ITEM_FRAME -> qA
    int EYE_OF_ENDER -> qB
    int THROWN_POTION -> qC
    int THROWN_EXP_BOTTLE -> qD
    int FIREWORK_ROCKET -> qE
    int LEASH_KNOT -> qF
    int ARMORSTAND -> qG
    int FISHING_FLOAT -> qH
    int SPECTRAL_ARROW -> qI
    int DRAGON_FIREBALL -> qJ
    com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes INSTANCE -> qK
    73:73:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    81:81:com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes getInstance() -> fv
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityExperienceOrb -> com.volmit.wormholes.src.am:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:double getX() -> getX
    98:99:void setX(double) -> setX
    109:109:double getY() -> getY
    118:119:void setY(double) -> setY
    129:129:double getZ() -> getZ
    138:139:void setZ(double) -> setZ
    149:149:int getCount() -> getCount
    158:159:void setCount(int) -> setCount
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityLiving -> com.volmit.wormholes.src.an:
    com.comphenix.protocol.PacketType TYPE -> pD
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> qk
    35:38:void <clinit>() -> <clinit>
    41:43:void <init>() -> <init>
    46:47:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:51:void <init>(org.bukkit.entity.Entity) -> <init>
    55:59:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity) -> mi
    68:68:int getEntityID() -> dm
    78:78:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    88:88:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:java.util.UUID getUniqueId() -> getUniqueId
    96:97:void setUniqueId(java.util.UUID) -> setUniqueId
    105:106:void setEntityID(int) -> lectus
    115:115:org.bukkit.entity.EntityType getType() -> getType
    125:126:void setType(org.bukkit.entity.EntityType) -> ipsum
    136:136:double getX() -> getX
    145:146:void setX(double) -> setX
    156:156:double getY() -> getY
    165:166:void setY(double) -> setY
    176:176:double getZ() -> getZ
    185:186:void setZ(double) -> setZ
    194:194:float getYaw() -> getYaw
    203:204:void setYaw(float) -> setYaw
    212:212:float getPitch() -> getPitch
    221:222:void setPitch(float) -> setPitch
    230:230:float getHeadPitch() -> fw
    239:240:void setHeadPitch(float) -> at
    248:248:double getVelocityX() -> em
    257:258:void setVelocityX(double) -> mi
    266:266:double getVelocityY() -> en
    275:276:void setVelocityY(double) -> euismod
    284:284:double getVelocityZ() -> eo
    293:294:void setVelocityZ(double) -> Pellentesque
    304:304:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> eL
    313:314:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityPainting -> com.volmit.wormholes.src.ao:
    com.comphenix.protocol.PacketType TYPE -> pD
    31:32:void <clinit>() -> <clinit>
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> dm
    60:61:void setEntityID(int) -> lectus
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    91:91:java.lang.String getTitle() -> getTitle
    100:101:void setTitle(java.lang.String) -> setTitle
    111:111:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    120:121:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    124:124:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> dc
    128:129:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityWeather -> com.volmit.wormholes.src.ap:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:30:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> dm
    58:59:void setEntityID(int) -> lectus
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:int getType() -> getType
    98:99:void setType(int) -> setType
    109:109:double getX() -> getX
    118:119:void setX(double) -> setX
    129:129:double getY() -> getY
    138:139:void setY(double) -> setY
    149:149:double getZ() -> getZ
    158:159:void setZ(double) -> setZ
com.volmit.wormholes.util.WrapperPlayServerSpawnPosition -> com.volmit.wormholes.src.aq:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerStatistic -> com.volmit.wormholes.src.ar:
    com.comphenix.protocol.PacketType TYPE -> pD
    28:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    40:40:java.util.Map getStatistics() -> getStatistics
    44:45:void setStatistics(java.util.Map) -> ipsum
com.volmit.wormholes.util.WrapperPlayServerTabComplete -> com.volmit.wormholes.src.as:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    56:56:java.lang.String[] getMatches() -> fx
    65:66:void setMatches(java.lang.String[]) -> purus
com.volmit.wormholes.util.WrapperPlayServerTileEntityData -> com.volmit.wormholes.src.au:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:28:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    65:65:int getAction() -> getAction
    74:75:void setAction(int) -> setAction
    85:85:com.comphenix.protocol.wrappers.nbt.NbtBase getNbtData() -> fy
    94:95:void setNbtData(com.comphenix.protocol.wrappers.nbt.NbtBase) -> Lorem
com.volmit.wormholes.util.WrapperPlayServerTitle -> com.volmit.wormholes.src.av:
    com.comphenix.protocol.PacketType TYPE -> pD
    27:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$TitleAction getAction() -> fz
    53:54:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$TitleAction) -> Lorem
    64:64:com.comphenix.protocol.wrappers.WrappedChatComponent getTitle() -> fA
    73:74:void setTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> adipiscing
    84:84:int getFadeIn() -> getFadeIn
    93:94:void setFadeIn(int) -> setFadeIn
    102:102:int getStay() -> getStay
    111:112:void setStay(int) -> setStay
    120:120:int getFadeOut() -> getFadeOut
    129:130:void setFadeOut(int) -> setFadeOut
com.volmit.wormholes.util.WrapperPlayServerTransaction -> com.volmit.wormholes.src.aw:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(int) -> semper
    65:65:short getActionNumber() -> dE
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> dF
    94:95:void setAccepted(boolean) -> posuere
com.volmit.wormholes.util.WrapperPlayServerUnloadChunk -> com.volmit.wormholes.src.ax:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getChunkX() -> getChunkX
    54:55:void setChunkX(int) -> lacus
    65:65:int getChunkZ() -> getChunkZ
    74:75:void setChunkZ(int) -> eu
com.volmit.wormholes.util.WrapperPlayServerUpdateAttributes -> com.volmit.wormholes.src.ay:
    com.comphenix.protocol.PacketType TYPE -> pD
    32:33:void <clinit>() -> <clinit>
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> dm
    61:62:void setEntityID(int) -> lectus
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getAttributes() -> getAttributes
    99:100:void setAttributes(java.util.List) -> setAttributes
com.volmit.wormholes.util.WrapperPlayServerUpdateHealth -> com.volmit.wormholes.src.az:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getHealth() -> getHealth
    53:54:void setHealth(float) -> setHealth
    64:64:int getFood() -> fB
    73:74:void setFood(int) -> malesuada
    84:84:float getFoodSaturation() -> fC
    93:94:void setFoodSaturation(float) -> iaculis
com.volmit.wormholes.util.WrapperPlayServerUpdateTime -> com.volmit.wormholes.src.aA:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getAgeOfTheWorld() -> fD
    53:54:void setAgeOfTheWorld(long) -> at
    65:65:long getTimeOfDay() -> getTimeOfDay
    74:75:void setTimeOfDay(long) -> setTimeOfDay
com.volmit.wormholes.util.WrapperPlayServerVehicleMove -> com.volmit.wormholes.src.aB:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
com.volmit.wormholes.util.WrapperPlayServerWindowData -> com.volmit.wormholes.src.aC:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> di
    53:54:void setWindowId(int) -> semper
    64:64:int getProperty() -> fE
    73:74:void setProperty(int) -> quis
    84:84:int getValue() -> getValue
    93:94:void setValue(int) -> setValue
com.volmit.wormholes.util.WrapperPlayServerWindowItems -> com.volmit.wormholes.src.aD:
    com.comphenix.protocol.PacketType TYPE -> pD
    29:29:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getWindowId() -> di
    58:59:void setWindowId(int) -> semper
    67:67:java.util.List getSlotData() -> fF
    76:77:void setSlotData(java.util.List) -> Morbi
com.volmit.wormholes.util.WrapperPlayServerWorldBorder -> com.volmit.wormholes.src.aE:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction getAction() -> fG
    42:43:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction) -> Lorem
    46:46:int getPortalTeleportBoundary() -> fH
    50:51:void setPortalTeleportBoundary(int) -> ullamcorper
    54:54:double getCenterX() -> getCenterX
    58:59:void setCenterX(double) -> posuere
    62:62:double getCenterZ() -> getCenterZ
    66:67:void setCenterZ(double) -> molestie
    70:70:double getOldRadius() -> fI
    74:75:void setOldRadius(double) -> odio
    78:78:double getRadius() -> fJ
    82:83:void setRadius(double) -> a
    86:86:long getSpeed() -> fK
    90:91:void setSpeed(long) -> iaculis
    94:94:int getWarningTime() -> getWarningTime
    98:99:void setWarningTime(int) -> setWarningTime
    102:102:int getWarningDistance() -> getWarningDistance
    106:107:void setWarningDistance(int) -> setWarningDistance
com.volmit.wormholes.util.WrapperPlayServerWorldEvent -> com.volmit.wormholes.src.aF:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getEffectId() -> getEffectId
    54:55:void setEffectId(int) -> aliquet
    65:65:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> db
    74:75:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    85:85:int getData() -> getData
    94:95:void setData(int) -> setData
    105:105:boolean getDisableRelativeVolume() -> fL
    114:115:void setDisableRelativeVolume(boolean) -> facilisis
com.volmit.wormholes.util.WrapperPlayServerWorldParticles -> com.volmit.wormholes.src.aG:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:27:void <clinit>() -> <clinit>
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$Particle getParticleType() -> fM
    53:54:void setParticleType(com.comphenix.protocol.wrappers.EnumWrappers$Particle) -> Lorem
    64:64:float getX() -> getX
    73:74:void setX(float) -> urna
    84:84:float getY() -> getY
    93:94:void setY(float) -> Proin
    104:104:float getZ() -> getZ
    113:114:void setZ(float) -> ac
    125:125:float getOffsetX() -> fN
    134:135:void setOffsetX(float) -> enim
    146:146:float getOffsetY() -> fO
    155:156:void setOffsetY(float) -> posuere
    167:167:float getOffsetZ() -> fP
    176:177:void setOffsetZ(float) -> molestie
    187:187:float getParticleData() -> fQ
    196:197:void setParticleData(float) -> odio
    207:207:int getNumberOfParticles() -> fR
    216:217:void setNumberOfParticles(int) -> nulla
    227:227:boolean getLongDistance() -> fS
    236:237:void setLongDistance(boolean) -> In
    249:249:int[] getData() -> getData
    258:259:void setData(int[]) -> dolor
com.volmit.wormholes.util.WrapperStatusClientPing -> com.volmit.wormholes.src.aH:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:long getTime() -> getTime
    51:52:void setTime(long) -> setTime
com.volmit.wormholes.util.WrapperStatusClientStart -> com.volmit.wormholes.src.aI:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
com.volmit.wormholes.util.WrapperStatusServerPong -> com.volmit.wormholes.src.aJ:
    com.comphenix.protocol.PacketType TYPE -> pD
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getTime() -> getTime
    53:54:void setTime(long) -> setTime
com.volmit.wormholes.util.WrapperStatusServerServerInfo -> com.volmit.wormholes.src.aK:
    com.comphenix.protocol.PacketType TYPE -> pD
    26:26:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedServerPing getJsonResponse() -> fT
    54:55:void setJsonResponse(com.comphenix.protocol.wrappers.WrappedServerPing) -> Lorem
com.volmit.wormholes.util.XML -> com.volmit.wormholes.src.aL:
    java.lang.Character AMP -> qL
    java.lang.Character APOS -> qM
    java.lang.Character BANG -> qN
    java.lang.Character EQ -> qO
    java.lang.Character GT -> qP
    java.lang.Character LT -> qQ
    java.lang.Character QUEST -> qR
    java.lang.Character QUOT -> qS
    java.lang.Character SLASH -> qT
    38:62:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    76:99:java.lang.String escape(java.lang.String) -> escape
    109:119:void noSpace(java.lang.String) -> ullamcorper
    133:286:boolean parse(com.volmit.wormholes.util.XMLTokener,com.volmit.wormholes.util.JSONObject,java.lang.String) -> Lorem
    303:333:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    352:357:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> sed
    368:368:java.lang.String toString(java.lang.Object) -> toString
    381:486:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
com.volmit.wormholes.util.XMLTokener -> com.volmit.wormholes.src.aM:
    java.util.HashMap entity -> qU
    42:48:void <clinit>() -> <clinit>
    55:56:void <init>(java.lang.String) -> <init>
    66:77:java.lang.String nextCDATA() -> fU
    96:115:java.lang.Object nextContent() -> fV
    128:141:java.lang.Object nextEntity(char) -> vulputate
    158:204:java.lang.Object nextMeta() -> fW
    224:288:java.lang.Object nextToken() -> fX
    306:361:boolean skipPast(java.lang.String) -> aliquet
com.volmit.wormholes.util.YAMLDataInput -> com.volmit.wormholes.src.aN:
    14:14:void <init>() -> <init>
    19:65:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.YAMLDataOutput -> com.volmit.wormholes.src.aO:
    13:13:void <init>() -> <init>
    18:28:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.ZipArchive -> com.volmit.wormholes.src.aP:
    com.volmit.wormholes.util.GMap fileSet -> qV
    16:19:void <init>() -> <init>
    24:25:void add(java.io.File,java.io.File) -> Lorem
    30:37:void remove(java.io.File) -> remove
    42:43:void compress(java.io.File) -> ipsum
    48:48:com.volmit.wormholes.util.ArchiveType getType() -> whiteboard
com.volmit.wormholes.util.package-info -> com.volmit.wormholes.src.aQ:
