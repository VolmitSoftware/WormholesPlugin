com.volmit.wormholes.Info -> com.volmit.wormholes.src.Lorem:
    java.lang.String TAG -> Lorem
    java.lang.String PERM_RELOAD -> ipsum
    java.lang.String PERM_LIST -> dolor
    java.lang.String PERM_CREATE -> sit
    java.lang.String PERM_DESTROY -> amet
    java.lang.String PERM_BUILD -> consectetur
    java.lang.String PERM_CONFIGURE -> adipiscing
    java.lang.String PERM_USE -> elit
    java.lang.String HR -> Morbi
    java.lang.String HRN -> pulvinar
    8:8:void <init>() -> <init>
    24:24:java.lang.String hr() -> Lorem
    29:29:java.lang.String hrn(java.lang.String) -> Lorem
    10:20:void <clinit>() -> <clinit>
com.volmit.wormholes.Settings -> com.volmit.wormholes.src.ipsum:
    boolean ENABLE_PROJECTIONS -> vulputate
    boolean ALLOW_ENTITIES -> dictum
    boolean ENABLE_APERTURE -> Vestibulum
    int MAX_PORTAL_SIZE -> in
    int APERTURE_MAX_SPEED -> purus
    int PROJECTION_CHANGE_THROTTLE -> non
    int PROJECTION_SAMPLE_RADIUS -> mi
    int PROJECTION_MAX_SPEED -> euismod
    int CHUNK_SEND_RATE -> Pellentesque
    int CHUNK_SEND_MAX -> at
    int CHUNK_MAX_CHANGE -> iaculis
    int NETWORK_POPULATE_MAPPING_INTERVAL -> urna
    int NETWORK_MAX_PACKET_SIZE -> Proin
    int NETWORK_COMPRESSION_LEVEL -> ac
    java.util.ArrayList ALLOW_ENTITIY_TYPES -> enim
    java.util.ArrayList APERTURE_ENTITIY_TYPES -> posuere
    int NETWORK_PUSH_THRESHOLD -> molestie
    int NETWORK_FLUSH_THRESHOLD -> odio
    int NETWORK_POLL_THRESHOLD -> a
    boolean BUNGEECORD_SEND_ONLY -> facilisis
    11:11:void <init>() -> <init>
    88:109:com.volmit.wormholes.util.DataCluster getConfig() -> ipsum
    114:134:void setConfig(com.volmit.wormholes.util.DataCluster) -> Lorem
    153:174:com.volmit.wormholes.util.DataCluster getExperimentalConfig() -> dolor
    179:199:void setExperimentalConfig(com.volmit.wormholes.util.DataCluster) -> ipsum
    14:149:void <clinit>() -> <clinit>
com.volmit.wormholes.Status -> com.volmit.wormholes.src.dolor:
    int packetBytesPerSecond -> In
    double projectionTime -> hac
    int permutationsPerSecond -> habitasse
    int pps -> platea
    boolean fdq -> dictumst
    com.volmit.wormholes.util.Average avgBPS -> Nam
    java.lang.String inf -> metus
    int lightFault -> nisl
    int lightFaulted -> magna
    7:7:void <init>() -> <init>
    22:26:void sample() -> sit
    9:18:void <clinit>() -> <clinit>
com.volmit.wormholes.WAPI -> com.volmit.wormholes.src.sit:
    12:12:void <init>() -> <init>
    16:16:java.util.List getPortals() -> amet
    21:21:java.util.List getLocalPortals() -> consectetur
    26:36:java.util.List getRemotePortals() -> adipiscing
    41:49:com.volmit.wormholes.portal.Portal getPortalAt(org.bukkit.Location) -> Lorem
    54:54:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
    59:59:java.util.List getPortalAreasAt(org.bukkit.Location) -> ipsum
    64:64:java.util.List getPortalCloseAreaAt(org.bukkit.Location) -> dolor
    69:77:com.volmit.wormholes.portal.Portal getPortalByKey(com.volmit.wormholes.portal.PortalKey) -> Lorem
    82:82:boolean hasBungeecordConnection() -> elit
    87:87:java.lang.String getServerName() -> getServerName
    92:93:void fxShockPortal(com.volmit.wormholes.portal.LocalPortal) -> Lorem
    97:98:void fxShockAllPortal(com.volmit.wormholes.portal.LocalPortal) -> ipsum
com.volmit.wormholes.Wormholes -> com.volmit.wormholes.src.amet:
    com.volmit.wormholes.Wormholes instance -> tortor
    com.volmit.wormholes.network.VortexBus bus -> tempus
    com.volmit.wormholes.service.MutexService host -> sem
    com.volmit.wormholes.provider.PortalProvider provider -> sed
    com.volmit.wormholes.service.PortalRegistry registry -> volutpat
    com.volmit.wormholes.service.ApertureService aperture -> rhoncus
    com.volmit.wormholes.service.ProjectionService projector -> sapien
    com.volmit.wormholes.service.TimingsService timings -> orci
    com.volmit.wormholes.service.EntityService entity -> ligula
    com.volmit.wormholes.service.IOService io -> Sed
    com.volmit.wormholes.service.EffectService fx -> ultrices
    com.volmit.wormholes.util.SubGroup sub -> imperdiet
    40:40:void <init>() -> <init>
    58:74:void onStart() -> onStart
    79:81:void onStop() -> Morbi
    88:119:void onTick() -> pulvinar
    123:129:void doReload() -> vulputate
    133:338:void buildSubs() -> dictum
    344:344:void onConstruct() -> Vestibulum
    349:356:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
com.volmit.wormholes.Wormholes$1 -> com.volmit.wormholes.src.amet$1:
    com.volmit.wormholes.Wormholes this$0 -> turpis
    134:134:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    137:195:void list(org.bukkit.command.CommandSender,java.lang.String[]) -> Lorem
    200:204:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    209:210:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$2 -> com.volmit.wormholes.src.amet$2:
    com.volmit.wormholes.Wormholes this$0 -> turpis
    214:214:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    217:236:void list(org.bukkit.command.CommandSender) -> Lorem
    241:242:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    247:248:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$3 -> com.volmit.wormholes.src.amet$3:
    com.volmit.wormholes.Wormholes this$0 -> turpis
    252:252:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    255:264:void v(org.bukkit.command.CommandSender) -> ipsum
    269:270:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    275:276:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$4 -> com.volmit.wormholes.src.amet$4:
    com.volmit.wormholes.Wormholes this$0 -> turpis
    280:280:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    284:285:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    290:307:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.Wormholes$5 -> com.volmit.wormholes.src.amet$5:
    com.volmit.wormholes.Wormholes this$0 -> turpis
    311:311:void <init>(com.volmit.wormholes.Wormholes,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    314:324:void go(org.bukkit.command.CommandSender) -> dolor
    329:330:void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    335:336:void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
com.volmit.wormholes.WormholesBungeecord -> com.volmit.wormholes.src.consectetur:
    6:6:void <init>() -> <init>
    11:13:void onEnable() -> onEnable
    18:19:void onDisable() -> onDisable
com.volmit.wormholes.aperture.Aperture -> com.volmit.wormholes.src.adipiscing:
    9:10:void <init>(com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
com.volmit.wormholes.aperture.AperturePlane -> com.volmit.wormholes.src.elit:
    com.volmit.wormholes.util.GMap instanceMap -> Nullam
    com.volmit.wormholes.util.GMap instanceVa -> vehicula
    26:29:void <init>() -> <init>
    33:35:void clear() -> clear
    39:71:byte[] compress() -> in
    76:119:void addCompressed(byte[]) -> Lorem
    123:130:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    135:142:com.volmit.wormholes.util.GMap remapLook(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> ipsum
    149:178:void sample(com.volmit.wormholes.portal.LocalPortal) -> dolor
    182:182:int size() -> size
com.volmit.wormholes.aperture.BlacklistAperture -> com.volmit.wormholes.src.Morbi:
    7:8:void <init>() -> <init>
com.volmit.wormholes.aperture.EntityHider -> com.volmit.wormholes.src.pulvinar:
    com.google.common.collect.Table observerEntityMap -> porta
    com.comphenix.protocol.PacketType[] ENTITY_PACKETS -> ultricies
    com.comphenix.protocol.ProtocolManager manager -> vestibulum
    org.bukkit.event.Listener bukkitListener -> felis
    com.comphenix.protocol.events.PacketAdapter protocolListener -> nec
    com.volmit.wormholes.aperture.EntityHider$Policy policy -> tristique
    36:84:void <init>(org.bukkit.plugin.Plugin,com.volmit.wormholes.aperture.EntityHider$Policy) -> <init>
    100:107:boolean setVisibility(org.bukkit.entity.Player,int,boolean) -> Lorem
    126:132:boolean setMembership(org.bukkit.entity.Player,int,boolean) -> ipsum
    147:147:boolean getMembership(org.bukkit.entity.Player,int) -> Lorem
    161:163:boolean isVisible(org.bukkit.entity.Player,int) -> ipsum
    177:183:void removeEntity(org.bukkit.entity.Entity,boolean) -> Lorem
    193:194:void removePlayer(org.bukkit.entity.Player) -> removePlayer
    203:203:org.bukkit.event.Listener constructBukkit() -> purus
    238:238:com.comphenix.protocol.events.PacketAdapter constructProtocol(org.bukkit.plugin.Plugin) -> Lorem
    267:274:boolean toggleEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> Lorem
    289:297:boolean showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> ipsum
    311:334:boolean hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> dolor
    353:355:boolean canSee(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sit
    360:362:void validate(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> amet
    371:371:com.volmit.wormholes.aperture.EntityHider$Policy getPolicy() -> non
    376:382:void close() -> close
    39:39:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.EntityHider$1 -> com.volmit.wormholes.src.pulvinar$1:
    com.volmit.wormholes.aperture.EntityHider this$0 -> lacinia
    204:204:void <init>(com.volmit.wormholes.aperture.EntityHider) -> <init>
    208:209:void onEntityDeath(org.bukkit.event.entity.EntityDeathEvent) -> Lorem
    214:218:void onChunkUnload(org.bukkit.event.world.ChunkUnloadEvent) -> Lorem
    223:224:void onPlayerQuit(org.bukkit.event.player.PlayerQuitEvent) -> Lorem
com.volmit.wormholes.aperture.EntityHider$2 -> com.volmit.wormholes.src.pulvinar$2:
    com.volmit.wormholes.aperture.EntityHider this$0 -> lacinia
    239:239:void <init>(com.volmit.wormholes.aperture.EntityHider,org.bukkit.plugin.Plugin,com.comphenix.protocol.PacketType[]) -> <init>
    243:249:void onPacketSending(com.comphenix.protocol.events.PacketEvent) -> onPacketSending
com.volmit.wormholes.aperture.EntityHider$3 -> com.volmit.wormholes.src.pulvinar$3:
    int[] $SwitchMap$com$volmit$wormholes$aperture$EntityHider$Policy -> Duis
    100:100:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.EntityHider$Policy -> com.volmit.wormholes.src.pulvinar$Lorem:
    com.volmit.wormholes.aperture.EntityHider$Policy WHITELIST -> tempor
    com.volmit.wormholes.aperture.EntityHider$Policy BLACKLIST -> eget
    com.volmit.wormholes.aperture.EntityHider$Policy[] $VALUES -> semper
    46:46:com.volmit.wormholes.aperture.EntityHider$Policy[] values() -> values
    46:46:com.volmit.wormholes.aperture.EntityHider$Policy valueOf(java.lang.String) -> valueOf
    46:46:void <init>(java.lang.String,int) -> <init>
    46:58:void <clinit>() -> <clinit>
com.volmit.wormholes.aperture.RemoteEntity -> com.volmit.wormholes.src.vulputate:
    int id -> id
    int aid -> aliquam
    org.bukkit.entity.EntityType remoteType -> lectus
    12:16:void <init>(int,org.bukkit.entity.EntityType,int) -> <init>
    21:21:int getRemoteId() -> mi
    27:27:org.bukkit.entity.EntityType getRemoteType() -> euismod
    33:33:java.lang.String getName() -> getName
    39:43:int hashCode() -> hashCode
    49:70:boolean equals(java.lang.Object) -> equals
    76:76:int getActualId() -> Pellentesque
com.volmit.wormholes.aperture.RemoteInstance -> com.volmit.wormholes.src.dictum:
    int getRemoteId() -> mi
    org.bukkit.entity.EntityType getRemoteType() -> euismod
    java.lang.String getName() -> getName
    int getActualId() -> Pellentesque
    20:30:com.volmit.wormholes.aperture.RemoteInstance create(org.bukkit.entity.Entity) -> Lorem
com.volmit.wormholes.aperture.RemotePlayer -> com.volmit.wormholes.src.Vestibulum:
    java.lang.String name -> name
    java.util.UUID uuid -> consequat
    13:17:void <init>(int,java.lang.String,java.util.UUID,int) -> <init>
    22:22:java.lang.String getName() -> getName
    27:27:java.util.UUID getUuid() -> getUuid
    33:37:int hashCode() -> hashCode
    43:78:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.aperture.VEntity -> com.volmit.wormholes.src.in:
    org.bukkit.entity.EntityType type -> neque
    int id -> id
    org.bukkit.Location location -> sagittis
    org.bukkit.Location last -> lorem
    org.bukkit.entity.Player viewer -> vel
    java.util.UUID uuid -> consequat
    float yaw -> yaw
    float pit -> Quisque
    float lya -> congue
    float lpi -> vitae
    35:46:void <init>(org.bukkit.entity.Player,org.bukkit.entity.EntityType,int,java.util.UUID,org.bukkit.Location) -> <init>
    50:57:void prelativeMove(double,double,double) -> Lorem
    61:70:void prelativeMoveLook(double,double,double,float,float) -> Lorem
    74:83:void pteleport(double,double,double,float,float) -> ipsum
    87:97:void plook(float,float) -> Lorem
    101:104:void despawn() -> at
    108:139:void spawn() -> iaculis
    146:153:void send(com.volmit.wormholes.util.AbstractPacket) -> Lorem
    157:157:org.bukkit.entity.EntityType getType() -> getType
    162:162:int getId() -> getId
    167:169:void move(double,double,double,float,float) -> dolor
    173:177:void look(float,float) -> ipsum
    181:183:void teleport(double,double,double,float,float) -> sit
    187:206:void flush() -> flush
    211:219:int hashCode() -> hashCode
    225:290:boolean equals(java.lang.Object) -> equals
    295:295:org.bukkit.Location getLocation() -> getLocation
    300:300:org.bukkit.Location getLast() -> urna
    305:305:org.bukkit.entity.Player getViewer() -> Proin
    310:310:java.util.UUID getUuid() -> getUuid
com.volmit.wormholes.aperture.WhitelistAperture -> com.volmit.wormholes.src.purus:
    7:8:void <init>() -> <init>
com.volmit.wormholes.config.Experimental -> com.volmit.wormholes.src.non:
com.volmit.wormholes.config.Permissable -> com.volmit.wormholes.src.mi:
    boolean canReload -> ornare
    boolean canCreate -> Integer
    boolean canDestroy -> commodo
    boolean canList -> ante
    boolean canUse -> cursus
    boolean canBuild -> canBuild
    boolean canConfigure -> suscipit
    org.bukkit.command.CommandSender p -> Mauris
    18:27:void <init>(org.bukkit.command.CommandSender) -> <init>
    31:39:boolean has(java.lang.String[]) -> Lorem
    44:44:boolean canReload() -> ac
    49:49:boolean canCreate() -> enim
    54:54:boolean canDestroy() -> posuere
    59:59:boolean canList() -> molestie
    64:64:boolean canUse() -> odio
    69:69:boolean canBuild() -> canBuild
    74:74:boolean canConfigure() -> a
    79:79:org.bukkit.command.CommandSender getP() -> facilisis
com.volmit.wormholes.event.PortalEvent -> com.volmit.wormholes.src.euismod:
    com.volmit.wormholes.portal.Portal portal -> mollis
    11:13:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
    17:17:com.volmit.wormholes.portal.Portal getPortal() -> In
com.volmit.wormholes.event.PortalPlayerEvent -> com.volmit.wormholes.src.Pellentesque:
    org.bukkit.entity.Player player -> player
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Player) -> <init>
    19:19:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.event.WormholeCreateEvent -> com.volmit.wormholes.src.at:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.event.WormholeLinkEvent -> com.volmit.wormholes.src.iaculis:
    com.volmit.wormholes.portal.Portal linked -> convallis
    11:14:void <init>(com.volmit.wormholes.portal.Portal,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:com.volmit.wormholes.portal.Portal getLinked() -> hac
com.volmit.wormholes.event.WormholePushEntityEvent -> com.volmit.wormholes.src.urna:
    org.bukkit.entity.Entity entity -> entity
    12:15:void <init>(com.volmit.wormholes.portal.Portal,org.bukkit.entity.Entity) -> <init>
    19:19:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.event.WormholeUnlinkEvent -> com.volmit.wormholes.src.Proin:
    9:10:void <init>(com.volmit.wormholes.portal.Portal) -> <init>
com.volmit.wormholes.exception.DuplicatePortalKeyException -> com.volmit.wormholes.src.ac:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalKeyException -> com.volmit.wormholes.src.enim:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.InvalidPortalPositionException -> com.volmit.wormholes.src.posuere:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.exception.PortalException -> com.volmit.wormholes.src.molestie:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.network.BaseBus -> com.volmit.wormholes.src.odio:
    com.volmit.wormholes.util.GList inbox -> viverra
    com.volmit.wormholes.util.GList outbox -> lacus
    11:14:void <init>() -> <init>
    19:19:com.volmit.wormholes.util.GList getInbox() -> habitasse
    25:25:com.volmit.wormholes.util.GList getOutbox() -> platea
    31:32:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    37:38:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    43:44:void read(com.volmit.wormholes.network.Transmission) -> dolor
    49:50:void cancel(com.volmit.wormholes.network.Transmission) -> sit
com.volmit.wormholes.network.CL -> com.volmit.wormholes.src.a:
    com.volmit.wormholes.network.CL L1 -> eu
    com.volmit.wormholes.network.CL L2 -> Phasellus
    com.volmit.wormholes.network.CL L3 -> accumsan
    com.volmit.wormholes.network.CL L4 -> egestas
    com.volmit.wormholes.network.CL[] $VALUES -> Praesent
    3:3:com.volmit.wormholes.network.CL[] values() -> values
    3:3:com.volmit.wormholes.network.CL valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    12:12:java.lang.String get() -> get
    3:8:void <clinit>() -> <clinit>
com.volmit.wormholes.network.LocalBus -> com.volmit.wormholes.src.facilisis:
    3:3:void <init>() -> <init>
    8:13:void flush() -> flush
com.volmit.wormholes.network.RemoteBus -> com.volmit.wormholes.src.In:
    15:18:void <init>() -> <init>
    23:38:void flush() -> flush
    42:43:void sendTransmission(com.volmit.wormholes.network.Transmission) -> amet
    50:88:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    94:101:void remoteForceSend(com.volmit.wormholes.network.Transmission) -> consectetur
com.volmit.wormholes.network.Transmission -> com.volmit.wormholes.src.hac:
    12:13:void <init>(byte[]) -> <init>
    17:22:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    26:27:void send() -> send
    31:32:void setId(long) -> Lorem
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> ipsum
    46:47:void setType(java.lang.String) -> setType
    51:51:long getId() -> getId
    56:56:java.lang.String getSource() -> getSource
    61:61:java.lang.String getDestination() -> dictumst
    66:66:java.lang.String getType() -> getType
    71:74:com.volmit.wormholes.network.Transmission createResponse() -> Nam
    79:80:void forceSend() -> metus
com.volmit.wormholes.network.TransmissionBus -> com.volmit.wormholes.src.habitasse:
    com.volmit.wormholes.util.GList getInbox() -> habitasse
    com.volmit.wormholes.util.GList getOutbox() -> platea
    void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    void read(com.volmit.wormholes.network.Transmission) -> dolor
    void cancel(com.volmit.wormholes.network.Transmission) -> sit
    void flush() -> flush
com.volmit.wormholes.network.VortexBus -> com.volmit.wormholes.src.platea:
    com.volmit.wormholes.network.LocalBus l -> eros
    com.volmit.wormholes.network.RemoteBus r -> et
    java.lang.String serverName -> serverName
    com.volmit.wormholes.util.GList servers -> sodales
    java.lang.Boolean online -> scelerisque
    java.lang.Long throttle -> velit
    26:34:void <init>() -> <init>
    39:43:com.volmit.wormholes.util.GList getInbox() -> habitasse
    49:53:com.volmit.wormholes.util.GList getOutbox() -> platea
    59:68:void inbox(com.volmit.wormholes.network.Transmission) -> Lorem
    73:82:void outbox(com.volmit.wormholes.network.Transmission) -> ipsum
    87:89:void read(com.volmit.wormholes.network.Transmission) -> dolor
    94:96:void cancel(com.volmit.wormholes.network.Transmission) -> sit
    101:132:void flush() -> flush
    136:137:void requestName() -> nisl
    141:142:void requestServers() -> magna
    147:164:void onPluginMessageReceived(java.lang.String,org.bukkit.entity.Player,byte[]) -> onPluginMessageReceived
    168:168:com.volmit.wormholes.network.LocalBus getL() -> tortor
    173:173:com.volmit.wormholes.network.RemoteBus getR() -> tempus
    178:178:java.lang.String getServerName() -> getServerName
    183:183:com.volmit.wormholes.util.GList getServers() -> sem
    188:188:java.lang.Boolean isOnline() -> sed
    193:193:java.lang.Long getThrottle() -> volutpat
    198:199:void forceFlush(com.volmit.wormholes.network.Transmission) -> adipiscing
com.volmit.wormholes.portal.LocalPortal -> com.volmit.wormholes.src.dictumst:
    com.volmit.wormholes.portal.PortalIdentity identity -> Donec
    com.volmit.wormholes.portal.PortalPosition position -> quam
    com.volmit.wormholes.projection.ProjectionPlane plane -> malesuada
    java.lang.String server -> quis
    java.lang.Boolean hasBeenValid -> ullamcorper
    java.lang.Boolean hasHadWormhole -> aliquet
    com.volmit.wormholes.aperture.AperturePlane apature -> nulla
    java.lang.Boolean saved -> Vivamus
    com.volmit.wormholes.portal.PortalSettings settings -> tellus
    40:50:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> <init>
    55:159:void update() -> update
    163:184:void reversePolarity() -> rhoncus
    188:196:com.volmit.wormholes.util.Direction getThrowDirection(org.bukkit.Location) -> sit
    201:224:boolean isPlayerLookingAt(org.bukkit.entity.Player) -> ipsum
    229:250:com.volmit.wormholes.util.GList getPlayersLookingAt() -> sapien
    256:256:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> orci
    262:262:com.volmit.wormholes.portal.PortalPosition getPosition() -> ligula
    268:268:com.volmit.wormholes.portal.PortalKey getKey() -> Sed
    274:279:boolean hasWormhole() -> ultrices
    285:290:boolean isWormholeMutex() -> imperdiet
    296:301:com.volmit.wormholes.wormhole.Wormhole getWormhole() -> turpis
    307:307:com.volmit.wormholes.service.MutexService getService() -> Nullam
    313:322:com.volmit.wormholes.util.DataCluster toData() -> vehicula
    329:329:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    334:339:java.lang.String getServer() -> getServer
    345:345:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> porta
    351:356:int hashCode() -> hashCode
    362:408:boolean equals(java.lang.Object) -> equals
    415:423:boolean hasValidIshKey() -> ultricies
    431:460:boolean hasValidKey() -> vestibulum
    466:466:com.volmit.wormholes.projection.ProjectionPlane getPlane() -> felis
    471:471:java.lang.Boolean getHasBeenValid() -> nec
    477:477:com.volmit.wormholes.aperture.AperturePlane getApature() -> tristique
    482:487:void destroy() -> destroy
    491:491:java.lang.Boolean getHasHadWormhole() -> lacinia
    496:496:java.lang.Boolean getSaved() -> Duis
    501:501:com.volmit.wormholes.portal.PortalSettings getSettings() -> tempor
    27:27:com.volmit.wormholes.portal.PortalPosition access$002(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.PortalPosition) -> Lorem
com.volmit.wormholes.portal.LocalPortal$1 -> com.volmit.wormholes.src.dictumst$1:
    com.volmit.wormholes.portal.LocalPortal this$0 -> leo
    164:164:void <init>(com.volmit.wormholes.portal.LocalPortal) -> <init>
    170:182:void run() -> run
com.volmit.wormholes.portal.LocalPortal$2 -> com.volmit.wormholes.src.dictumst$2:
    boolean[] val$b -> tincidunt
    com.volmit.wormholes.portal.LocalPortal this$0 -> leo
    212:212:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    216:221:void onTrace(org.bukkit.Location) -> amet
com.volmit.wormholes.portal.LocalPortal$3 -> com.volmit.wormholes.src.dictumst$3:
    com.volmit.wormholes.util.GList val$players -> luctus
    org.bukkit.entity.Player val$i -> Maecenas
    com.volmit.wormholes.portal.LocalPortal this$0 -> leo
    237:237:void <init>(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,com.volmit.wormholes.util.GList,org.bukkit.entity.Player) -> <init>
    241:246:void onTrace(org.bukkit.Location) -> amet
com.volmit.wormholes.portal.Portal -> com.volmit.wormholes.src.Nam:
    void update() -> update
    com.volmit.wormholes.portal.PortalIdentity getIdentity() -> orci
    com.volmit.wormholes.portal.PortalPosition getPosition() -> ligula
    boolean hasValidKey() -> vestibulum
    com.volmit.wormholes.portal.PortalKey getKey() -> Sed
    boolean hasWormhole() -> ultrices
    boolean isWormholeMutex() -> imperdiet
    com.volmit.wormholes.wormhole.Wormhole getWormhole() -> turpis
    com.volmit.wormholes.service.MutexService getService() -> Nullam
    com.volmit.wormholes.util.DataCluster toData() -> vehicula
    void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    java.lang.String getServer() -> getServer
    com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> porta
    com.volmit.wormholes.aperture.AperturePlane getApature() -> tristique
com.volmit.wormholes.portal.PortalIdentity -> com.volmit.wormholes.src.metus:
    com.volmit.wormholes.util.Axis axis -> est
    com.volmit.wormholes.util.Direction front -> hendrerit
    com.volmit.wormholes.util.Direction back -> Etiam
    com.volmit.wormholes.util.Direction up -> diam
    com.volmit.wormholes.util.Direction down -> dignissim
    com.volmit.wormholes.util.Direction left -> arcu
    com.volmit.wormholes.util.Direction right -> varius
    com.volmit.wormholes.portal.PortalKey key -> placerat
    19:28:void <init>(com.volmit.wormholes.util.Direction,com.volmit.wormholes.portal.PortalKey) -> <init>
    33:33:java.lang.String toString() -> toString
    38:46:com.volmit.wormholes.util.Axis getAx() -> eget
    51:51:com.volmit.wormholes.util.Direction getFront() -> semper
    56:56:com.volmit.wormholes.util.Direction getBack() -> aliquam
    61:61:com.volmit.wormholes.util.Direction getUp() -> lectus
    66:66:com.volmit.wormholes.util.Direction getDown() -> consequat
    71:71:com.volmit.wormholes.util.Direction getLeft() -> neque
    76:76:com.volmit.wormholes.util.Direction getRight() -> sagittis
    81:81:com.volmit.wormholes.util.Axis getAxis() -> lorem
    86:86:com.volmit.wormholes.portal.PortalKey getKey() -> Sed
    91:92:void setKey(com.volmit.wormholes.portal.PortalKey) -> ipsum
com.volmit.wormholes.portal.PortalKey -> com.volmit.wormholes.src.nisl:
    org.bukkit.DyeColor u -> Nunc
    org.bukkit.DyeColor d -> Ut
    org.bukkit.DyeColor l -> eleifend
    org.bukkit.DyeColor r -> nibh
    15:20:void <init>(byte[]) -> <init>
    23:28:void <init>(org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor,org.bukkit.DyeColor) -> <init>
    32:32:java.lang.String getSName() -> vel
    37:42:com.volmit.wormholes.portal.PortalKey fromSName(java.lang.String) -> dolor
    47:47:org.bukkit.DyeColor getU() -> Quisque
    52:53:void setU(org.bukkit.DyeColor) -> Lorem
    57:57:org.bukkit.DyeColor getD() -> congue
    62:63:void setD(org.bukkit.DyeColor) -> ipsum
    67:67:org.bukkit.DyeColor getL() -> vitae
    72:73:void setL(org.bukkit.DyeColor) -> dolor
    77:77:org.bukkit.DyeColor getR() -> ornare
    82:83:void setR(org.bukkit.DyeColor) -> sit
    87:87:byte[] toData() -> Integer
    93:95:java.lang.String toString() -> toString
    101:108:int hashCode() -> hashCode
    114:151:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.portal.PortalPosition -> com.volmit.wormholes.src.magna:
    com.volmit.wormholes.util.Cuboid pane -> faucibus
    com.volmit.wormholes.util.Cuboid ipane -> Class
    com.volmit.wormholes.util.Cuboid area -> aptent
    com.volmit.wormholes.util.Cuboid frameUp -> taciti
    com.volmit.wormholes.util.Cuboid frameDown -> sociosqu
    com.volmit.wormholes.util.Cuboid frameLeft -> ad
    com.volmit.wormholes.util.Cuboid frameRight -> litora
    com.volmit.wormholes.util.Cuboid iarea -> torquent
    com.volmit.wormholes.util.GList frame -> per
    com.volmit.wormholes.util.GList keyset -> conubia
    org.bukkit.Location centerUp -> nostra
    org.bukkit.Location centerDown -> inceptos
    org.bukkit.Location centerLeft -> himenaeos
    org.bukkit.Location centerRight -> Cras
    org.bukkit.Location center -> pellentesque
    org.bukkit.Location cornerUL -> ut
    org.bukkit.Location cornerUR -> finibus
    org.bukkit.Location cornerDL -> fermentum
    org.bukkit.Location cornerDR -> augue
    org.bukkit.Location corneriUL -> erat
    org.bukkit.Location corneriUR -> Aenean
    org.bukkit.Location corneriDL -> blandit
    org.bukkit.Location corneriDR -> risus
    com.volmit.wormholes.portal.PortalIdentity identity -> Donec
    com.volmit.wormholes.projection.BoundingBox boundingBox -> Fusce
    44:81:void <init>(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.util.Cuboid) -> <init>
    85:102:boolean intersects(org.bukkit.Location,org.bukkit.Location) -> Lorem
    107:107:org.bukkit.block.Block getRandomKeyBlock() -> commodo
    112:112:boolean intersects(org.bukkit.Location,org.bukkit.util.Vector) -> Lorem
    117:117:boolean isInsidePortal(org.bukkit.Location) -> consectetur
    122:136:com.volmit.wormholes.util.Cuboid getSideArea(org.bukkit.Location) -> adipiscing
    141:152:org.bukkit.Location ul() -> ante
    157:168:org.bukkit.Location ur() -> cursus
    173:184:org.bukkit.Location bl() -> suscipit
    189:200:org.bukkit.Location br() -> Mauris
    205:216:org.bukkit.Location uli() -> mollis
    221:232:org.bukkit.Location uri() -> convallis
    237:248:org.bukkit.Location bli() -> viverra
    253:264:org.bukkit.Location bri() -> lacus
    269:269:com.volmit.wormholes.util.Cuboid getOPane() -> eu
    274:274:com.volmit.wormholes.util.Cuboid getPane() -> Phasellus
    279:279:com.volmit.wormholes.util.Cuboid getArea() -> accumsan
    284:284:com.volmit.wormholes.util.Cuboid getFrameUp() -> egestas
    289:289:com.volmit.wormholes.util.Cuboid getFrameDown() -> Praesent
    294:294:com.volmit.wormholes.util.Cuboid getFrameLeft() -> eros
    299:299:com.volmit.wormholes.util.Cuboid getFrameRight() -> et
    304:304:com.volmit.wormholes.util.GList getFrame() -> sodales
    309:309:org.bukkit.Location getCenterUp() -> scelerisque
    314:314:org.bukkit.Location getCenterDown() -> velit
    319:319:org.bukkit.Location getCenterLeft() -> Donec
    324:324:org.bukkit.Location getCenterRight() -> quam
    329:329:org.bukkit.Location getCenter() -> getCenter
    334:334:org.bukkit.Location getCornerUL() -> malesuada
    339:339:org.bukkit.Location getCornerUR() -> quis
    344:344:org.bukkit.Location getCornerDL() -> ullamcorper
    349:349:org.bukkit.Location getCornerDR() -> aliquet
    354:354:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> orci
    359:359:com.volmit.wormholes.projection.BoundingBox getBoundingBox() -> nulla
    364:364:com.volmit.wormholes.util.GList getKeyBlocks() -> Vivamus
    369:369:com.volmit.wormholes.util.Cuboid getIpane() -> tellus
    374:374:com.volmit.wormholes.util.GList getKeyset() -> leo
    379:379:org.bukkit.Location getCorneriUL() -> tincidunt
    384:384:org.bukkit.Location getCorneriUR() -> luctus
    389:389:org.bukkit.Location getCorneriDL() -> Maecenas
    394:394:org.bukkit.Location getCorneriDR() -> est
    399:399:com.volmit.wormholes.util.Cuboid getIarea() -> hendrerit
com.volmit.wormholes.portal.PortalPosition$1 -> com.volmit.wormholes.src.magna$1:
    boolean[] val$traces -> maximus
    com.volmit.wormholes.portal.PortalPosition this$0 -> ex
    90:90:void <init>(com.volmit.wormholes.portal.PortalPosition,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,boolean[]) -> <init>
    94:99:void onTrace(org.bukkit.Location) -> amet
com.volmit.wormholes.portal.PortalSettings -> com.volmit.wormholes.src.tortor:
    boolean project -> porttitor
    boolean aparture -> nisi
    java.lang.String customName -> justo
    boolean hasCustomName -> Suspendisse
    boolean allowEntities -> elementum
    7:16:void <init>() -> <init>
    20:20:boolean isProject() -> Etiam
    25:25:boolean isAparture() -> diam
    30:30:java.lang.String getCustomName() -> getCustomName
    35:35:boolean isHasCustomName() -> dignissim
    40:40:boolean isAllowEntities() -> arcu
    45:46:void setProject(boolean) -> Lorem
    50:51:void setAparture(boolean) -> ipsum
    55:56:void setCustomName(java.lang.String) -> setCustomName
    60:61:void setHasCustomName(boolean) -> dolor
    65:66:void setAllowEntities(boolean) -> sit
com.volmit.wormholes.portal.RemotePortal -> com.volmit.wormholes.src.tempus:
    java.lang.String server -> quis
    com.volmit.wormholes.portal.PortalIdentity identity -> Donec
    17:20:void <init>(java.lang.String,com.volmit.wormholes.portal.PortalIdentity) -> <init>
    26:26:void update() -> update
    31:31:com.volmit.wormholes.portal.PortalIdentity getIdentity() -> orci
    37:37:com.volmit.wormholes.portal.PortalPosition getPosition() -> ligula
    43:43:com.volmit.wormholes.portal.PortalKey getKey() -> Sed
    49:49:boolean hasWormhole() -> ultrices
    55:55:boolean isWormholeMutex() -> imperdiet
    61:61:com.volmit.wormholes.wormhole.Wormhole getWormhole() -> turpis
    67:67:com.volmit.wormholes.service.MutexService getService() -> Nullam
    73:82:com.volmit.wormholes.util.DataCluster toData() -> vehicula
    88:91:void fromData(com.volmit.wormholes.util.DataCluster) -> dolor
    96:96:java.lang.String getServer() -> getServer
    102:107:com.volmit.wormholes.projection.ProjectionPlane getProjectionPlane() -> porta
    113:117:int hashCode() -> hashCode
    123:158:boolean equals(java.lang.Object) -> equals
    164:164:boolean hasValidKey() -> vestibulum
    170:170:com.volmit.wormholes.aperture.AperturePlane getApature() -> tristique
com.volmit.wormholes.projection.ArrivalVector -> com.volmit.wormholes.src.sem:
    org.bukkit.util.Vector velocity -> mattis
    org.bukkit.util.Vector direction -> primis
    org.bukkit.util.Vector offset -> cubilia
    12:16:void <init>(org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    20:20:org.bukkit.util.Vector getVelocity() -> getVelocity
    25:26:void setVelocity(org.bukkit.util.Vector) -> setVelocity
    30:30:org.bukkit.util.Vector getDirection() -> getDirection
    35:36:void setDirection(org.bukkit.util.Vector) -> setDirection
    40:40:org.bukkit.util.Vector getOffset() -> varius
    45:46:void setOffset(org.bukkit.util.Vector) -> Lorem
    51:62:java.lang.String toString() -> toString
    67:80:void fromString(java.lang.String) -> sit
com.volmit.wormholes.projection.BaseViewportRenderer -> com.volmit.wormholes.src.sed:
    com.volmit.wormholes.projection.Viewport viewport -> Curae
    int stage -> habitant
    12:15:void <init>(com.volmit.wormholes.projection.Viewport,int) -> <init>
    20:20:org.bukkit.entity.Player getPlayer() -> getPlayer
    26:26:com.volmit.wormholes.projection.Viewport getViewport() -> placerat
    32:32:int getStage() -> Nunc
    38:38:int getMaxStage() -> Ut
    44:44:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> eleifend
    50:53:com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> nibh
    59:62:com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> faucibus
    68:68:com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> Lorem
    74:74:boolean isComplete() -> isComplete
com.volmit.wormholes.projection.BoundingBox -> com.volmit.wormholes.src.volutpat:
    com.volmit.wormholes.util.GList inside -> morbi
    com.volmit.wormholes.util.GList entering -> senectus
    com.volmit.wormholes.util.GList exiting -> netus
    com.volmit.wormholes.util.Cuboid cuboid -> fames
    15:20:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    26:55:void flush() -> flush
    59:59:boolean isInside(org.bukkit.entity.Entity) -> ipsum
    64:64:boolean isEntering(org.bukkit.entity.Entity) -> dolor
    69:69:boolean isEnteringOrInside(org.bukkit.entity.Entity) -> sit
    74:74:boolean isExiting(org.bukkit.entity.Entity) -> amet
    79:79:com.volmit.wormholes.util.GList getInside() -> Class
    84:84:com.volmit.wormholes.util.GList getEntering() -> aptent
    89:89:com.volmit.wormholes.util.GList getExiting() -> taciti
    94:94:com.volmit.wormholes.util.Cuboid getCuboid() -> sociosqu
com.volmit.wormholes.projection.MBC -> com.volmit.wormholes.src.rhoncus:
    com.volmit.wormholes.util.MaterialBlock mb -> pharetra
    org.bukkit.util.Vector v -> potenti
    14:16:void <init>(long) -> <init>
    21:21:java.lang.String toString() -> toString
    25:28:void <init>(com.volmit.wormholes.util.MaterialBlock,org.bukkit.util.Vector) -> <init>
    33:38:long toLong() -> ad
    44:52:void fromLong(long) -> ipsum
    56:56:com.volmit.wormholes.util.MaterialBlock getMb() -> litora
    61:61:org.bukkit.util.Vector getV() -> torquent
    66:67:void setMb(com.volmit.wormholes.util.MaterialBlock) -> Lorem
    71:72:void setV(org.bukkit.util.Vector) -> ipsum
com.volmit.wormholes.projection.NulledViewport -> com.volmit.wormholes.src.sapien:
    11:12:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    18:18:void rebuild() -> per
    23:23:boolean contains(org.bukkit.Location) -> elit
com.volmit.wormholes.projection.PartialRenderer -> com.volmit.wormholes.src.orci:
    com.volmit.wormholes.projection.ProjectionSet queue -> pretium
    com.volmit.wormholes.projection.ProjectionSet rendered -> dui
    com.volmit.wormholes.projection.Viewport view -> massa
    12:16:void <init>(com.volmit.wormholes.projection.Viewport) -> <init>
    20:20:boolean isComplete() -> isComplete
    25:33:com.volmit.wormholes.util.Cuboid next() -> conubia
    38:38:com.volmit.wormholes.projection.ProjectionSet getQueue() -> nostra
    43:43:com.volmit.wormholes.projection.ProjectionSet getRendered() -> inceptos
    48:48:com.volmit.wormholes.projection.Viewport getView() -> himenaeos
com.volmit.wormholes.projection.ProjectionPlane -> com.volmit.wormholes.src.ligula:
    com.volmit.wormholes.util.GMap mapping -> gravida
    com.volmit.wormholes.util.GMap remapCache -> fringilla
    com.volmit.wormholes.util.GMap ormapCache -> Nulla
    28:32:void <init>() -> <init>
    36:36:com.volmit.wormholes.util.GMap getMapping() -> Cras
    41:41:boolean hasContent() -> pellentesque
    46:46:org.bukkit.util.Vector ovap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> Lorem
    51:51:com.volmit.wormholes.util.GMap omap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> dolor
    56:78:com.volmit.wormholes.util.GMap remap(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> Lorem
    83:98:void addSuperCompressed(byte[]) -> ipsum
    102:102:com.volmit.wormholes.util.GList getSuperCompressedByteCull(int) -> ipsum
    107:131:com.volmit.wormholes.util.GList getSuperCompressed(int) -> dolor
    136:138:void blockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    143:174:void sample(org.bukkit.Location,int,boolean) -> Lorem
    178:178:com.volmit.wormholes.util.GMap getRemapCache() -> ut
    183:183:com.volmit.wormholes.util.GMap getOrmapCache() -> finibus
com.volmit.wormholes.projection.ProjectionSet -> com.volmit.wormholes.src.Sed:
    com.volmit.wormholes.util.GList cuboids -> facilisi
    14:16:void <init>() -> <init>
    20:23:void <init>(com.volmit.wormholes.util.GList) -> <init>
    27:29:com.volmit.wormholes.util.Cuboid pop() -> fermentum
    34:38:void remove(int) -> remove
    42:46:void keep(int) -> sit
    50:50:com.volmit.wormholes.util.Cuboid get(int) -> amet
    55:55:int size() -> size
    60:61:void add(com.volmit.wormholes.util.GList) -> Lorem
    65:66:void add(com.volmit.wormholes.util.Cuboid) -> Lorem
    70:70:com.volmit.wormholes.util.GList get() -> augue
    75:82:com.volmit.wormholes.util.GList getBlocks() -> erat
    87:96:com.volmit.wormholes.util.GList getEntities() -> Aenean
    101:114:boolean contains(org.bukkit.Location) -> elit
    120:123:int hashCode() -> hashCode
    128:128:com.volmit.wormholes.projection.ProjectionSet copy() -> blandit
    134:158:boolean equals(java.lang.Object) -> equals
    163:164:void clear() -> clear
com.volmit.wormholes.projection.QueuedChunk -> com.volmit.wormholes.src.ultrices:
    int bytes -> libero
    int dist -> condimentum
    int lf -> interdum
    void run() -> run
    12:16:void <init>(int,int,int) -> <init>
    20:20:int getBytes() -> getBytes
    25:25:int getDist() -> risus
    30:30:int getLf() -> Fusce
com.volmit.wormholes.projection.RasteredChunk -> com.volmit.wormholes.src.imperdiet:
    int x -> x
    int z -> z
    com.comphenix.protocol.wrappers.MultiBlockChangeInfo[][][] mbi -> dapibus
    org.bukkit.World world -> world
    27:32:void <init>(int,int,org.bukkit.World) -> <init>
    36:37:void flush() -> flush
    43:50:void put(int,int,int,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    54:121:void project(org.bukkit.entity.Player) -> dolor
com.volmit.wormholes.projection.RasteredChunk$1 -> com.volmit.wormholes.src.imperdiet$1:
    org.bukkit.entity.Player val$p -> sollicitudin
    com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange val$w -> Aliquam
    com.volmit.wormholes.projection.RasteredChunk this$0 -> auctor
    103:103:void <init>(com.volmit.wormholes.projection.RasteredChunk,int,int,int,org.bukkit.entity.Player,com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange) -> <init>
    109:118:void run() -> run
com.volmit.wormholes.projection.RasteredPlayer -> com.volmit.wormholes.src.turpis:
    com.volmit.wormholes.util.GMap queuedLayer -> Curabitur
    com.volmit.wormholes.util.GMap ghostLayer -> feugiat
    org.bukkit.entity.Player p -> efficitur
    16:20:void <init>(org.bukkit.entity.Player) -> <init>
    24:25:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    31:77:void flush() -> flush
    81:99:void prepareChunks(com.volmit.wormholes.util.GMap) -> Lorem
    103:109:void dequeueAll() -> maximus
    113:113:boolean isQueued(org.bukkit.Location) -> Morbi
    118:118:int queueSize() -> ex
com.volmit.wormholes.projection.RasteredServer -> com.volmit.wormholes.src.Nullam:
    com.volmit.wormholes.util.GMap projections -> laoreet
    13:15:void <init>() -> <init>
    19:25:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    29:33:void flush() -> flush
    37:45:boolean canFlush() -> porttitor
com.volmit.wormholes.projection.RasteredSystem -> com.volmit.wormholes.src.vehicula:
    com.volmit.wormholes.util.GMap rasteredPlayers -> nunc
    boolean flushing -> venenatis
    com.volmit.wormholes.util.GMap queueSend -> rutrum
    20:24:void <init>() -> <init>
    28:32:void dequeueAll() -> maximus
    36:42:void dequeue(org.bukkit.entity.Player,org.bukkit.Location) -> Lorem
    46:51:boolean isQueued(org.bukkit.entity.Player,org.bukkit.Location) -> ipsum
    56:62:void queue(org.bukkit.entity.Player,org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    66:66:com.volmit.wormholes.projection.RasteredPlayer get(org.bukkit.entity.Player) -> sit
    71:101:void flushRasterQueue() -> nisi
    105:132:void runNext(com.volmit.wormholes.util.GList) -> ipsum
    136:142:void queueRaster(org.bukkit.entity.Player,com.volmit.wormholes.projection.QueuedChunk) -> Lorem
    146:172:void flush() -> flush
com.volmit.wormholes.projection.RasteredWorld -> com.volmit.wormholes.src.porta:
    com.volmit.wormholes.util.GMap chunks -> mauris
    org.bukkit.World world -> world
    16:19:void <init>(org.bukkit.World) -> <init>
    23:32:void flush() -> flush
    36:36:boolean hasChunks() -> justo
    41:43:void queue(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    47:51:void createChunkIfNull(int,int) -> Lorem
com.volmit.wormholes.projection.RenderMesh -> com.volmit.wormholes.src.ultricies:
    com.volmit.wormholes.util.GMap set -> lobortis
    12:14:void <init>() -> <init>
    18:23:com.volmit.wormholes.projection.PartialRenderer getRenderer(org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.projection.Viewport) -> Lorem
    28:29:void removePortal(com.volmit.wormholes.portal.LocalPortal) -> sit
com.volmit.wormholes.projection.RenderSet -> com.volmit.wormholes.src.vestibulum:
    com.volmit.wormholes.portal.LocalPortal portal -> bibendum
    com.volmit.wormholes.util.GMap renderers -> Orci
    13:16:void <init>(com.volmit.wormholes.portal.LocalPortal) -> <init>
    20:20:com.volmit.wormholes.portal.LocalPortal getPortal() -> Suspendisse
    25:25:com.volmit.wormholes.util.GMap getRenderers() -> elementum
    30:35:com.volmit.wormholes.projection.PartialRenderer getRenderer(com.volmit.wormholes.projection.Viewport,org.bukkit.entity.Player) -> Lorem
    40:47:void update() -> update
com.volmit.wormholes.projection.Viewport -> com.volmit.wormholes.src.felis:
    org.bukkit.entity.Player p -> efficitur
    com.volmit.wormholes.portal.Portal portal -> mollis
    com.volmit.wormholes.projection.ProjectionSet set -> natoque
    22:26:void <init>(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> <init>
    30:34:void wipe() -> mattis
    38:64:void rebuild() -> per
    68:68:com.volmit.wormholes.util.GList getEntities() -> Aenean
    73:78:boolean contains(org.bukkit.Location) -> elit
    83:83:org.bukkit.Location getIris() -> primis
    88:88:org.bukkit.entity.Player getP() -> cubilia
    93:93:com.volmit.wormholes.portal.Portal getPortal() -> In
    99:104:int hashCode() -> hashCode
    110:156:boolean equals(java.lang.Object) -> equals
    161:161:com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> eleifend
com.volmit.wormholes.projection.ViewportRenderer -> com.volmit.wormholes.src.nec:
    org.bukkit.entity.Player getPlayer() -> getPlayer
    com.volmit.wormholes.projection.Viewport getViewport() -> placerat
    int getStage() -> Nunc
    int getMaxStage() -> Ut
    com.volmit.wormholes.projection.ProjectionSet getProjectionSet() -> eleifend
    com.volmit.wormholes.projection.ProjectionSet getRenderedStages() -> nibh
    com.volmit.wormholes.projection.ProjectionSet getNonRenderedStages() -> faucibus
    com.volmit.wormholes.util.Cuboid getProjectionStage(int) -> Lorem
    boolean isComplete() -> isComplete
com.volmit.wormholes.provider.AutomagicalProvider -> com.volmit.wormholes.src.tristique:
    33:35:void <init>() -> <init>
    40:46:void onFlush() -> Curae
    51:70:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    75:239:void ona(org.bukkit.event.player.PlayerInteractEvent) -> ipsum
com.volmit.wormholes.provider.AutomagicalProvider$1 -> com.volmit.wormholes.src.tristique$1:
    com.volmit.wormholes.util.Direction val$md -> penatibus
    com.volmit.wormholes.util.Cuboid val$cx -> magnis
    org.bukkit.event.player.PlayerInteractEvent val$e -> dis
    com.volmit.wormholes.provider.AutomagicalProvider this$0 -> parturient
    206:206:void <init>(com.volmit.wormholes.provider.AutomagicalProvider,com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid,org.bukkit.event.player.PlayerInteractEvent) -> <init>
    212:237:void run() -> run
com.volmit.wormholes.provider.BaseProvider -> com.volmit.wormholes.src.lacinia:
    com.volmit.wormholes.projection.RasteredSystem rasterer -> montes
    com.volmit.wormholes.util.GList moved -> nascetur
    com.volmit.wormholes.util.GList conf -> ridiculus
    long lastms -> mus
    com.volmit.wormholes.util.GList debug -> Interdum
    52:61:void <init>() -> <init>
    65:69:void dedebug(org.bukkit.entity.Player) -> amet
    73:77:void debug(org.bukkit.entity.Player) -> consectetur
    81:89:void errorMessage(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> Lorem
    93:93:boolean isDebugging(org.bukkit.entity.Player) -> adipiscing
    99:100:void flush() -> flush
    void onFlush() -> Curae
    106:115:com.volmit.wormholes.util.GList getBase(int) -> consectetur
    120:129:com.volmit.wormholes.util.GList getBaseSqrt(int) -> adipiscing
    135:147:com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    154:184:void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    188:215:void forceWipe(com.volmit.wormholes.portal.LocalPortal) -> consectetur
    220:243:void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    248:277:void loadAllPortals() -> habitant
    281:562:boolean configure(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> Lorem
    568:573:void dfs() -> morbi
    578:583:void dfd() -> senectus
    587:591:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Cuboid) -> Lorem
    597:615:com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    622:623:void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    628:628:com.volmit.wormholes.projection.RasteredSystem getRasterer() -> netus
    634:636:com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    642:642:boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    648:648:boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    654:658:void movePlayer(org.bukkit.entity.Player) -> elit
    663:663:boolean hasMoved(org.bukkit.entity.Player) -> Morbi
    669:703:com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    47:47:com.volmit.wormholes.util.GList access$000(com.volmit.wormholes.provider.BaseProvider) -> Lorem
    47:47:long access$100(com.volmit.wormholes.provider.BaseProvider) -> ipsum
    47:47:long access$102(com.volmit.wormholes.provider.BaseProvider,long) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1 -> com.volmit.wormholes.src.lacinia$1:
    org.bukkit.entity.Player val$p -> sollicitudin
    com.volmit.wormholes.portal.LocalPortal val$l -> aggregate
    com.volmit.wormholes.provider.BaseProvider this$0 -> architect
    294:294:void <init>(com.volmit.wormholes.provider.BaseProvider,java.lang.Integer,org.bukkit.entity.Player,com.volmit.wormholes.portal.LocalPortal) -> <init>
    298:556:void run() -> run
com.volmit.wormholes.provider.BaseProvider$1$1 -> com.volmit.wormholes.src.lacinia$1$1:
    com.volmit.wormholes.provider.BaseProvider$1 this$1 -> benchmark
    299:299:void <init>(com.volmit.wormholes.provider.BaseProvider$1,org.bukkit.entity.Player,boolean) -> <init>
    304:304:void onUpdate() -> fames
    309:342:void onSelect(java.lang.String,int) -> Lorem
    347:349:void onOpen() -> pharetra
    354:374:java.lang.String onEnable(java.lang.String) -> amet
    380:400:java.lang.String onDisable(java.lang.String) -> consectetur
    406:408:void onClose() -> potenti
    413:537:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.provider.BaseProvider$1$1$1 -> com.volmit.wormholes.src.lacinia$1$1$1:
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> brand
    443:443:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,java.lang.Integer) -> <init>
    447:448:void run() -> run
com.volmit.wormholes.provider.BaseProvider$1$1$2 -> com.volmit.wormholes.src.lacinia$1$1$2:
    org.bukkit.entity.Player val$p -> sollicitudin
    com.volmit.wormholes.provider.BaseProvider$1$1 this$2 -> brand
    469:469:void <init>(com.volmit.wormholes.provider.BaseProvider$1$1,org.bukkit.entity.Player,boolean,org.bukkit.entity.Player) -> <init>
    474:474:void onUpdate() -> fames
    479:480:void onSelect(java.lang.String,int) -> Lorem
    485:486:void onOpen() -> pharetra
    491:491:java.lang.String onEnable(java.lang.String) -> amet
    497:497:java.lang.String onDisable(java.lang.String) -> consectetur
    503:504:void onClose() -> potenti
    509:521:void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.provider.PortalProvider -> com.volmit.wormholes.src.Duis:
    void flush() -> flush
    void loadAllPortals() -> habitant
    void save(com.volmit.wormholes.portal.LocalPortal) -> adipiscing
    com.volmit.wormholes.portal.LocalPortal createPortal(com.volmit.wormholes.portal.PortalIdentity,com.volmit.wormholes.portal.PortalPosition) -> Lorem
    boolean hasMoved(org.bukkit.entity.Player) -> Morbi
    void movePlayer(org.bukkit.entity.Player) -> elit
    void destroyPortal(com.volmit.wormholes.portal.LocalPortal) -> elit
    com.volmit.wormholes.projection.RasteredSystem getRasterer() -> netus
    com.volmit.wormholes.projection.Viewport getViewport(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> Lorem
    boolean isNear(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> ipsum
    boolean canSee(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> dolor
    com.volmit.wormholes.util.GMap getViewport(com.volmit.wormholes.portal.Portal) -> Lorem
    com.volmit.wormholes.portal.PortalKey buildKey(com.volmit.wormholes.portal.PortalPosition) -> Lorem
    void wipe(com.volmit.wormholes.portal.LocalPortal) -> amet
    void dfs() -> morbi
    void dfd() -> senectus
com.volmit.wormholes.service.ApertureService -> com.volmit.wormholes.src.tempor:
    com.volmit.wormholes.aperture.BlacklistAperture b -> cultivate
    com.volmit.wormholes.util.GMap remoteApaturePlanes -> deliver
    com.volmit.wormholes.util.GMap blacklistQueue -> deploy
    com.volmit.wormholes.util.GMap blacklisted -> disintermediate
    40:45:void <init>() -> <init>
    49:193:void flush() -> flush
    197:237:void layer3Stream(byte[]) -> dolor
    241:247:void hideEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> consectetur
    251:257:void showEntity(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> adipiscing
    261:265:void showAll(org.bukkit.entity.Player) -> pulvinar
    269:274:com.volmit.wormholes.util.GList getHidden(org.bukkit.entity.Player) -> vulputate
    279:279:com.volmit.wormholes.aperture.BlacklistAperture getB() -> pretium
    284:284:com.volmit.wormholes.util.GMap getRemoteApaturePlanes() -> dui
    289:289:com.volmit.wormholes.util.GMap getBlacklistQueue() -> massa
    294:294:com.volmit.wormholes.util.GMap getBlacklisted() -> gravida
com.volmit.wormholes.service.EffectService -> com.volmit.wormholes.src.eget:
    20:22:void <init>() -> <init>
    26:39:void strikePortal(com.volmit.wormholes.portal.LocalPortal) -> Morbi
    43:51:void strike(com.volmit.wormholes.portal.LocalPortal) -> pulvinar
    55:81:void strikeAll(com.volmit.wormholes.portal.LocalPortal) -> vulputate
    85:89:void push(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    93:97:void throwBack(org.bukkit.entity.Entity,org.bukkit.util.Vector,com.volmit.wormholes.portal.LocalPortal) -> ipsum
    101:101:org.bukkit.util.Vector throwBackVector(org.bukkit.entity.Entity,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    106:112:void ambient(com.volmit.wormholes.portal.LocalPortal) -> dictum
    116:170:void rise(com.volmit.wormholes.portal.LocalPortal) -> Vestibulum
    174:228:void riseNew(com.volmit.wormholes.portal.LocalPortal) -> in
    232:276:void phaseDeny(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> Lorem
    280:324:void phase(com.volmit.wormholes.portal.LocalPortal,org.bukkit.Location) -> ipsum
    328:343:void visualize(com.volmit.wormholes.portal.LocalPortal) -> purus
    347:353:void created(com.volmit.wormholes.portal.LocalPortal) -> non
    357:365:void destroyed(com.volmit.wormholes.portal.LocalPortal) -> mi
com.volmit.wormholes.service.EffectService$1 -> com.volmit.wormholes.src.eget$1:
    com.volmit.wormholes.portal.LocalPortal val$p -> drive
    com.volmit.wormholes.service.EffectService this$0 -> e
    31:31:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,com.volmit.wormholes.portal.LocalPortal) -> <init>
    35:36:void run() -> run
com.volmit.wormholes.service.EffectService$2 -> com.volmit.wormholes.src.eget$2:
    org.bukkit.block.Block val$i -> enable
    com.volmit.wormholes.portal.LocalPortal val$p -> drive
    com.volmit.wormholes.service.EffectService this$0 -> e
    58:58:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.block.Block,com.volmit.wormholes.portal.LocalPortal) -> <init>
    62:78:void run() -> run
com.volmit.wormholes.service.EffectService$3 -> com.volmit.wormholes.src.eget$3:
    org.bukkit.util.Vector val$vx -> embrace
    org.bukkit.Location val$l -> empower
    com.volmit.wormholes.service.EffectService this$0 -> e
    335:335:void <init>(com.volmit.wormholes.service.EffectService,java.lang.Integer,org.bukkit.util.Vector,org.bukkit.Location) -> <init>
    339:340:void run() -> run
com.volmit.wormholes.service.EntityService -> com.volmit.wormholes.src.semper:
    com.volmit.wormholes.util.GMap entities -> engage
    com.volmit.wormholes.util.GMap aentities -> engineer
    20:23:void <init>() -> <init>
    27:62:void flush() -> flush
    66:102:void set(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal,com.volmit.wormholes.aperture.RemoteInstance,org.bukkit.Location) -> Lorem
com.volmit.wormholes.service.IOService -> com.volmit.wormholes.src.aliquam:
    17:19:void <init>() -> <init>
    25:33:void doConfig() -> id
    37:58:void doConfigBasic() -> fringilla
    62:83:void doConfigExperimental() -> Nulla
    89:97:com.volmit.wormholes.util.DataCluster load(java.io.File) -> Lorem
    104:111:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.service.MutexService -> com.volmit.wormholes.src.lectus:
    com.volmit.wormholes.util.GList insideThrottle -> enhance
    com.volmit.wormholes.util.GMap pendingPulls -> envisioneer
    java.lang.Integer broadcastInterval -> evolve
    com.volmit.wormholes.util.GMap waiting -> expedite
    com.volmit.wormholes.util.GMap arrivals -> exploit
    75:82:void <init>() -> <init>
    86:91:void sendArrival(com.volmit.wormholes.portal.RemotePortal,org.bukkit.entity.Player,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    95:95:com.volmit.wormholes.projection.ArrivalVector getArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> ipsum
    100:100:boolean hasArrival(com.volmit.wormholes.portal.LocalPortal,org.bukkit.entity.Player) -> dolor
    105:111:void setArrival(com.volmit.wormholes.portal.LocalPortal,java.util.UUID,com.volmit.wormholes.projection.ArrivalVector) -> Lorem
    115:116:void setPending(java.util.UUID,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    120:124:void addThrottle(org.bukkit.entity.Entity) -> consectetur
    129:130:void on(org.bukkit.event.player.PlayerItemHeldEvent) -> Lorem
    134:135:void removeThrottle(org.bukkit.entity.Entity) -> adipiscing
    139:139:boolean isThrottled(org.bukkit.entity.Entity) -> elit
    144:152:void addLocalPortal(com.volmit.wormholes.portal.Portal) -> ipsum
    156:161:void removeLocalPortal(com.volmit.wormholes.portal.Portal) -> dolor
    165:169:void removeLocalPortalReverse(com.volmit.wormholes.portal.Portal) -> sit
    173:183:com.volmit.wormholes.portal.Portal[] getPortals(com.volmit.wormholes.portal.PortalKey) -> dolor
    188:196:com.volmit.wormholes.portal.Portal getPortal(com.volmit.wormholes.portal.PortalKey,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    202:209:void on(org.bukkit.event.world.ChunkUnloadEvent) -> ipsum
    214:223:void on(org.bukkit.event.player.PlayerMoveEvent) -> Lorem
    227:251:void handleArrivalIntent(org.bukkit.entity.Player) -> dictum
    255:255:boolean hasLink(com.volmit.wormholes.portal.LocalPortal) -> euismod
    260:260:boolean isLinkMutex(com.volmit.wormholes.portal.LocalPortal) -> Pellentesque
    265:265:boolean hasWormhole(com.volmit.wormholes.portal.LocalPortal) -> at
    270:270:boolean isMutexWormhole(com.volmit.wormholes.portal.LocalPortal) -> iaculis
    275:280:com.volmit.wormholes.wormhole.Wormhole getWormhole(com.volmit.wormholes.portal.LocalPortal) -> urna
    285:301:boolean isPositionValid(com.volmit.wormholes.portal.PortalPosition) -> ipsum
    306:323:boolean isKeyValid(com.volmit.wormholes.portal.PortalKey) -> sit
    328:345:boolean isKeyValidAlready(com.volmit.wormholes.portal.PortalKey) -> amet
    350:379:void flush() -> flush
    383:384:void dequeue(com.volmit.wormholes.portal.Portal) -> amet
    388:406:void updateThrottles() -> facilisi
    410:593:void broadcastPortals() -> libero
    597:651:void beginStream(java.lang.String,java.lang.String,java.lang.String,com.volmit.wormholes.portal.LocalPortal) -> Lorem
    655:663:void layer2StreamRequest(com.volmit.wormholes.portal.Portal) -> consectetur
    667:711:void layer2Stream(byte[]) -> sit
    715:757:void sendPlayerThrough(org.bukkit.entity.Player,java.util.UUID,com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,java.lang.Runnable) -> Lorem
    761:765:void updatePortals() -> condimentum
    770:795:void on(org.bukkit.event.player.PlayerJoinEvent) -> Lorem
    799:807:com.volmit.wormholes.util.GList getPortals() -> interdum
    812:812:com.volmit.wormholes.util.GList getLocalPortals() -> dapibus
    817:817:com.volmit.wormholes.util.GList getInsideThrottle() -> sollicitudin
    822:822:java.lang.Integer getBroadcastInterval() -> Aliquam
    827:827:com.volmit.wormholes.util.GMap getMutexPortals() -> auctor
    832:832:com.volmit.wormholes.util.GMap getPendingPulls() -> Curabitur
    837:841:void dequeueAll() -> maximus
    846:873:void on(org.bukkit.event.block.BlockBreakEvent) -> Lorem
    877:895:void blockChange(org.bukkit.Location,com.volmit.wormholes.portal.Portal) -> Lorem
    900:908:void sendBlockChange(org.bukkit.util.Vector,com.volmit.wormholes.util.MaterialBlock,com.volmit.wormholes.portal.Portal) -> Lorem
    913:930:void on(org.bukkit.event.block.BlockPlaceEvent) -> Lorem
    934:934:boolean canBuild(org.bukkit.entity.Player) -> Vestibulum
    939:939:boolean canDestroy(org.bukkit.entity.Player) -> in
    944:948:void updateEverything(java.lang.Runnable) -> Lorem
    952:954:void globalReload() -> feugiat
    66:66:com.volmit.wormholes.util.GMap access$000(com.volmit.wormholes.service.MutexService) -> Lorem
com.volmit.wormholes.service.MutexService$1 -> com.volmit.wormholes.src.lectus$1:
    com.volmit.wormholes.portal.LocalPortal val$lp -> extend
    java.lang.String val$as -> facilitate
    java.lang.String val$to -> generate
    com.volmit.wormholes.service.MutexService this$0 -> grow
    608:608:void <init>(com.volmit.wormholes.service.MutexService,com.volmit.wormholes.portal.LocalPortal,java.lang.String,java.lang.String) -> <init>
    614:649:void async() -> efficitur
com.volmit.wormholes.service.MutexService$1$1 -> com.volmit.wormholes.src.lectus$1$1:
    java.lang.Byte[] val$i -> harness
    com.volmit.wormholes.service.MutexService$1 this$1 -> implement
    619:619:void <init>(com.volmit.wormholes.service.MutexService$1,java.lang.Byte[]) -> <init>
    625:640:void async() -> efficitur
com.volmit.wormholes.service.MutexService$2 -> com.volmit.wormholes.src.lectus$2:
    byte[] val$msgbytes -> incentivize
    com.volmit.wormholes.service.MutexService this$0 -> grow
    673:673:void <init>(com.volmit.wormholes.service.MutexService,byte[]) -> <init>
    679:709:void async() -> efficitur
com.volmit.wormholes.service.MutexService$3 -> com.volmit.wormholes.src.lectus$3:
    org.bukkit.entity.Player val$p -> sollicitudin
    java.lang.Runnable val$r -> incubate
    com.volmit.wormholes.portal.Portal val$to -> innovate
    java.util.UUID val$id -> integrate
    org.bukkit.util.Vector val$velocity -> iterate
    org.bukkit.util.Vector val$direction -> leverage
    org.bukkit.util.Vector val$entry -> matrix
    com.volmit.wormholes.util.FinalInteger val$cd -> maximize
    com.volmit.wormholes.portal.LocalPortal val$source -> mesh
    com.volmit.wormholes.service.MutexService this$0 -> grow
    718:718:void <init>(com.volmit.wormholes.service.MutexService,int,org.bukkit.entity.Player,java.lang.Runnable,com.volmit.wormholes.portal.Portal,java.util.UUID,org.bukkit.util.Vector,org.bukkit.util.Vector,org.bukkit.util.Vector,com.volmit.wormholes.util.FinalInteger,com.volmit.wormholes.portal.LocalPortal) -> <init>
    722:754:void run() -> run
com.volmit.wormholes.service.MutexService$4 -> com.volmit.wormholes.src.lectus$4:
    org.bukkit.event.player.PlayerJoinEvent val$e -> monetize
    org.bukkit.Location val$position -> morph
    com.volmit.wormholes.projection.ArrivalVector val$av -> optimize
    com.volmit.wormholes.service.MutexService this$0 -> grow
    784:784:void <init>(com.volmit.wormholes.service.MutexService,org.bukkit.event.player.PlayerJoinEvent,org.bukkit.Location,com.volmit.wormholes.projection.ArrivalVector) -> <init>
    788:790:void run() -> run
com.volmit.wormholes.service.MutexService$5 -> com.volmit.wormholes.src.lectus$5:
    com.volmit.wormholes.portal.Portal val$p -> orchestrate
    org.bukkit.Location val$l -> empower
    com.volmit.wormholes.service.MutexService this$0 -> grow
    878:878:void <init>(com.volmit.wormholes.service.MutexService,com.volmit.wormholes.portal.Portal,org.bukkit.Location) -> <init>
    882:893:void run() -> run
com.volmit.wormholes.service.PortalRegistry -> com.volmit.wormholes.src.consequat:
    com.volmit.wormholes.util.GList destroyQueue -> productize
    com.volmit.wormholes.util.GList localPortals -> recontextualize
    com.volmit.wormholes.util.GMap mutexPortals -> redefine
    19:23:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getDestroyQueue() -> laoreet
    32:32:com.volmit.wormholes.util.GList getLocalPortals() -> dapibus
    37:45:boolean hasPortalsInView(org.bukkit.Location) -> pulvinar
    50:71:com.volmit.wormholes.portal.Portal getClosestViewedPortal(org.bukkit.Location) -> vulputate
    76:86:com.volmit.wormholes.util.GList getPortalsInView(org.bukkit.Location) -> dictum
    91:101:com.volmit.wormholes.util.GList getPortalsInCloseView(org.bukkit.Location) -> Vestibulum
    106:106:com.volmit.wormholes.util.GMap getMutexPortals() -> auctor
    111:121:com.volmit.wormholes.projection.ProjectionSet getOtherLocalPortals(com.volmit.wormholes.portal.Portal) -> adipiscing
    126:126:boolean isLookingAt(org.bukkit.entity.Player,com.volmit.wormholes.portal.Portal) -> sit
    131:139:com.volmit.wormholes.portal.Portal getPortalLookingAt(org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.service.ProjectionService -> com.volmit.wormholes.src.neque:
    com.volmit.wormholes.util.GMap remotePlanes -> reintermediate
    java.lang.Boolean projecting -> reinvent
    java.lang.Long tpl -> repurpose
    com.volmit.wormholes.util.GMap lastPort -> revolutionize
    com.volmit.wormholes.projection.RenderMesh mesh -> scale
    long lms -> seize
    45:53:void <init>() -> <init>
    57:123:void flush() -> flush
    127:138:void deproject(com.volmit.wormholes.portal.LocalPortal) -> Proin
    142:223:void project(com.volmit.wormholes.portal.LocalPortal) -> ac
    228:246:void on(org.bukkit.event.player.PlayerTeleportEvent) -> Lorem
    250:250:com.volmit.wormholes.util.GMap getRemotePlanes() -> nunc
    255:255:java.lang.Boolean getProjecting() -> venenatis
    260:260:java.lang.Long getTpl() -> rutrum
    265:265:com.volmit.wormholes.util.GMap getLastPort() -> mauris
    270:270:com.volmit.wormholes.projection.RenderMesh getMesh() -> lobortis
    35:35:long access$000(com.volmit.wormholes.service.ProjectionService) -> Lorem
    35:35:long access$002(com.volmit.wormholes.service.ProjectionService,long) -> Lorem
    35:35:java.lang.Boolean access$102(com.volmit.wormholes.service.ProjectionService,java.lang.Boolean) -> Lorem
com.volmit.wormholes.service.ProjectionService$1 -> com.volmit.wormholes.src.neque$1:
    com.volmit.wormholes.service.ProjectionService this$0 -> strategize
    64:64:void <init>(com.volmit.wormholes.service.ProjectionService) -> <init>
    70:114:void async() -> efficitur
com.volmit.wormholes.service.TimingsService -> com.volmit.wormholes.src.sagittis:
    com.volmit.wormholes.util.Timed root -> streamline
    com.volmit.wormholes.util.Timed asyn -> syndicate
    11:14:void <init>() -> <init>
com.volmit.wormholes.util.A -> com.volmit.wormholes.src.lorem:
    6:15:void <init>() -> <init>
    void async() -> efficitur
com.volmit.wormholes.util.A$1 -> com.volmit.wormholes.src.lorem$1:
    com.volmit.wormholes.util.A this$0 -> synergize
    8:8:void <init>(com.volmit.wormholes.util.A) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.AbstractPacket -> com.volmit.wormholes.src.vel:
    com.comphenix.protocol.events.PacketContainer handle -> synthesize
    39:51:void <init>(com.comphenix.protocol.events.PacketContainer,com.comphenix.protocol.PacketType) -> <init>
    60:60:com.comphenix.protocol.events.PacketContainer getHandle() -> bibendum
    75:81:void sendPacket(org.bukkit.entity.Player) -> purus
    98:104:void recievePacket(org.bukkit.entity.Player) -> non
    118:124:void receivePacket(org.bukkit.entity.Player) -> mi
com.volmit.wormholes.util.Adapter -> com.volmit.wormholes.src.Quisque:
    java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Alphabet -> com.volmit.wormholes.src.congue:
    com.volmit.wormholes.util.Alphabet ALPHA -> target
    com.volmit.wormholes.util.Alphabet BRAVO -> transform
    com.volmit.wormholes.util.Alphabet CHARLIE -> transition
    com.volmit.wormholes.util.Alphabet DELTA -> unleash
    com.volmit.wormholes.util.Alphabet ECHO -> utilize
    com.volmit.wormholes.util.Alphabet FOXTROT -> visualize
    com.volmit.wormholes.util.Alphabet GOLF -> whiteboard
    com.volmit.wormholes.util.Alphabet HOTEL -> B2B
    com.volmit.wormholes.util.Alphabet INDIA -> B2C
    com.volmit.wormholes.util.Alphabet JULIET -> back
    com.volmit.wormholes.util.Alphabet KILO -> end
    com.volmit.wormholes.util.Alphabet LIMA -> best
    com.volmit.wormholes.util.Alphabet MIKE -> of
    com.volmit.wormholes.util.Alphabet NOVEMBER -> breed
    com.volmit.wormholes.util.Alphabet OSCAR -> bleeding
    com.volmit.wormholes.util.Alphabet PAPA -> edge
    com.volmit.wormholes.util.Alphabet QUEBEC -> bricks
    com.volmit.wormholes.util.Alphabet ROMEO -> and
    com.volmit.wormholes.util.Alphabet SIERRA -> clicks
    com.volmit.wormholes.util.Alphabet TANGO -> mortar
    com.volmit.wormholes.util.Alphabet UNIFORM -> collaborative
    com.volmit.wormholes.util.Alphabet VICTOR -> compelling
    com.volmit.wormholes.util.Alphabet WISKEY -> cross
    com.volmit.wormholes.util.Alphabet XRAY -> platform
    com.volmit.wormholes.util.Alphabet YANKEE -> media
    com.volmit.wormholes.util.Alphabet ZULU -> customized
    com.volmit.wormholes.util.Alphabet[] $VALUES -> cutting
    8:8:com.volmit.wormholes.util.Alphabet[] values() -> values
    8:8:com.volmit.wormholes.util.Alphabet valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    147:147:char getChar() -> getChar
    158:165:java.lang.String radioTalk(java.lang.String) -> adipiscing
    177:185:com.volmit.wormholes.util.Alphabet fromChar(char) -> Lorem
    195:202:com.volmit.wormholes.util.GList getAlphabet() -> Orci
    8:138:void <clinit>() -> <clinit>
com.volmit.wormholes.util.AmountName -> com.volmit.wormholes.src.vitae:
    java.lang.String singular -> distributed
    java.lang.String plural -> dot
    22:25:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getSingular() -> natoque
    44:44:java.lang.String getPlural() -> penatibus
    56:61:java.lang.String forAmount(int) -> elit
    74:74:java.lang.String suffix(int) -> Morbi
com.volmit.wormholes.util.Archive -> com.volmit.wormholes.src.ornare:
    void add(java.io.File,java.io.File) -> Lorem
    void remove(java.io.File) -> remove
    void compress(java.io.File) -> ipsum
    com.volmit.wormholes.util.ArchiveType getType() -> magnis
com.volmit.wormholes.util.ArchiveType -> com.volmit.wormholes.src.Integer:
    com.volmit.wormholes.util.ArchiveType ZIP -> com
    com.volmit.wormholes.util.ArchiveType[] $VALUES -> dynamic
    8:8:com.volmit.wormholes.util.ArchiveType[] values() -> values
    8:8:com.volmit.wormholes.util.ArchiveType valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ArchiveUtils -> com.volmit.wormholes.src.commodo:
    20:20:void <init>() -> <init>
    36:61:void createZipArchive(com.volmit.wormholes.util.GMap,java.io.File) -> Lorem
    77:117:void extractZipArchive(java.io.File,java.io.File) -> ipsum
    128:143:com.volmit.wormholes.util.GList allFiles(java.io.File) -> dolor
    157:164:com.volmit.wormholes.util.GList cropFiles(java.io.File,com.volmit.wormholes.util.GList) -> Lorem
    178:183:java.io.File cropFile(java.io.File,java.io.File) -> dolor
com.volmit.wormholes.util.Area -> com.volmit.wormholes.src.ante:
    org.bukkit.Location location -> sagittis
    java.lang.Double radius -> business
    23:23:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> Lorem
    36:39:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    43:43:com.volmit.wormholes.util.Cuboid toCuboid() -> dis
    56:59:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    73:81:java.lang.Double distance(org.bukkit.Location) -> in
    95:95:java.lang.Double slowDistance(org.bukkit.Location) -> purus
    107:107:boolean isWithin(org.bukkit.Location) -> non
    117:117:boolean hasEntities() -> hasEntities
    129:139:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> Lorem
    151:161:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> Lorem
    174:198:org.bukkit.entity.Entity[] getNearbyEntities() -> parturient
    209:219:org.bukkit.entity.Player[] getNearbyPlayers() -> montes
    229:229:org.bukkit.Location getLocation() -> getLocation
    240:241:void setLocation(org.bukkit.Location) -> setLocation
    250:250:java.lang.Double getRadius() -> nascetur
    261:262:void setRadius(java.lang.Double) -> Lorem
    271:276:org.bukkit.Location random() -> ridiculus
com.volmit.wormholes.util.ArmorStandHologram -> com.volmit.wormholes.src.cursus:
    22:28:void <init>(org.bukkit.Location) -> <init>
com.volmit.wormholes.util.AsyncConfig -> com.volmit.wormholes.src.suscipit:
com.volmit.wormholes.util.AsyncConfigurable -> com.volmit.wormholes.src.Mauris:
    boolean isLoaded() -> isLoaded
com.volmit.wormholes.util.Audible -> com.volmit.wormholes.src.mollis:
    void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    void play(org.bukkit.entity.Player) -> euismod
    void play(org.bukkit.Location) -> mi
    void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Lorem
    java.lang.Float getVolume() -> mus
    void setVolume(java.lang.Float) -> Lorem
    java.lang.Float getPitch() -> Interdum
    void setPitch(java.lang.Float) -> ipsum
    com.volmit.wormholes.util.Audible clone() -> aggregate
com.volmit.wormholes.util.Audio -> com.volmit.wormholes.src.convallis:
    com.volmit.wormholes.util.GList audibles -> efficient
    22:24:void <init>() -> <init>
    33:35:void <init>(com.volmit.wormholes.util.GList) -> <init>
    40:40:com.volmit.wormholes.util.Audible clone() -> aggregate
    51:52:void add(com.volmit.wormholes.util.Audible) -> Lorem
    56:57:com.volmit.wormholes.util.Audio qadd(com.volmit.wormholes.util.Audible) -> ipsum
    63:67:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    72:76:void play(org.bukkit.entity.Player) -> euismod
    81:85:void play(org.bukkit.Location) -> mi
    90:94:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Lorem
    99:106:java.lang.Float getVolume() -> mus
    112:116:void setVolume(java.lang.Float) -> Lorem
    121:128:java.lang.Float getPitch() -> Interdum
    134:138:void setPitch(java.lang.Float) -> ipsum
    14:14:java.lang.Object clone() -> clone
com.volmit.wormholes.util.AudioDistortion -> com.volmit.wormholes.src.viverra:
    6:8:void <init>() -> <init>
    com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.Average -> com.volmit.wormholes.src.lacus:
    int limit -> limit
    com.volmit.wormholes.util.GList data -> enterprise
    double average -> extensible
    26:35:com.volmit.wormholes.util.GList getFastAverage(com.volmit.wormholes.util.GList,int) -> Lorem
    45:49:void <init>(int) -> <init>
    56:58:void reset() -> reset
    69:77:void put(double) -> Lorem
    86:86:int getLimit() -> getLimit
    97:98:void setLimit(int) -> setLimit
    107:107:com.volmit.wormholes.util.GList getData() -> architect
    118:119:void setData(com.volmit.wormholes.util.GList) -> dolor
    128:128:double getAverage() -> getAverage
    134:141:int hashCode() -> hashCode
    147:187:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.Axis -> com.volmit.wormholes.src.eu:
    com.volmit.wormholes.util.Axis X -> frictionless
    com.volmit.wormholes.util.Axis Y -> front
    com.volmit.wormholes.util.Axis Z -> global
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Axis[] $VALUES -> granular
    5:5:com.volmit.wormholes.util.Axis[] values() -> values
    5:5:com.volmit.wormholes.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> benchmark
    29:29:org.bukkit.util.Vector negative() -> brand
    5:9:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Base64 -> com.volmit.wormholes.src.Phasellus:
    int NO_OPTIONS -> holistic
    int ENCODE -> impactful
    int DECODE -> innovative
    int GZIP -> integrated
    int DONT_GUNZIP -> interactive
    int DO_BREAK_LINES -> intuitive
    int URL_SAFE -> killer
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> leading
    byte EQUALS_SIGN -> magnetic
    byte NEW_LINE -> mission
    java.lang.String PREFERRED_ENCODING -> critical
    byte WHITE_SPACE_ENC -> next
    byte EQUALS_SIGN_ENC -> generation
    byte[] _STANDARD_ALPHABET -> one
    byte[] _STANDARD_DECODABET -> source
    byte[] _URL_SAFE_ALPHABET -> out
    byte[] _URL_SAFE_DECODABET -> the
    byte[] _ORDERED_ALPHABET -> box
    byte[] _ORDERED_DECODABET -> plug
    java.lang.String mx -> play
    boolean $assertionsDisabled -> proactive
    276:284:byte[] getAlphabet(int) -> pulvinar
    296:304:byte[] getDecodabet(int) -> vulputate
    310:311:void <init>() -> <init>
    334:335:byte[] encode3to4(byte[],byte[],int,int) -> Lorem
    371:411:byte[] encode3to4(byte[],int,int,byte[],int,int) -> Lorem
    429:439:void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> Lorem
    455:468:void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> Lorem
    494:494:java.lang.String encodeObject(java.io.Serializable) -> Lorem
    536:606:java.lang.String encodeObject(java.io.Serializable,int) -> Lorem
    628:637:java.lang.String encodeBytes(byte[]) -> amet
    680:680:java.lang.String encodeBytes(byte[],int) -> Lorem
    712:721:java.lang.String encodeBytes(byte[],int,int) -> Lorem
    770:779:java.lang.String encodeBytes(byte[],int,int,int) -> Lorem
    799:807:byte[] encodeBytesToBytes(byte[]) -> consectetur
    838:966:byte[] encodeBytesToBytes(byte[],int,int,int) -> ipsum
    1014:1076:int decode4to3(byte[],int,byte[],int,int) -> Lorem
    1095:1102:byte[] decode(byte[]) -> decode
    1130:1194:byte[] decode(byte[],int,int,int) -> dolor
    1210:1210:byte[] decode(java.lang.String) -> decode
    1231:1310:byte[] decode(java.lang.String,int) -> ipsum
    1331:1331:java.lang.Object decodeToObject(java.lang.String) -> elit
    1359:1423:java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> Lorem
    1449:1474:void encodeToFile(byte[],java.lang.String) -> Lorem
    1497:1517:void decodeToFile(java.lang.String,java.lang.String) -> Lorem
    1539:1584:byte[] decodeFromFile(java.lang.String) -> Morbi
    1607:1659:java.lang.String encodeFromFile(java.lang.String) -> pulvinar
    1676:1696:void encodeFileToFile(java.lang.String,java.lang.String) -> ipsum
    1712:1732:void decodeFileToFile(java.lang.String,java.lang.String) -> dolor
    2210:2214:void ex(java.io.File) -> sit
    2218:2241:java.lang.String readFile(java.lang.String) -> readFile
    7:7:byte[] access$000(int) -> dictum
    7:7:byte[] access$100(byte[],int,int,byte[],int,int) -> ipsum
    7:7:int access$200(byte[],int,byte[],int,int) -> ipsum
    7:7:byte[] access$300(byte[],byte[],int,int) -> ipsum
    7:621:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Base64$1 -> com.volmit.wormholes.src.Phasellus$1:
    java.lang.ClassLoader val$loader -> real
    1380:1380:void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    1385:1391:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.volmit.wormholes.util.Base64$InputStream -> com.volmit.wormholes.src.Phasellus$Lorem:
    boolean encode -> revolutionary
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> rich
    int numSigBytes -> robust
    int lineLength -> lineLength
    boolean breakLines -> scalable
    int options -> seamless
    byte[] decodabet -> sexy
    1766:1767:void <init>(java.io.InputStream) -> <init>
    1796:1805:void <init>(java.io.InputStream,int) -> <init>
    1819:1928:int read() -> read
    1951:1966:int read(byte[],int,int) -> read
com.volmit.wormholes.util.Base64$OutputStream -> com.volmit.wormholes.src.Phasellus$ipsum:
    boolean encode -> revolutionary
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> rich
    int lineLength -> lineLength
    boolean breakLines -> scalable
    byte[] b4 -> sticky
    boolean suspendEncoding -> strategic
    int options -> seamless
    byte[] decodabet -> sexy
    2005:2006:void <init>(java.io.OutputStream) -> <init>
    2034:2045:void <init>(java.io.OutputStream,int) -> <init>
    2061:2107:void write(int) -> write
    2125:2136:void write(byte[],int,int) -> write
    2147:2160:void flushBase64() -> cultivate
    2171:2179:void close() -> close
    2191:2193:void suspendEncoding() -> deliver
    2203:2204:void resumeEncoding() -> deploy
com.volmit.wormholes.util.BaseHud -> com.volmit.wormholes.src.accumsan:
    org.bukkit.entity.Player player -> player
    com.volmit.wormholes.util.GList content -> synergistic
    boolean open -> open
    com.volmit.wormholes.util.Hologram holo -> transparent
    com.volmit.wormholes.util.CNum selection -> turn
    int maxPage -> ubiquitous
    int startRange -> user
    boolean listening -> centric
    com.volmit.wormholes.util.GMap preListeners -> added
    int index -> index
    boolean hasTitle -> vertical
    26:38:void <init>(org.bukkit.entity.Player) -> <init>
    43:76:void open() -> open
    81:100:void on(org.bukkit.event.player.PlayerInteractEvent) -> Lorem
    105:117:void on(com.volmit.wormholes.util.PlayerScrollEvent) -> Lorem
    121:184:void update() -> update
    org.bukkit.Location getBaseLocation() -> disintermediate
    191:199:void close() -> close
    204:206:void setContents(com.volmit.wormholes.util.GList) -> sit
    211:211:com.volmit.wormholes.util.GList getContents() -> drive
    217:217:java.lang.String getSelection() -> e
    223:223:int getSelectionRow() -> enable
    void onUpdateInternal() -> embrace
    230:230:com.volmit.wormholes.util.GList getContent() -> empower
    235:236:void setContent(com.volmit.wormholes.util.GList) -> amet
    240:240:int getMaxPage() -> getMaxPage
    245:246:void setMaxPage(int) -> setMaxPage
    250:250:org.bukkit.entity.Player getPlayer() -> getPlayer
    255:255:boolean isOpen() -> isOpen
    260:260:com.volmit.wormholes.util.Hologram getHolo() -> engage
    265:265:int getStartRange() -> engineer
    270:271:void registerPreListener(java.lang.String,java.lang.Runnable) -> Lorem
    275:276:void unregisterPreListener(java.lang.String) -> vulputate
    280:280:boolean isListening() -> enhance
    285:286:void setListening(boolean) -> amet
    290:290:int getIndex() -> getIndex
    295:296:void setIndex(int) -> setIndex
    300:300:com.volmit.wormholes.util.GMap getPreListeners() -> envisioneer
    305:305:boolean isHasTitle() -> evolve
    310:311:void setHasTitle(boolean) -> consectetur
    315:316:void setPlayer(org.bukkit.entity.Player) -> setPlayer
    320:321:void setOpen(boolean) -> setOpen
    325:326:void setHolo(com.volmit.wormholes.util.Hologram) -> Lorem
    330:331:void setSelection(com.volmit.wormholes.util.CNum) -> Lorem
    335:336:void setStartRange(int) -> Vestibulum
    340:341:void setPreListeners(com.volmit.wormholes.util.GMap) -> ipsum
com.volmit.wormholes.util.BaseHud$1 -> com.volmit.wormholes.src.accumsan$1:
    com.volmit.wormholes.util.BaseHud this$0 -> viral
    60:60:void <init>(com.volmit.wormholes.util.BaseHud,int) -> <init>
    64:73:void run() -> run
com.volmit.wormholes.util.BooleanTag -> com.volmit.wormholes.src.egestas:
    boolean value -> value
    26:28:void <init>(java.lang.String,boolean) -> <init>
    33:33:java.lang.Boolean getValue() -> getValue
    39:45:java.lang.String toString() -> toString
    8:8:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.BorderDirection -> com.volmit.wormholes.src.Praesent:
    com.volmit.wormholes.util.BorderDirection TOP -> virtual
    com.volmit.wormholes.util.BorderDirection BOTTOM -> visionary
    com.volmit.wormholes.util.BorderDirection LEFT -> web
    com.volmit.wormholes.util.BorderDirection RIGHT -> enabled
    com.volmit.wormholes.util.BorderDirection[] $VALUES -> wireless
    8:8:com.volmit.wormholes.util.BorderDirection[] values() -> values
    8:8:com.volmit.wormholes.util.BorderDirection valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.BoundPhysicalObject -> com.volmit.wormholes.src.eros:
    org.bukkit.entity.Entity e -> class
    26:29:void <init>(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> <init>
    36:37:void influenceForce(org.bukkit.util.Vector) -> dolor
    46:46:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.wormholes.util.ByteArrayTag -> com.volmit.wormholes.src.et:
    byte[] value -> value
    54:56:void <init>(java.lang.String,byte[]) -> <init>
    60:60:byte[] getValue() -> getValue
    65:78:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteMap2D -> com.volmit.wormholes.src.sodales:
    byte[][] map -> items
    int width -> width
    int height -> height
    25:31:void <init>(int,int,byte) -> <init>
    49:56:void clear(int,int,int,int,byte) -> Lorem
    66:67:void clear(byte) -> Lorem
    81:82:void set(int,int,byte) -> Lorem
    95:95:byte get(int,int) -> ipsum
    105:105:byte[][] getMap() -> expedite
    115:115:int getWidth() -> getWidth
    125:125:int getHeight() -> getHeight
com.volmit.wormholes.util.ByteReader -> com.volmit.wormholes.src.scelerisque:
    java.io.ByteArrayInputStream bois -> applications
    java.io.DataInputStream dis -> architectures
    13:16:void <init>(byte[]) -> <init>
    20:20:java.lang.String rString() -> exploit
    25:32:byte[] rBytes() -> extend
    37:37:int rInt() -> facilitate
    42:42:byte rByte() -> generate
    47:47:short rShort() -> grow
    52:52:long rLong() -> harness
    57:57:char rChar() -> implement
    62:62:double rDouble() -> incentivize
    67:67:float rFloat() -> incubate
    72:72:boolean rBoolean() -> innovate
    77:78:void close() -> close
com.volmit.wormholes.util.ByteTag -> com.volmit.wormholes.src.velit:
    byte value -> value
    54:56:void <init>(java.lang.String,byte) -> <init>
    60:60:java.lang.Byte getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ByteWriter -> com.volmit.wormholes.src.Donec:
    java.io.ByteArrayOutputStream boas -> bandwidth
    java.io.DataOutputStream dos -> channels
    13:16:void <init>() -> <init>
    20:21:void wString(java.lang.String) -> dictum
    25:26:void wInt(int) -> in
    30:31:void wByte(byte) -> ipsum
    35:36:void wShort(short) -> Lorem
    40:41:void wLong(long) -> dolor
    45:46:void wChar(char) -> ipsum
    50:51:void wDouble(double) -> ipsum
    55:56:void wFloat(float) -> Lorem
    60:61:void wBoolean(boolean) -> adipiscing
    65:71:void wBytes(byte[]) -> adipiscing
    75:75:byte[] getData() -> getData
    80:81:void close() -> close
com.volmit.wormholes.util.C -> com.volmit.wormholes.src.quam:
    com.volmit.wormholes.util.C BLACK -> communities
    com.volmit.wormholes.util.C DARK_BLUE -> content
    com.volmit.wormholes.util.C DARK_GREEN -> convergence
    com.volmit.wormholes.util.C DARK_AQUA -> deliverables
    com.volmit.wormholes.util.C DARK_RED -> commerce
    com.volmit.wormholes.util.C DARK_PURPLE -> markets
    com.volmit.wormholes.util.C GOLD -> services
    com.volmit.wormholes.util.C GRAY -> tailers
    com.volmit.wormholes.util.C DARK_GRAY -> experiences
    com.volmit.wormholes.util.C BLUE -> eyeballs
    com.volmit.wormholes.util.C GREEN -> functionalities
    com.volmit.wormholes.util.C AQUA -> infomediaries
    com.volmit.wormholes.util.C RED -> infrastructures
    com.volmit.wormholes.util.C LIGHT_PURPLE -> initiatives
    com.volmit.wormholes.util.C YELLOW -> interfaces
    com.volmit.wormholes.util.C WHITE -> methodologies
    com.volmit.wormholes.util.C MAGIC -> metrics
    com.volmit.wormholes.util.C BOLD -> mindshare
    com.volmit.wormholes.util.C STRIKETHROUGH -> models
    com.volmit.wormholes.util.C UNDERLINE -> networks
    com.volmit.wormholes.util.C ITALIC -> niches
    com.volmit.wormholes.util.C RESET -> paradigms
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> partnerships
    char code -> platforms
    boolean isFormat -> portals
    java.lang.String toString -> relationships
    java.util.Map BY_ID -> ROI
    java.util.Map BY_CHAR -> synergies
    java.util.Map dyeChatMap -> readiness
    java.util.Map chatHexMap -> schemas
    java.util.Map dyeHexMap -> solutions
    com.volmit.wormholes.util.C[] $VALUES -> supply
    16:16:com.volmit.wormholes.util.C[] values() -> values
    16:16:com.volmit.wormholes.util.C valueOf(java.lang.String) -> valueOf
    333:334:void <init>(java.lang.String,int,char,int) -> <init>
    337:342:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    346:346:net.md_5.bungee.api.ChatColor asBungee() -> integrate
    356:356:char getChar() -> getChar
    362:362:java.lang.String toString() -> toString
    372:372:org.bukkit.DyeColor dye() -> iterate
    377:377:java.lang.String hex() -> leverage
    387:387:boolean isFormat() -> isFormat
    397:397:boolean isColor() -> isColor
    412:417:com.volmit.wormholes.util.C getByChar(char) -> dolor
    433:441:com.volmit.wormholes.util.C getByChar(java.lang.String) -> Vestibulum
    454:459:java.lang.String stripColor(java.lang.String) -> stripColor
    471:476:com.volmit.wormholes.util.C dyeToChat(org.bukkit.DyeColor) -> amet
    481:489:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> Lorem
    494:499:java.lang.String chatToHex(org.bukkit.ChatColor) -> ipsum
    504:509:java.lang.String dyeToHex(org.bukkit.DyeColor) -> consectetur
    514:535:org.bukkit.Color hexToColor(java.lang.String) -> in
    540:553:org.bukkit.Color rgbToColor(java.lang.String) -> purus
    558:576:java.lang.String generateColorTable() -> matrix
    586:586:org.bukkit.ChatColor chatColor() -> maximize
    604:613:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    618:626:com.volmit.wormholes.util.C fromItemMeta(byte) -> dolor
    631:678:byte getItemMeta() -> mesh
    691:716:java.lang.String getLastColors(java.lang.String) -> getLastColors
    16:16:void <init>(java.lang.String,int,char,int,com.volmit.wormholes.util.C$1) -> <init>
    16:16:void <init>(java.lang.String,int,char,int,boolean,com.volmit.wormholes.util.C$1) -> <init>
    16:726:void <clinit>() -> <clinit>
com.volmit.wormholes.util.C$1 -> com.volmit.wormholes.src.quam$1:
    21:21:void <init>(java.lang.String,int,char,int) -> <init>
    26:26:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$10 -> com.volmit.wormholes.src.quam$2:
    120:120:void <init>(java.lang.String,int,char,int) -> <init>
    125:125:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$11 -> com.volmit.wormholes.src.quam$3:
    131:131:void <init>(java.lang.String,int,char,int) -> <init>
    136:136:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$12 -> com.volmit.wormholes.src.quam$4:
    142:142:void <init>(java.lang.String,int,char,int) -> <init>
    147:147:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$13 -> com.volmit.wormholes.src.quam$5:
    153:153:void <init>(java.lang.String,int,char,int) -> <init>
    158:158:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$14 -> com.volmit.wormholes.src.quam$6:
    164:164:void <init>(java.lang.String,int,char,int) -> <init>
    169:169:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$15 -> com.volmit.wormholes.src.quam$7:
    175:175:void <init>(java.lang.String,int,char,int) -> <init>
    180:180:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$16 -> com.volmit.wormholes.src.quam$8:
    186:186:void <init>(java.lang.String,int,char,int) -> <init>
    191:191:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$17 -> com.volmit.wormholes.src.quam$9:
    197:197:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    202:202:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$18 -> com.volmit.wormholes.src.quam$10:
    208:208:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    213:213:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$19 -> com.volmit.wormholes.src.quam$11:
    219:219:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    224:224:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$2 -> com.volmit.wormholes.src.quam$12:
    32:32:void <init>(java.lang.String,int,char,int) -> <init>
    37:37:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$20 -> com.volmit.wormholes.src.quam$13:
    230:230:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    235:235:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$21 -> com.volmit.wormholes.src.quam$14:
    241:241:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    246:246:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$22 -> com.volmit.wormholes.src.quam$15:
    253:253:void <init>(java.lang.String,int,char,int) -> <init>
    258:258:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$23 -> com.volmit.wormholes.src.quam$16:
    int[] $SwitchMap$com$volmit$wormholes$util$C -> chains
    631:631:void <clinit>() -> <clinit>
com.volmit.wormholes.util.C$3 -> com.volmit.wormholes.src.quam$17:
    43:43:void <init>(java.lang.String,int,char,int) -> <init>
    48:48:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$4 -> com.volmit.wormholes.src.quam$18:
    54:54:void <init>(java.lang.String,int,char,int) -> <init>
    59:59:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$5 -> com.volmit.wormholes.src.quam$19:
    65:65:void <init>(java.lang.String,int,char,int) -> <init>
    70:70:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$6 -> com.volmit.wormholes.src.quam$20:
    76:76:void <init>(java.lang.String,int,char,int) -> <init>
    81:81:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$7 -> com.volmit.wormholes.src.quam$21:
    87:87:void <init>(java.lang.String,int,char,int) -> <init>
    92:92:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$8 -> com.volmit.wormholes.src.quam$22:
    98:98:void <init>(java.lang.String,int,char,int) -> <init>
    103:103:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.C$9 -> com.volmit.wormholes.src.quam$23:
    109:109:void <init>(java.lang.String,int,char,int) -> <init>
    114:114:net.md_5.bungee.api.ChatColor asBungee() -> integrate
com.volmit.wormholes.util.CDou -> com.volmit.wormholes.src.malesuada:
    double number -> systems
    double max -> max
    9:12:void <init>(double) -> <init>
    16:18:com.volmit.wormholes.util.CDou set(double) -> dolor
    23:25:com.volmit.wormholes.util.CDou add(double) -> sit
    30:32:com.volmit.wormholes.util.CDou sub(double) -> amet
    37:37:double get() -> get
    42:48:void circ() -> monetize
com.volmit.wormholes.util.CNum -> com.volmit.wormholes.src.quis:
    int number -> technologies
    int max -> max
    9:12:void <init>(int) -> <init>
    16:18:com.volmit.wormholes.util.CNum set(int) -> purus
    23:25:com.volmit.wormholes.util.CNum add(int) -> non
    30:32:com.volmit.wormholes.util.CNum sub(int) -> mi
    37:37:int get() -> get
    42:48:void circ() -> monetize
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> setMax
com.volmit.wormholes.util.CancellablePhantomEvent -> com.volmit.wormholes.src.ullamcorper:
    boolean cancelled -> users
    15:17:void <init>() -> <init>
    25:25:boolean isCancelled() -> isCancelled
    34:35:void setCancelled(boolean) -> setCancelled
    42:43:void cancel() -> cancel
    50:51:void uncancel() -> morph
com.volmit.wormholes.util.ChunkPacketProcessor -> com.volmit.wormholes.src.aliquet:
    int BYTES_PER_NIBBLE_PART -> vortals
    int CHUNK_SEGMENTS -> obfuscate
    int NIBBLES_REQUIRED -> star
    int BLOCK_ID_LENGHT -> see
    int DATA_LENGHT -> definition
    int BIOME_ARRAY_LENGTH -> show
    int chunkX -> chunkX
    int chunkZ -> chunkZ
    int chunkMask -> verb
    int extraMask -> confuse
    int chunkSectionNumber -> baffle
    int extraSectionNumber -> Relevance
    boolean hasContinous -> A
    int startIndex -> startIndex
    int size -> size
    byte[] data -> data
    org.bukkit.World world -> world
    200:210:void <init>() -> <init>
    220:240:com.volmit.wormholes.util.ChunkPacketProcessor fromMapPacket(com.comphenix.protocol.events.PacketContainer,org.bukkit.World) -> Lorem
    296:335:void process(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> Lorem
    348:348:int getSkylightCount() -> optimize
    352:352:int getOffset(int) -> euismod
    358:383:void translate(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor) -> ipsum
    386:386:boolean isChunkLoaded(org.bukkit.World,int,int) -> Lorem
com.volmit.wormholes.util.ChunkPacketProcessor$1 -> com.volmit.wormholes.src.aliquet$1:
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets -> com.volmit.wormholes.src.aliquet$Lorem:
    int blockIdOffset -> ZComplexity
    int dataOffset -> Length
    int lightOffset -> lists
    int skylightOffset -> blocks
    int extraOffset -> Common
    48:54:void <init>(int,int,int,int,int) -> <init>
    57:64:void incrementIdIndex() -> orchestrate
    67:70:void incrementExtraIndex() -> productize
    81:81:int getBlockIdOffset() -> recontextualize
    93:93:int getDataOffset() -> redefine
    106:106:int getLightOffset() -> reintermediate
    118:118:int getSkylightOffset() -> reinvent
    127:127:boolean hasSkylightOffset() -> repurpose
    139:139:int getExtraOffset() -> revolutionize
    148:148:boolean hasExtraOffset() -> scale
    40:40:void <init>(int,int,int,int,int,com.volmit.wormholes.util.ChunkPacketProcessor$1) -> <init>
    40:40:void access$100(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    40:40:void access$200(com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> ipsum
com.volmit.wormholes.util.ChunkPacketProcessor$ChunkletProcessor -> com.volmit.wormholes.src.aliquet$ipsum:
    void processChunklet(org.bukkit.Location,byte[],com.volmit.wormholes.util.ChunkPacketProcessor$ChunkOffsets) -> Lorem
    void processBiomeArray(org.bukkit.Location,byte[],int) -> Lorem
com.volmit.wormholes.util.Chunklet -> com.volmit.wormholes.src.nulla:
    int x -> x
    int z -> z
    org.bukkit.World world -> world
    34:38:void <init>(int,int,org.bukkit.World) -> <init>
    47:47:com.volmit.wormholes.util.GList inThisChunk() -> seize
    57:61:void <init>(org.bukkit.Location) -> <init>
    70:83:com.volmit.wormholes.util.GList getPlayers() -> strategize
    93:103:com.volmit.wormholes.util.GList getEntities() -> Aenean
    113:113:org.bukkit.Chunk getChunk() -> getChunk
    125:125:boolean contains(org.bukkit.Location) -> elit
    137:137:boolean contains(org.bukkit.entity.Player) -> Pellentesque
    149:149:boolean contains(org.bukkit.Chunk) -> Lorem
    159:159:org.bukkit.Location getMin() -> streamline
    169:169:org.bukkit.Location getMax() -> syndicate
    179:179:java.util.Iterator iterator() -> iterator
    191:191:com.volmit.wormholes.util.Chunklet getRelative(com.volmit.wormholes.util.Direction) -> Lorem
    201:208:com.volmit.wormholes.util.GList getNeighbors() -> synergize
    220:254:com.volmit.wormholes.util.GList getCircle(int) -> Pellentesque
    259:273:boolean equals(java.lang.Object) -> equals
    287:295:com.volmit.wormholes.util.GList getBorder(int,com.volmit.wormholes.util.Direction) -> Lorem
    305:305:int getX() -> getX
    316:317:void setX(int) -> setX
    326:326:int getZ() -> getZ
    337:338:void setZ(int) -> setZ
    347:347:org.bukkit.World getWorld() -> getWorld
    358:359:void setWorld(org.bukkit.World) -> setWorld
com.volmit.wormholes.util.ChunkletMesh -> com.volmit.wormholes.src.Vivamus:
    org.bukkit.World world -> world
    com.volmit.wormholes.util.GMap chunklets -> Informal
    com.volmit.wormholes.util.GList all -> Synonyms
    27:31:void <init>(org.bukkit.World) -> <init>
    38:42:void rebuildReferences() -> synthesize
    51:51:com.volmit.wormholes.util.GList getChunklets() -> target
    63:71:boolean contains(org.bukkit.Location) -> elit
    83:83:boolean contains(org.bukkit.entity.Player) -> Pellentesque
    95:95:boolean contains(org.bukkit.entity.Entity) -> Morbi
    105:112:com.volmit.wormholes.util.GList getPlayers() -> strategize
    122:129:com.volmit.wormholes.util.GList getEntities() -> Aenean
    140:153:void add(com.volmit.wormholes.util.Chunklet) -> Lorem
com.volmit.wormholes.util.Click -> com.volmit.wormholes.src.tellus:
    com.volmit.wormholes.util.Click LEFT -> for
    com.volmit.wormholes.util.Click RIGHT -> b
    com.volmit.wormholes.util.Click MIDDLE -> c
    com.volmit.wormholes.util.Click SHIFT_LEFT -> d
    com.volmit.wormholes.util.Click SHIFT_RIGHT -> g
    com.volmit.wormholes.util.Click[] $VALUES -> h
    11:11:com.volmit.wormholes.util.Click[] values() -> values
    11:11:com.volmit.wormholes.util.Click valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    47:60:com.volmit.wormholes.util.Click fromClickType(org.bukkit.event.inventory.ClickType) -> Lorem
    11:36:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Click$1 -> com.volmit.wormholes.src.tellus$1:
    int[] $SwitchMap$org$bukkit$event$inventory$ClickType -> j
    47:47:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ClustAsyncAlreadyLoadingException -> com.volmit.wormholes.src.leo:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustAsyncException -> com.volmit.wormholes.src.tincidunt:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ClustException -> com.volmit.wormholes.src.luctus:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Cluster -> com.volmit.wormholes.src.Maecenas:
    long serialVersionUID -> serialVersionUID
    com.volmit.wormholes.util.DataCluster$ClusterType type -> k
    java.lang.Double value -> l
    18:21:void <init>(com.volmit.wormholes.util.DataCluster$ClusterType,java.lang.Double) -> <init>
    25:25:com.volmit.wormholes.util.DataCluster$ClusterType getType() -> transform
    30:35:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.ClusterBoolean -> com.volmit.wormholes.src.est:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(boolean) -> <init>
    24:24:boolean get() -> get
    29:30:void set(boolean) -> set
com.volmit.wormholes.util.ClusterDouble -> com.volmit.wormholes.src.hendrerit:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Double) -> <init>
    24:24:double get() -> get
    29:30:void set(double) -> set
com.volmit.wormholes.util.ClusterInteger -> com.volmit.wormholes.src.Etiam:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Integer) -> <init>
    24:24:int get() -> get
    29:30:void set(int) -> set
com.volmit.wormholes.util.ClusterLong -> com.volmit.wormholes.src.diam:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>(java.lang.Long) -> <init>
    24:24:long get() -> get
    29:30:void set(long) -> set
com.volmit.wormholes.util.ClusterString -> com.volmit.wormholes.src.dignissim:
    long serialVersionUID -> serialVersionUID
    java.lang.String string -> string
    20:22:void <init>(java.lang.String) -> <init>
    26:26:java.lang.String get() -> get
    31:33:void set(java.lang.String) -> set
com.volmit.wormholes.util.ClusterStringList -> com.volmit.wormholes.src.arcu:
    long serialVersionUID -> serialVersionUID
    java.util.List strings -> m
    21:23:void <init>(java.util.List) -> <init>
    27:27:java.util.List get() -> transition
    32:34:void set(java.util.List) -> Lorem
com.volmit.wormholes.util.ColdLoad -> com.volmit.wormholes.src.varius:
com.volmit.wormholes.util.ColoredParticleEffect -> com.volmit.wormholes.src.placerat:
    org.bukkit.Color color -> n
    boolean alpha -> o
    12:15:void <init>(org.bukkit.Color) -> <init>
    20:20:com.volmit.wormholes.util.GList getEffects() -> unleash
    26:37:void play(org.bukkit.Location) -> mi
    43:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
    47:47:org.bukkit.Color getColor() -> getColor
    52:53:void setColor(org.bukkit.Color) -> setColor
    57:57:boolean isAlpha() -> utilize
    62:63:void setAlpha(boolean) -> elit
com.volmit.wormholes.util.ColoredString -> com.volmit.wormholes.src.Nunc:
    com.volmit.wormholes.util.C c -> p
    java.lang.String s -> q
    22:25:void <init>(com.volmit.wormholes.util.C,java.lang.String) -> <init>
    29:29:java.lang.String toString() -> toString
    34:34:com.volmit.wormholes.util.C getC() -> visualize
    39:40:void setC(com.volmit.wormholes.util.C) -> Lorem
    44:44:java.lang.String getS() -> whiteboard
    49:50:void setS(java.lang.String) -> non
com.volmit.wormholes.util.Comment -> com.volmit.wormholes.src.Ut:
    java.lang.String value() -> value
com.volmit.wormholes.util.CompoundTag -> com.volmit.wormholes.src.eleifend:
    java.util.Map value -> r
    57:59:void <init>(java.lang.String,java.util.Map) -> <init>
    63:63:java.util.Map getValue() -> getValue
    68:79:java.lang.String toString() -> toString
    44:44:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Config -> com.volmit.wormholes.src.nibh:
    7:8:void <init>(java.lang.String) -> <init>
    12:13:void <init>() -> <init>
com.volmit.wormholes.util.Configurable -> com.volmit.wormholes.src.faucibus:
    void onNewConfig() -> B2B
    void onReadConfig() -> B2C
    com.volmit.wormholes.util.DataCluster getConfiguration() -> end
    java.lang.String getCodeName() -> best
com.volmit.wormholes.util.ConfigurableController -> com.volmit.wormholes.src.Class:
    java.lang.String codeName -> s
    com.volmit.wormholes.util.DataCluster cc -> t
    23:27:void <init>(com.volmit.wormholes.util.Controllable,java.lang.String) -> <init>
    33:33:void onNewConfig() -> B2B
    39:39:void onReadConfig() -> B2C
    44:44:com.volmit.wormholes.util.DataCluster getConfiguration() -> end
    50:50:java.lang.String getCodeName() -> best
    void onStart() -> onStart
    void onStop() -> Morbi
com.volmit.wormholes.util.ConfigurableObject -> com.volmit.wormholes.src.aptent:
    java.lang.String codeName -> s
    com.volmit.wormholes.util.DataCluster cc -> t
    20:23:void <init>(java.lang.String) -> <init>
    29:29:void onNewConfig() -> B2B
    35:35:void onReadConfig() -> B2C
    40:40:com.volmit.wormholes.util.DataCluster getConfiguration() -> end
    46:46:java.lang.String getCodeName() -> best
com.volmit.wormholes.util.ConfigurationHandler -> com.volmit.wormholes.src.taciti:
    17:17:void <init>() -> <init>
    28:83:void toFields(com.volmit.wormholes.util.Configurable) -> Lorem
    94:137:void fromFields(com.volmit.wormholes.util.Configurable) -> ipsum
    148:200:boolean isValidType(java.lang.Class) -> ipsum
    217:272:void read(java.io.File,com.volmit.wormholes.util.Configurable) -> Lorem
    286:318:void compatRead(java.io.File,com.volmit.wormholes.util.Configurable) -> ipsum
    332:379:void fastRead(java.io.File,com.volmit.wormholes.util.Configurable) -> dolor
    393:412:void fastWrite(java.io.File,com.volmit.wormholes.util.Configurable) -> sit
    426:445:void save(java.io.File,com.volmit.wormholes.util.Configurable) -> amet
    449:468:void savenc(java.io.File,com.volmit.wormholes.util.Configurable) -> consectetur
com.volmit.wormholes.util.ConfigurationHandler$1 -> com.volmit.wormholes.src.taciti$1:
    com.volmit.wormholes.util.Configurable val$c -> u
    240:240:void <init>(com.volmit.wormholes.util.Configurable) -> <init>
    244:245:void run() -> run
com.volmit.wormholes.util.ConfigurationHandler$2 -> com.volmit.wormholes.src.taciti$2:
    com.volmit.wormholes.util.Configurable val$c -> u
    java.io.File val$config -> v
    249:249:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    253:269:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$2$1 -> com.volmit.wormholes.src.taciti$2$1:
    com.volmit.wormholes.util.ConfigurationHandler$2 this$0 -> w
    254:254:void <init>(com.volmit.wormholes.util.ConfigurationHandler$2) -> <init>
    260:267:void async() -> efficitur
com.volmit.wormholes.util.ConfigurationHandler$3 -> com.volmit.wormholes.src.taciti$3:
    com.volmit.wormholes.util.Configurable val$c -> u
    java.io.File val$config -> v
    356:356:void <init>(com.volmit.wormholes.util.Configurable,java.io.File) -> <init>
    360:376:void sync() -> sync
com.volmit.wormholes.util.ConfigurationHandler$3$1 -> com.volmit.wormholes.src.taciti$3$1:
    com.volmit.wormholes.util.ConfigurationHandler$3 this$0 -> B
    361:361:void <init>(com.volmit.wormholes.util.ConfigurationHandler$3) -> <init>
    367:374:void async() -> efficitur
com.volmit.wormholes.util.Controllable -> com.volmit.wormholes.src.sociosqu:
    void tick() -> tick
    void start() -> start
    void stop() -> stop
    com.volmit.wormholes.util.Controllable getParent() -> of
    com.volmit.wormholes.util.GList getChildren() -> breed
    java.lang.String getName() -> getName
    boolean isRoot() -> isRoot
    boolean isActive() -> isActive
    void register(com.volmit.wormholes.util.Controllable) -> Lorem
    boolean isTicked() -> bleeding
    double getTickRate() -> edge
    com.volmit.wormholes.util.TickHandler getTickHandler() -> bricks
com.volmit.wormholes.util.ControllablePlugin -> com.volmit.wormholes.src.ad:
    com.volmit.wormholes.util.Controller base -> C
    6:6:void <init>() -> <init>
    13:15:void onLoad() -> onLoad
    20:45:void onEnable() -> onEnable
    50:84:void destroyOldThreads() -> and
    88:93:void readCurrentTick() -> clicks
    97:107:void setupTicker() -> mortar
    void onStart() -> onStart
    void onStop() -> Morbi
    116:116:void onTick() -> pulvinar
    121:122:void onDisable() -> onDisable
    128:128:void tick() -> tick
    void onConstruct() -> Vestibulum
    135:138:void start() -> start
    143:144:void stop() -> stop
    149:149:com.volmit.wormholes.util.Controllable getParent() -> of
    155:155:com.volmit.wormholes.util.GList getChildren() -> breed
    161:161:boolean isRoot() -> isRoot
    167:167:boolean isActive() -> isActive
    173:174:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    179:179:boolean isTicked() -> bleeding
    185:185:double getTickRate() -> edge
    191:191:com.volmit.wormholes.util.TickHandler getTickHandler() -> bricks
    196:202:void preStart() -> collaborative
    206:206:boolean findTicked() -> compelling
    211:216:double findTickValue() -> cross
    221:226:com.volmit.wormholes.util.TickHandler findTickHandle() -> platform
com.volmit.wormholes.util.ControllablePlugin$1 -> com.volmit.wormholes.src.ad$1:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> D
    24:24:void <init>(com.volmit.wormholes.util.ControllablePlugin,com.volmit.wormholes.util.Controllable) -> <init>
    28:29:void onStop() -> Morbi
    34:35:void onStart() -> onStart
    40:41:void onTick() -> pulvinar
com.volmit.wormholes.util.ControllablePlugin$2 -> com.volmit.wormholes.src.ad$2:
    com.volmit.wormholes.util.ControllablePlugin this$0 -> D
    98:98:void <init>(com.volmit.wormholes.util.ControllablePlugin) -> <init>
    102:103:void run() -> run
com.volmit.wormholes.util.Controller -> com.volmit.wormholes.src.litora:
    com.volmit.wormholes.util.Controllable parent -> E
    com.volmit.wormholes.util.GList children -> F
    java.lang.String name -> name
    boolean active -> active
    boolean root -> G
    boolean ticked -> H
    double tickRate -> I
    com.volmit.wormholes.util.TickHandler tickHandle -> J
    com.volmit.wormholes.util.Task task -> K
    com.volmit.wormholes.util.D d -> L
    20:31:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    35:36:void i(java.lang.String[]) -> ipsum
    40:41:void s(java.lang.String[]) -> dolor
    45:46:void f(java.lang.String[]) -> sit
    50:51:void w(java.lang.String[]) -> amet
    55:56:void v(java.lang.String[]) -> consectetur
    60:61:void o(java.lang.String[]) -> adipiscing
    72:73:void loadCluster(com.volmit.wormholes.util.Configurable) -> dolor
    77:78:void saveCluster(com.volmit.wormholes.util.Configurable) -> sit
    82:108:void saveCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> Lorem
    121:180:void loadCluster(com.volmit.wormholes.util.Configurable,java.lang.String) -> ipsum
    184:195:void preStart() -> collaborative
    199:199:boolean findTicked() -> compelling
    204:209:double findTickValue() -> cross
    214:219:com.volmit.wormholes.util.TickHandler findTickHandle() -> platform
    224:231:boolean findAutoRegister() -> media
    236:272:void activate() -> activate
    276:277:void deactivate() -> deactivate
    282:286:void tick() -> tick
    291:302:void start() -> start
    307:319:void stop() -> stop
    324:324:void onTick() -> pulvinar
    void onStart() -> onStart
    void onStop() -> Morbi
    333:333:com.volmit.wormholes.util.Controllable getParent() -> of
    339:339:com.volmit.wormholes.util.GList getChildren() -> breed
    345:345:java.lang.String getName() -> getName
    351:351:boolean isRoot() -> isRoot
    357:357:boolean isActive() -> isActive
    363:364:void register(com.volmit.wormholes.util.Controllable) -> Lorem
    369:369:boolean isTicked() -> bleeding
    375:375:double getTickRate() -> edge
    381:381:com.volmit.wormholes.util.TickHandler getTickHandler() -> bricks
com.volmit.wormholes.util.Controller$1 -> com.volmit.wormholes.src.litora$1:
    java.io.File val$abase -> M
    com.volmit.wormholes.util.Configurable val$c -> u
    com.volmit.wormholes.util.Controller this$0 -> N
    136:136:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    142:149:void async() -> efficitur
com.volmit.wormholes.util.Controller$2 -> com.volmit.wormholes.src.litora$2:
    java.io.File val$b -> O
    com.volmit.wormholes.util.Configurable val$c -> u
    com.volmit.wormholes.util.Controller this$0 -> N
    158:158:void <init>(com.volmit.wormholes.util.Controller,java.io.File,com.volmit.wormholes.util.Configurable) -> <init>
    164:171:void sync() -> sync
com.volmit.wormholes.util.Controller$3 -> com.volmit.wormholes.src.litora$3:
    com.volmit.wormholes.util.Controller this$0 -> N
    242:242:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    246:257:void run() -> run
com.volmit.wormholes.util.Controller$4 -> com.volmit.wormholes.src.litora$4:
    com.volmit.wormholes.util.Controller this$0 -> N
    261:261:void <init>(com.volmit.wormholes.util.Controller,int) -> <init>
    265:266:void run() -> run
com.volmit.wormholes.util.Controller$5 -> com.volmit.wormholes.src.litora$5:
    int[] $SwitchMap$com$volmit$wormholes$util$TickHandler -> P
    238:238:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid -> com.volmit.wormholes.src.torquent:
    java.lang.String worldName -> Q
    int x1 -> R
    int y1 -> S
    int z1 -> T
    int x2 -> U
    int y2 -> V
    int z2 -> W
    40:53:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    57:67:int depth(com.volmit.wormholes.util.Axis) -> Lorem
    80:86:void set(org.bukkit.Location,org.bukkit.Location) -> ipsum
    90:90:boolean hasPlayers() -> customized
    95:107:com.volmit.wormholes.util.GList getPlayers() -> strategize
    112:163:com.volmit.wormholes.util.GList getEntities() -> Aenean
    174:175:void <init>(org.bukkit.Location) -> <init>
    179:179:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Direction,int) -> Lorem
    184:184:com.volmit.wormholes.util.Cuboid e(com.volmit.wormholes.util.Axis,int) -> Lorem
    195:196:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    217:225:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    246:254:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    257:265:void <init>(java.util.Map) -> <init>
    270:278:java.util.Map serialize() -> serialize
    283:283:com.volmit.wormholes.util.Cuboid flatten(int) -> at
    294:294:org.bukkit.Location getLowerNE() -> cutting
    305:305:org.bukkit.Location getUpperSW() -> distributed
    315:318:org.bukkit.Location getCenter() -> getCenter
    330:335:org.bukkit.World getWorld() -> getWorld
    345:345:int getSizeX() -> dot
    355:355:int getSizeY() -> com
    365:365:int getSizeZ() -> dynamic
    375:375:com.volmit.wormholes.util.Dimension getDimension() -> business
    385:385:int getLowerX() -> efficient
    395:395:int getLowerY() -> enterprise
    405:405:int getLowerZ() -> extensible
    415:415:int getUpperX() -> frictionless
    425:425:int getUpperY() -> front
    435:435:int getUpperZ() -> global
    445:455:org.bukkit.block.Block[] corners() -> granular
    472:487:com.volmit.wormholes.util.Cuboid expand(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> Lorem
    502:502:com.volmit.wormholes.util.Cuboid shift(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> ipsum
    518:532:com.volmit.wormholes.util.Cuboid outset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> dolor
    548:548:com.volmit.wormholes.util.Cuboid inset(com.volmit.wormholes.util.Cuboid$CuboidDirection,int) -> sit
    564:564:boolean contains(int,int,int) -> Lorem
    576:576:boolean contains(org.bukkit.block.Block) -> Lorem
    588:588:boolean contains(org.bukkit.Location) -> elit
    598:598:int volume() -> holistic
    609:619:byte averageLightLevel() -> impactful
    630:630:com.volmit.wormholes.util.Cuboid contract() -> innovative
    644:684:com.volmit.wormholes.util.Cuboid contract(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> Lorem
    698:713:com.volmit.wormholes.util.Cuboid getFace(com.volmit.wormholes.util.Cuboid$CuboidDirection) -> ipsum
    726:733:boolean containsOnly(org.bukkit.Material) -> Lorem
    746:758:com.volmit.wormholes.util.Cuboid getBoundingCuboid(com.volmit.wormholes.util.Cuboid) -> ipsum
    774:774:org.bukkit.block.Block getRelativeBlock(int,int,int) -> ipsum
    794:794:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> Lorem
    805:819:java.util.List getChunks() -> integrated
    834:838:void fill(int,byte) -> Lorem
    861:861:java.util.Iterator iterator() -> iterator
    871:871:com.volmit.wormholes.util.Cuboid clone() -> interactive
    881:881:java.lang.String toString() -> toString
    977:986:int hashCode() -> hashCode
    992:1052:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object clone() -> clone
com.volmit.wormholes.util.Cuboid$1 -> com.volmit.wormholes.src.torquent$1:
    com.volmit.wormholes.util.Cuboid this$0 -> X
    96:96:void <init>(com.volmit.wormholes.util.Cuboid) -> <init>
    100:105:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> pulvinar
    96:96:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Cuboid$2 -> com.volmit.wormholes.src.torquent$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> Y
    int[] $SwitchMap$com$volmit$wormholes$util$Cuboid$CuboidDirection -> Z
    57:472:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid$CuboidDirection -> com.volmit.wormholes.src.torquent$Lorem:
    com.volmit.wormholes.util.Cuboid$CuboidDirection North -> aa
    com.volmit.wormholes.util.Cuboid$CuboidDirection East -> ab
    com.volmit.wormholes.util.Cuboid$CuboidDirection South -> ae
    com.volmit.wormholes.util.Cuboid$CuboidDirection West -> af
    com.volmit.wormholes.util.Cuboid$CuboidDirection Up -> ag
    com.volmit.wormholes.util.Cuboid$CuboidDirection Down -> ah
    com.volmit.wormholes.util.Cuboid$CuboidDirection Horizontal -> ai
    com.volmit.wormholes.util.Cuboid$CuboidDirection Vertical -> aj
    com.volmit.wormholes.util.Cuboid$CuboidDirection Both -> ak
    com.volmit.wormholes.util.Cuboid$CuboidDirection Unknown -> al
    com.volmit.wormholes.util.Cuboid$CuboidDirection[] $VALUES -> am
    932:932:com.volmit.wormholes.util.Cuboid$CuboidDirection[] values() -> values
    932:932:com.volmit.wormholes.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    932:932:void <init>(java.lang.String,int) -> <init>
    948:969:com.volmit.wormholes.util.Cuboid$CuboidDirection opposite() -> intuitive
    932:944:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Cuboid$CuboidIterator -> com.volmit.wormholes.src.torquent$ipsum:
    org.bukkit.World w -> an
    int baseX -> ao
    int baseY -> ap
    int baseZ -> aq
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> ar
    int sizeY -> as
    int sizeZ -> au
    com.volmit.wormholes.util.Cuboid this$0 -> X
    892:901:void <init>(com.volmit.wormholes.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    906:906:boolean hasNext() -> hasNext
    912:922:org.bukkit.block.Block next() -> next
    929:929:void remove() -> remove
    884:884:java.lang.Object next() -> next
com.volmit.wormholes.util.CuboidException -> com.volmit.wormholes.src.per:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.CustomGZIPOutputStream -> com.volmit.wormholes.src.conubia:
    11:12:void <init>(java.io.OutputStream) -> <init>
    16:17:void setLevel(int) -> setLevel
com.volmit.wormholes.util.D -> com.volmit.wormholes.src.nostra:
    boolean rdebug -> av
    boolean fool -> aw
    java.lang.String name -> name
    com.volmit.wormholes.util.GList listeners -> ax
    com.volmit.wormholes.util.GList queue -> ay
    com.volmit.wormholes.util.GList globalListeners -> az
    java.lang.Boolean silent -> aA
    24:30:void d(java.lang.Object,java.lang.String) -> Lorem
    34:38:void d(java.lang.Class,java.lang.String) -> Lorem
    47:50:void <init>(java.lang.String) -> <init>
    71:71:com.volmit.wormholes.util.GList getListeners() -> killer
    81:81:com.volmit.wormholes.util.GList getGlobalListeners() -> leading
    86:119:void log(com.volmit.wormholes.util.D$DispatchType,java.lang.String,java.lang.String[]) -> Lorem
    123:153:void flush() -> flush
    163:164:void info(java.lang.String[]) -> elit
    174:175:void i(java.lang.String[]) -> ipsum
    185:186:void success(java.lang.String[]) -> Morbi
    196:197:void s(java.lang.String[]) -> dolor
    207:208:void failure(java.lang.String[]) -> pulvinar
    218:219:void f(java.lang.String[]) -> sit
    229:230:void warning(java.lang.String[]) -> vulputate
    240:241:void w(java.lang.String[]) -> amet
    251:252:void verbose(java.lang.String[]) -> dictum
    262:263:void v(java.lang.String[]) -> consectetur
    273:274:void overbose(java.lang.String[]) -> Vestibulum
    284:285:void o(java.lang.String[]) -> adipiscing
    294:294:java.lang.String getName() -> getName
    305:306:void setName(java.lang.String) -> setName
    315:315:java.lang.Boolean isSilent() -> magnetic
    326:327:void setSilent(java.lang.Boolean) -> Lorem
    338:341:int hashCode() -> hashCode
    347:377:boolean equals(java.lang.Object) -> equals
    15:333:void <clinit>() -> <clinit>
com.volmit.wormholes.util.D$DispatchType -> com.volmit.wormholes.src.nostra$Lorem:
    com.volmit.wormholes.util.D$DispatchType INFO -> aB
    com.volmit.wormholes.util.D$DispatchType SUCCESS -> aC
    com.volmit.wormholes.util.D$DispatchType FAILURE -> aD
    com.volmit.wormholes.util.D$DispatchType WARNING -> aE
    com.volmit.wormholes.util.D$DispatchType VERBOSE -> aF
    com.volmit.wormholes.util.D$DispatchType OVERBOSE -> aG
    com.volmit.wormholes.util.D$DispatchType[] $VALUES -> aH
    52:52:com.volmit.wormholes.util.D$DispatchType[] values() -> values
    52:52:com.volmit.wormholes.util.D$DispatchType valueOf(java.lang.String) -> valueOf
    52:52:void <init>(java.lang.String,int) -> <init>
    52:59:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DBoolean -> com.volmit.wormholes.src.inceptos:
    java.lang.Boolean integer -> aI
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Boolean) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Boolean get() -> critical
com.volmit.wormholes.util.DByte -> com.volmit.wormholes.src.himenaeos:
    java.lang.Byte integer -> aJ
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Byte) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Byte get() -> generation
com.volmit.wormholes.util.DBytes -> com.volmit.wormholes.src.Cras:
    byte[] integer -> aK
    10:12:void <init>() -> <init>
    15:17:void <init>(byte[]) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:byte[] get() -> get
com.volmit.wormholes.util.DChar -> com.volmit.wormholes.src.pellentesque:
    java.lang.Character integer -> aL
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Character) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Character get() -> one
com.volmit.wormholes.util.DDouble -> com.volmit.wormholes.src.ut:
    java.lang.Double integer -> aM
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Double) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Double get() -> source
com.volmit.wormholes.util.DFloat -> com.volmit.wormholes.src.finibus:
    java.lang.Float integer -> aN
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Float) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Float get() -> out
com.volmit.wormholes.util.DInteger -> com.volmit.wormholes.src.fermentum:
    java.lang.Integer integer -> aO
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Integer) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Integer get() -> the
com.volmit.wormholes.util.DLong -> com.volmit.wormholes.src.augue:
    java.lang.Long integer -> aP
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Long) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Long get() -> box
com.volmit.wormholes.util.DOP -> com.volmit.wormholes.src.erat:
    java.lang.String type -> type
    10:12:void <init>(java.lang.String) -> <init>
    org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
    18:18:java.lang.String getType() -> getType
com.volmit.wormholes.util.DShort -> com.volmit.wormholes.src.Aenean:
    java.lang.Short integer -> aQ
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.Short) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.Short get() -> plug
com.volmit.wormholes.util.DString -> com.volmit.wormholes.src.blandit:
    java.lang.String string -> string
    10:12:void <init>() -> <init>
    15:17:void <init>(java.lang.String) -> <init>
    22:27:byte[] toData() -> Integer
    33:44:void fromData(byte[]) -> elit
    49:49:byte getDataType() -> mission
    54:54:java.lang.String get() -> get
com.volmit.wormholes.util.DStringList -> com.volmit.wormholes.src.risus:
    com.volmit.wormholes.util.GList string -> aR
    10:12:void <init>() -> <init>
    15:17:void <init>(com.volmit.wormholes.util.GList) -> <init>
    22:33:byte[] toData() -> Integer
    39:59:void fromData(byte[]) -> elit
    64:64:byte getDataType() -> mission
    69:69:com.volmit.wormholes.util.GList get() -> augue
com.volmit.wormholes.util.DataCluster -> com.volmit.wormholes.src.Fusce:
    java.util.Map data -> data
    java.util.Map comments -> aS
    long perm -> aT
    long permX -> aU
    long totalSize -> aV
    long totalNodes -> aW
    long totalClusters -> aX
    long bytes -> aY
    long nodes -> aZ
    48:55:void <init>() -> <init>
    65:68:void <init>(com.volmit.wormholes.util.JSONObject) -> <init>
    78:124:void fromDataPack(com.volmit.wormholes.util.DataPack) -> Lorem
    133:170:com.volmit.wormholes.util.DataPack toDataPack() -> play
    181:184:void <init>(org.bukkit.configuration.file.FileConfiguration) -> <init>
    196:199:void <init>(byte[]) -> <init>
    209:213:void addYaml(org.bukkit.configuration.file.FileConfiguration) -> Lorem
    220:224:void <init>(java.util.Map) -> <init>
    236:237:void comment(java.lang.String,java.lang.String) -> sit
    248:255:byte[] compress() -> in
    268:274:void addCompressed(byte[]) -> Lorem
    283:290:com.volmit.wormholes.util.JSONObject toJSON() -> proactive
    300:331:com.volmit.wormholes.util.GMap makeNodes() -> real
    341:345:void addJson(com.volmit.wormholes.util.JSONObject) -> Lorem
    352:356:void clear() -> clear
    360:367:long byteSize() -> time
    374:413:long byteSize(java.lang.String) -> mi
    425:425:boolean hasComment(java.lang.String) -> euismod
    437:437:java.lang.String getComment(java.lang.String) -> Pellentesque
    449:467:java.util.List getComments(java.lang.String) -> at
    477:477:com.volmit.wormholes.util.GSet getRoots() -> revolutionary
    489:525:com.volmit.wormholes.util.GSet getRoots(java.lang.String) -> iaculis
    562:582:com.volmit.wormholes.util.DataCluster crop(java.lang.String) -> urna
    592:592:int size() -> size
    602:602:com.volmit.wormholes.util.GList keys() -> rich
    614:650:com.volmit.wormholes.util.GList toLines(boolean) -> Morbi
    660:667:org.bukkit.configuration.file.FileConfiguration toYaml() -> robust
    681:682:boolean isString(java.lang.String) -> isString
    696:697:boolean isStringList(java.lang.String) -> Proin
    711:712:boolean isInteger(java.lang.String) -> ac
    726:727:boolean isDouble(java.lang.String) -> isDouble
    741:742:boolean isLong(java.lang.String) -> isLong
    756:757:boolean isBoolean(java.lang.String) -> isBoolean
    772:773:boolean contains(java.lang.String,com.volmit.wormholes.util.DataCluster$ClusterType) -> Lorem
    788:791:void trySet(java.lang.String,java.lang.Object,java.lang.String) -> Lorem
    803:858:void trySet(java.lang.String,java.lang.Object) -> Lorem
    870:876:void set(java.lang.String,int) -> dolor
    888:894:void set(java.lang.String,long) -> Lorem
    906:912:void set(java.lang.String,double) -> Lorem
    924:930:void set(java.lang.String,boolean) -> Lorem
    942:948:void set(java.lang.String,java.lang.String) -> set
    960:966:void set(java.lang.String,java.util.List) -> Lorem
    978:979:void set(java.lang.String,com.volmit.wormholes.util.MetaObject) -> Lorem
    995:1005:com.volmit.wormholes.util.MetaObject getObject(java.lang.String,java.lang.Class) -> Lorem
    1018:1019:void set(java.lang.String,java.lang.Enum) -> Lorem
    1032:1040:java.lang.Enum getEnum(java.lang.String,java.lang.Class) -> ipsum
    1055:1057:void set(java.lang.String,int,java.lang.String) -> Lorem
    1071:1073:void set(java.lang.String,long,java.lang.String) -> Lorem
    1087:1089:void set(java.lang.String,double,java.lang.String) -> Lorem
    1103:1105:void set(java.lang.String,boolean,java.lang.String) -> Lorem
    1119:1121:void set(java.lang.String,java.lang.String,java.lang.String) -> Lorem
    1135:1137:void set(java.lang.String,java.util.List,java.lang.String) -> Lorem
    1148:1154:java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    1168:1172:void add(com.volmit.wormholes.util.DataCluster,java.lang.String) -> Lorem
    1182:1183:void add(com.volmit.wormholes.util.DataCluster) -> sit
    1194:1205:java.lang.Long getLong(java.lang.String) -> getLong
    1217:1223:java.lang.Integer getInt(java.lang.String) -> enim
    1235:1247:java.lang.Double getDouble(java.lang.String) -> getDouble
    1259:1265:java.lang.String getString(java.lang.String) -> getString
    1277:1283:java.util.List getStringList(java.lang.String) -> getStringList
    1295:1296:boolean contains(java.lang.String) -> contains
    1307:1309:void remove(java.lang.String) -> remove
    1320:1351:java.lang.Object getAbstract(java.lang.String) -> posuere
    1363:1367:com.volmit.wormholes.util.Cluster get(java.lang.String) -> molestie
    1379:1380:com.volmit.wormholes.util.DataCluster$ClusterType getType(java.lang.String) -> odio
    1390:1391:java.util.Map getData() -> getData
    1402:1407:void setData(java.util.Map) -> setData
    1416:1416:com.volmit.wormholes.util.DataCluster copy() -> scalable
    1422:1428:int hashCode() -> hashCode
    1434:1487:boolean equals(java.lang.Object) -> equals
    36:40:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DataCluster$ClusterType -> com.volmit.wormholes.src.Fusce$Lorem:
    com.volmit.wormholes.util.DataCluster$ClusterType INTEGER -> ba
    com.volmit.wormholes.util.DataCluster$ClusterType DOUBLE -> bb
    com.volmit.wormholes.util.DataCluster$ClusterType BOOLEAN -> bc
    com.volmit.wormholes.util.DataCluster$ClusterType STRING -> bd
    com.volmit.wormholes.util.DataCluster$ClusterType STRING_LIST -> be
    com.volmit.wormholes.util.DataCluster$ClusterType LONG -> bf
    com.volmit.wormholes.util.DataCluster$ClusterType[] $VALUES -> bg
    24:24:com.volmit.wormholes.util.DataCluster$ClusterType[] values() -> values
    24:24:com.volmit.wormholes.util.DataCluster$ClusterType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.DataController -> com.volmit.wormholes.src.maximus:
    com.volmit.wormholes.util.GMap cache -> bh
    18:21:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    26:42:com.volmit.wormholes.util.Configurable get(java.lang.Object) -> dolor
    48:52:void load(java.lang.Object) -> sit
    57:62:void save(java.lang.Object) -> save
    com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
    void onSave(java.lang.Object) -> consectetur
    73:79:void saveAll() -> saveAll
    84:84:boolean contains(java.lang.Object) -> contains
    90:90:com.volmit.wormholes.util.GMap getCache() -> seamless
    12:12:java.lang.Object onLoad(java.lang.Object) -> adipiscing
    12:12:java.lang.Object get(java.lang.Object) -> get
com.volmit.wormholes.util.DataEntity -> com.volmit.wormholes.src.ex:
    byte[] toData() -> Integer
    void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataFile -> com.volmit.wormholes.src.porttitor:
    13:13:void <init>() -> <init>
    25:34:void load(java.io.File) -> load
    46:55:void save(java.io.File) -> save
    60:60:byte[] toData() -> Integer
    66:67:void fromData(byte[]) -> elit
com.volmit.wormholes.util.DataHandle -> com.volmit.wormholes.src.nisi:
    byte[] toData() -> Integer
    void fromData(byte[]) -> elit
    byte getDataType() -> mission
    20:25:byte[] compress(byte[]) -> Morbi
    30:33:byte[] decompress(byte[]) -> pulvinar
com.volmit.wormholes.util.DataInput -> com.volmit.wormholes.src.justo:
    11:11:void <init>() -> <init>
    16:28:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataInputtable -> com.volmit.wormholes.src.Suspendisse:
    void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.DataOutput -> com.volmit.wormholes.src.elementum:
    11:11:void <init>() -> <init>
    16:29:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataOutputtable -> com.volmit.wormholes.src.mattis:
    void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.DataPack -> com.volmit.wormholes.src.primis:
    com.volmit.wormholes.util.GList entities -> bi
    10:12:void <init>() -> <init>
    16:17:void put(com.volmit.wormholes.util.DataHandle) -> Lorem
    22:33:byte[] toData() -> Integer
    39:64:void fromData(byte[]) -> elit
    69:69:byte getDataType() -> mission
    74:74:com.volmit.wormholes.util.GList getEntities() -> Aenean
    80:87:java.lang.String toString() -> toString
com.volmit.wormholes.util.Database -> com.volmit.wormholes.src.cubilia:
    java.sql.Connection connection -> bj
    26:28:void <init>() -> <init>
    java.sql.Connection openConnection() -> sexy
    50:50:boolean checkConnection() -> sticky
    60:60:java.sql.Connection getConnection() -> getConnection
    72:77:boolean closeConnection() -> strategic
    95:104:java.sql.ResultSet querySQL(java.lang.String) -> a
    122:131:int updateSQL(java.lang.String) -> facilisis
com.volmit.wormholes.util.DatabaseConnection -> com.volmit.wormholes.src.Curae:
    java.lang.String address -> address
    int port -> port
    java.lang.String database -> database
    java.lang.String username -> username
    java.lang.String password -> password
    31:32:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    48:49:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    63:64:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    81:87:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    91:91:java.lang.String getAddress() -> getAddress
    96:97:void setAddress(java.lang.String) -> setAddress
    101:101:int getPort() -> getPort
    106:107:void setPort(int) -> setPort
    111:111:java.lang.String getUsername() -> getUsername
    116:117:void setUsername(java.lang.String) -> setUsername
    121:121:java.lang.String getPassword() -> getPassword
    126:127:void setPassword(java.lang.String) -> setPassword
    131:131:java.lang.String getDatabase() -> getDatabase
    136:137:void setDatabase(java.lang.String) -> In
com.volmit.wormholes.util.Depend -> com.volmit.wormholes.src.habitant:
    com.volmit.wormholes.util.Depend VAULT -> bk
    com.volmit.wormholes.util.Depend FAWE -> bl
    com.volmit.wormholes.util.Depend WORLDEDIT -> bm
    com.volmit.wormholes.util.Depend PROTOLIB -> bn
    com.volmit.wormholes.util.Depend CITIZENS -> bo
    java.lang.String name -> name
    com.volmit.wormholes.util.Depend[] $VALUES -> bp
    5:5:com.volmit.wormholes.util.Depend[] values() -> values
    5:5:com.volmit.wormholes.util.Depend valueOf(java.lang.String) -> valueOf
    16:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    5:11:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Dialog -> com.volmit.wormholes.src.morbi:
    com.volmit.wormholes.util.Dialog setCancellable(boolean) -> pulvinar
    void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
com.volmit.wormholes.util.Dimension -> com.volmit.wormholes.src.senectus:
    int width -> width
    int height -> height
    int depth -> depth
    25:29:void <init>(int,int,int) -> <init>
    40:44:void <init>(int,int) -> <init>
    54:69:com.volmit.wormholes.util.DimensionFace getPane() -> synergistic
    74:74:int getWidth() -> getWidth
    79:79:int getHeight() -> getHeight
    84:84:int getDepth() -> getDepth
com.volmit.wormholes.util.DimensionFace -> com.volmit.wormholes.src.netus:
    com.volmit.wormholes.util.DimensionFace X -> bq
    com.volmit.wormholes.util.DimensionFace Y -> br
    com.volmit.wormholes.util.DimensionFace Z -> bs
    com.volmit.wormholes.util.DimensionFace[] $VALUES -> bt
    8:8:com.volmit.wormholes.util.DimensionFace[] values() -> values
    8:8:com.volmit.wormholes.util.DimensionFace valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction -> com.volmit.wormholes.src.fames:
    com.volmit.wormholes.util.Direction U -> bu
    com.volmit.wormholes.util.Direction D -> bv
    com.volmit.wormholes.util.Direction N -> bw
    com.volmit.wormholes.util.Direction S -> bx
    com.volmit.wormholes.util.Direction E -> by
    com.volmit.wormholes.util.Direction W -> bz
    com.volmit.wormholes.util.GMap permute -> bA
    int x -> x
    int y -> y
    int z -> z
    com.volmit.wormholes.util.Cuboid$CuboidDirection f -> bB
    com.volmit.wormholes.util.Direction[] $VALUES -> bC
    11:11:com.volmit.wormholes.util.Direction[] values() -> values
    11:11:com.volmit.wormholes.util.Direction valueOf(java.lang.String) -> valueOf
    29:29:boolean isVertical() -> isVertical
    34:49:com.volmit.wormholes.util.Direction closest(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction[]) -> Lorem
    54:54:org.bukkit.util.Vector toVector() -> toVector
    59:69:boolean isCrooked(com.volmit.wormholes.util.Direction) -> ipsum
    73:78:void <init>(java.lang.String,int,int,int,int,com.volmit.wormholes.util.Cuboid$CuboidDirection) -> <init>
    82:93:org.bukkit.util.Vector angle(org.bukkit.util.Vector,com.volmit.wormholes.util.Direction) -> Lorem
    98:116:com.volmit.wormholes.util.Direction reverse() -> transparent
    121:121:int x() -> turn
    126:126:int y() -> key
    131:131:int z() -> z
    136:136:com.volmit.wormholes.util.Cuboid$CuboidDirection f() -> ubiquitous
    141:141:com.volmit.wormholes.util.GList news() -> user
    146:156:com.volmit.wormholes.util.Direction getDirection(org.bukkit.util.Vector) -> amet
    161:161:com.volmit.wormholes.util.GList udnews() -> centric
    175:207:com.volmit.wormholes.util.Direction fromByte(byte) -> sit
    218:236:byte byteValue() -> byteValue
    241:378:void calculatePermutations() -> added
    382:398:com.volmit.wormholes.util.Axis getAxis() -> lorem
    11:20:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction$1 -> com.volmit.wormholes.src.fames$1:
    257:257:void <init>(java.lang.String) -> <init>
    261:261:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$10 -> com.volmit.wormholes.src.fames$2:
    368:368:void <init>(java.lang.String) -> <init>
    372:372:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$11 -> com.volmit.wormholes.src.fames$3:
    int[] $SwitchMap$com$volmit$wormholes$util$Direction -> bD
    98:98:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Direction$2 -> com.volmit.wormholes.src.fames$4:
    271:271:void <init>(java.lang.String) -> <init>
    275:275:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$3 -> com.volmit.wormholes.src.fames$5:
    283:283:void <init>(java.lang.String) -> <init>
    287:287:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$4 -> com.volmit.wormholes.src.fames$6:
    296:296:void <init>(java.lang.String) -> <init>
    300:300:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$5 -> com.volmit.wormholes.src.fames$7:
    308:308:void <init>(java.lang.String) -> <init>
    312:312:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$6 -> com.volmit.wormholes.src.fames$8:
    320:320:void <init>(java.lang.String) -> <init>
    324:324:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$7 -> com.volmit.wormholes.src.fames$9:
    332:332:void <init>(java.lang.String) -> <init>
    336:336:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$8 -> com.volmit.wormholes.src.fames$10:
    344:344:void <init>(java.lang.String) -> <init>
    348:348:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.Direction$9 -> com.volmit.wormholes.src.fames$11:
    356:356:void <init>(java.lang.String) -> <init>
    360:360:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> sit
com.volmit.wormholes.util.DoubleTag -> com.volmit.wormholes.src.pharetra:
    double value -> value
    54:56:void <init>(java.lang.String,double) -> <init>
    60:60:java.lang.Double getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Element -> com.volmit.wormholes.src.potenti:
    com.volmit.wormholes.util.Element addText(java.lang.String) -> hac
    org.bukkit.Material getType() -> getType
    com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    java.lang.Byte getMetadata() -> vertical
    com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Element setTitle(java.lang.String) -> habitasse
    com.volmit.wormholes.util.GList getText() -> viral
    com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    java.lang.Short getDurability() -> virtual
    com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    com.volmit.wormholes.util.Slot getSlot() -> visionary
    com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    java.lang.Integer getCount() -> getCount
    com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    com.volmit.wormholes.util.Element copy() -> web
    com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    org.bukkit.inventory.ItemStack getStack() -> enabled
    void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    void setGlowing(boolean) -> setGlowing
    boolean isGlowing() -> isGlowing
    java.util.UUID getId() -> getId
com.volmit.wormholes.util.EndTag -> com.volmit.wormholes.src.pretium:
    47:48:void <init>() -> <init>
    52:52:java.lang.Object getValue() -> getValue
    57:57:java.lang.String toString() -> toString
com.volmit.wormholes.util.EntityHologram -> com.volmit.wormholes.src.dui:
    org.bukkit.entity.Entity base -> bE
    org.bukkit.entity.Player exc -> bF
    25:28:void <init>(org.bukkit.entity.Entity) -> <init>
    33:33:org.bukkit.entity.Entity getHandle() -> wireless
    39:39:java.lang.String getDisplay() -> getDisplay
    45:53:void setDisplay(java.lang.String) -> setDisplay
    58:59:void setLocation(org.bukkit.Location) -> setLocation
    64:65:void setTextLocation(org.bukkit.Location) -> euismod
    70:71:void destroy() -> destroy
    76:76:org.bukkit.Location getLocation() -> getLocation
    82:91:void setExclusive(org.bukkit.entity.Player) -> at
    96:96:org.bukkit.entity.Player getExclusive() -> world
com.volmit.wormholes.util.EntityHud -> com.volmit.wormholes.src.massa:
    org.bukkit.entity.Entity track -> bG
    double maxDist -> bH
    15:19:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity,double) -> <init>
    23:24:void <init>(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> <init>
    29:32:org.bukkit.Location getBaseLocation() -> disintermediate
    38:44:void onUpdateInternal() -> embrace
com.volmit.wormholes.util.Execution -> com.volmit.wormholes.src.gravida:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.ExecutiveIterator -> com.volmit.wormholes.src.id:
    java.util.Iterator it -> bI
    java.lang.Boolean cancelled -> bJ
    java.lang.Object repeated -> bK
    java.lang.Integer size -> bL
    31:36:void <init>(java.util.List) -> <init>
    47:52:void <init>(java.util.Iterator) -> <init>
    void onIterate(java.lang.Object) -> elit
    59:59:boolean hasNext() -> hasNext
    65:79:java.lang.Object next() -> next
    89:89:int size() -> size
    99:99:boolean isCancelled() -> isCancelled
    107:108:void cancel() -> cancel
com.volmit.wormholes.util.ExecutivePool -> com.volmit.wormholes.src.fringilla:
    com.volmit.wormholes.util.GList tasks -> bM
    com.volmit.wormholes.util.Task task -> K
    23:56:void <init>(java.lang.Double,java.lang.Integer) -> <init>
    65:65:boolean isIdle() -> class
    76:77:void add(com.volmit.wormholes.util.ExecutiveIterator) -> Lorem
    86:93:int size() -> size
    101:107:void cancel() -> cancel
    116:116:boolean isRunning() -> isRunning
    9:9:com.volmit.wormholes.util.GList access$000(com.volmit.wormholes.util.ExecutivePool) -> Lorem
com.volmit.wormholes.util.ExecutivePool$1 -> com.volmit.wormholes.src.fringilla$1:
    java.lang.Double val$limit -> bN
    com.volmit.wormholes.util.ExecutivePool this$0 -> bO
    26:26:void <init>(com.volmit.wormholes.util.ExecutivePool,int,java.lang.Double) -> <init>
    29:54:void run() -> run
com.volmit.wormholes.util.ExecutiveRunnable -> com.volmit.wormholes.src.Nulla:
    java.lang.Object next -> bP
    java.lang.Boolean cancelled -> bJ
    java.lang.Boolean repeated -> bQ
    11:11:void <init>() -> <init>
    25:29:void run(java.lang.Object) -> Morbi
    35:35:void run() -> run
    45:45:java.lang.Object next() -> next
    53:54:void cancel() -> cancel
    63:63:boolean isCancelled() -> isCancelled
    72:73:void repeat() -> action
    82:82:boolean isRepeated() -> items
com.volmit.wormholes.util.ExecutiveTask -> com.volmit.wormholes.src.facilisi:
    com.volmit.wormholes.util.ExecutiveIterator it -> bR
    java.lang.Double limit -> bS
    java.lang.Integer interval -> bT
    java.lang.Runnable finish -> bU
    com.volmit.wormholes.util.Task task -> K
    33:57:void <init>(com.volmit.wormholes.util.ExecutiveIterator,java.lang.Double,java.lang.Integer,java.lang.Runnable) -> <init>
    64:66:void cancel() -> cancel
    75:75:boolean isRunning() -> isRunning
    12:12:com.volmit.wormholes.util.ExecutiveIterator access$000(com.volmit.wormholes.util.ExecutiveTask) -> Lorem
    12:12:java.lang.Double access$100(com.volmit.wormholes.util.ExecutiveTask) -> ipsum
    12:12:java.lang.Runnable access$200(com.volmit.wormholes.util.ExecutiveTask) -> dolor
com.volmit.wormholes.util.ExecutiveTask$1 -> com.volmit.wormholes.src.facilisi$1:
    com.volmit.wormholes.util.ExecutiveTask this$0 -> bV
    40:40:void <init>(com.volmit.wormholes.util.ExecutiveTask,int) -> <init>
    43:55:void run() -> run
com.volmit.wormholes.util.Explosion -> com.volmit.wormholes.src.libero:
    float power -> bW
    boolean pushBlocks -> bX
    15:18:void <init>() -> <init>
    22:23:com.volmit.wormholes.util.Explosion power(float) -> ipsum
    28:29:com.volmit.wormholes.util.Explosion pushBlocks() -> applications
    34:40:void boom(org.bukkit.Location) -> Pellentesque
    45:47:void on(org.bukkit.event.entity.EntityExplodeEvent) -> Lorem
com.volmit.wormholes.util.F -> com.volmit.wormholes.src.condimentum:
    java.text.NumberFormat NF -> bY
    java.text.DecimalFormat DF -> bZ
    java.lang.String[] NAMES -> ca
    java.math.BigInteger THOUSAND -> cb
    java.util.NavigableMap MAP -> cc
    19:19:void <init>() -> <init>
    39:39:java.lang.String b(int) -> b
    44:44:java.lang.String b(long) -> sit
    49:49:java.lang.String b(double) -> consectetur
    54:71:java.lang.String b(java.math.BigInteger) -> Lorem
    76:80:void instantiate() -> architectures
    91:91:java.lang.String color(java.lang.String) -> platea
    106:121:com.volmit.wormholes.util.GList colorSplit(java.lang.String) -> dictumst
    134:134:java.lang.String fileSize(long) -> amet
    147:147:java.lang.String memSize(long) -> consectetur
    160:161:java.lang.String stamp(long) -> adipiscing
    171:171:java.lang.String stamp() -> bandwidth
    187:214:java.lang.String ofSize(long,int) -> Lorem
    227:227:com.volmit.wormholes.util.GList wrap(java.lang.String) -> Nam
    242:259:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    274:279:java.lang.String trim(java.lang.String,int) -> amet
    292:312:java.lang.String cname(java.lang.String) -> metus
    328:363:com.volmit.wormholes.util.GList getParameters(java.lang.String,char) -> Lorem
    377:389:java.lang.String repeat(java.lang.String,int) -> repeat
    401:408:java.lang.String mem(long) -> elit
    421:439:java.lang.String memx(long) -> Morbi
    453:454:java.lang.String f(long) -> pulvinar
    466:467:java.lang.String f(int) -> iaculis
    481:490:java.lang.String f(double,int) -> Lorem
    506:515:java.lang.String fd(double,int) -> ipsum
    529:538:java.lang.String f(float,int) -> Lorem
    549:549:java.lang.String f(double) -> adipiscing
    560:560:java.lang.String f(float) -> dolor
    575:575:java.lang.String pc(double,int) -> dolor
    590:590:java.lang.String pc(float,int) -> ipsum
    603:603:java.lang.String pc(double) -> elit
    616:616:java.lang.String pc(float) -> sit
    632:632:java.lang.String pc(int,int,int) -> dolor
    646:646:java.lang.String pc(int,int) -> dolor
    662:662:java.lang.String pc(long,long,int) -> Lorem
    676:676:java.lang.String pc(long,long) -> Lorem
    688:688:java.lang.String msSeconds(long) -> vulputate
    702:702:java.lang.String msSeconds(long,int) -> ipsum
    714:714:java.lang.String nsMs(long) -> dictum
    728:728:java.lang.String nsMs(long,int) -> dolor
    742:742:java.lang.String nsMsd(long,int) -> sit
    754:761:com.volmit.wormholes.util.GList color(java.util.List) -> ipsum
    24:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.FM -> com.volmit.wormholes.src.interdum:
    18:18:void <init>() -> <init>
    22:48:void createAll(java.io.File,java.io.File) -> sit
    52:78:void parseAll(java.io.File,java.io.File) -> amet
    82:92:void create(java.io.File,java.io.File) -> consectetur
    96:109:void parse(java.io.File,java.io.File) -> adipiscing
com.volmit.wormholes.util.FOP -> com.volmit.wormholes.src.dapibus:
    void operate() -> channels
    void reverse() -> reverse
    void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.FU -> com.volmit.wormholes.src.sollicitudin:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> Lorem
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> ipsum
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:806:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:830:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:862:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> amet
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> consectetur
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
    95:95:void <clinit>() -> <clinit>
com.volmit.wormholes.util.FileHack -> com.volmit.wormholes.src.Aliquam:
    com.volmit.wormholes.util.GList queue -> ay
    8:10:void <init>() -> <init>
    14:15:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    19:23:void execute() -> execute
com.volmit.wormholes.util.FinalDouble -> com.volmit.wormholes.src.auctor:
    double i -> cd
    19:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> Morbi
com.volmit.wormholes.util.FinalFloat -> com.volmit.wormholes.src.Curabitur:
    float i -> i
    19:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> set
    52:53:void add(float) -> add
    63:64:void sub(float) -> amet
com.volmit.wormholes.util.FinalInteger -> com.volmit.wormholes.src.feugiat:
    int i -> i
    19:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> urna
com.volmit.wormholes.util.FinalLong -> com.volmit.wormholes.src.efficitur:
    long i -> ce
    19:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> Vestibulum
com.volmit.wormholes.util.FinalString -> com.volmit.wormholes.src.laoreet:
    java.lang.String string -> string
    19:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
com.volmit.wormholes.util.FloatTag -> com.volmit.wormholes.src.nunc:
    float value -> value
    54:56:void <init>(java.lang.String,float) -> <init>
    60:60:java.lang.Float getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Formula -> com.volmit.wormholes.src.venenatis:
    java.lang.String expression -> cf
    31:33:void <init>(java.lang.String) -> <init>
    48:48:double evaluate(java.lang.Double[]) -> Lorem
com.volmit.wormholes.util.ForwardedPluginMessage -> com.volmit.wormholes.src.rutrum:
    27:31:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
    35:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.lang.String,byte[]) -> <init>
    53:54:void <init>(org.bukkit.plugin.Plugin,java.lang.String,java.io.ByteArrayOutputStream) -> <init>
com.volmit.wormholes.util.Frustrum -> com.volmit.wormholes.src.mauris:
    int ox -> cg
    int oy -> ch
    int oz -> ci
    int maxX -> cj
    int maxY -> ck
    int maxZ -> cl
    int minX -> minX
    int minY -> minY
    int minZ -> cm
    org.bukkit.World world -> world
    org.bukkit.util.Vector vMin -> cn
    org.bukkit.util.Vector vMax -> co
    org.bukkit.util.Vector vDirect -> cp
    org.bukkit.Location origin -> cq
    com.volmit.wormholes.util.Cuboid frame -> cr
    com.volmit.wormholes.util.Direction direction -> cs
    com.volmit.wormholes.util.Axis axis -> est
    32:50:void <init>(org.bukkit.World,int,int,int,int,int,int,int,int,int) -> <init>
    54:55:void <init>(org.bukkit.Location,org.bukkit.Location,org.bukkit.Location) -> <init>
    59:60:void <init>(org.bukkit.Location,com.volmit.wormholes.util.Cuboid) -> <init>
    64:76:com.volmit.wormholes.util.GList getPlayers(int) -> Proin
    81:99:com.volmit.wormholes.util.GList getEntities(int) -> ac
    104:130:com.volmit.wormholes.util.GList getBlocks(int) -> enim
    135:170:boolean w(org.bukkit.Location) -> at
    175:175:boolean w(int,int,int) -> sit
    180:180:int getOx() -> communities
    185:185:int getOy() -> content
    190:190:int getOz() -> convergence
    195:195:int getMaxX() -> deliverables
    200:200:int getMaxY() -> commerce
    205:205:int getMaxZ() -> markets
    210:210:int getMinX() -> getMinX
    215:215:int getMinY() -> getMinY
    220:220:int getMinZ() -> services
    225:225:org.bukkit.World getWorld() -> getWorld
    230:230:org.bukkit.util.Vector getvMin() -> tailers
    235:235:org.bukkit.util.Vector getvMax() -> experiences
    240:240:org.bukkit.util.Vector getvDirect() -> eyeballs
    245:245:org.bukkit.Location getOrigin() -> functionalities
    250:250:com.volmit.wormholes.util.Cuboid getFrame() -> infomediaries
    255:255:com.volmit.wormholes.util.Direction getDirection() -> infrastructures
    260:260:com.volmit.wormholes.util.Axis getAxis() -> lorem
com.volmit.wormholes.util.Frustrum$1 -> com.volmit.wormholes.src.mauris$1:
    com.volmit.wormholes.util.Frustrum this$0 -> ct
    65:65:void <init>(com.volmit.wormholes.util.Frustrum) -> <init>
    69:74:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> pulvinar
    65:65:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.Frustrum$2 -> com.volmit.wormholes.src.mauris$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Direction -> bD
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> Y
    110:138:void <clinit>() -> <clinit>
com.volmit.wormholes.util.GAdapter -> com.volmit.wormholes.src.lobortis:
    12:12:void <init>() -> <init>
    17:17:java.lang.Object adapt(java.lang.Object) -> Lorem
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GBiset -> com.volmit.wormholes.src.bibendum:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> cu
    java.lang.Object b -> cv
    30:33:void <init>(java.lang.Object,java.lang.Object) -> <init>
    42:42:java.lang.Object getA() -> initiatives
    53:54:void setA(java.lang.Object) -> pulvinar
    63:63:java.lang.Object getB() -> interfaces
    73:74:void setB(java.lang.Object) -> vulputate
    79:83:int hashCode() -> hashCode
    89:125:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.GBook -> com.volmit.wormholes.src.Orci:
    com.volmit.wormholes.util.GList pages -> cw
    java.lang.String title -> title
    java.lang.String author -> author
    28:32:void <init>(java.lang.String,java.lang.String) -> <init>
    36:36:java.lang.String getTitle() -> getTitle
    41:42:void setTitle(java.lang.String) -> setTitle
    46:46:java.lang.String getAuthor() -> getAuthor
    51:52:void setAuthor(java.lang.String) -> setAuthor
    56:57:void setPages(com.volmit.wormholes.util.GList) -> adipiscing
    61:63:com.volmit.wormholes.util.GBook addPage(com.volmit.wormholes.util.GPage) -> Lorem
    68:68:com.volmit.wormholes.util.GList getPages() -> methodologies
    73:87:com.volmit.wormholes.util.GList toPages() -> metrics
    97:104:org.bukkit.inventory.ItemStack toBook() -> mindshare
    116:128:com.volmit.wormholes.util.GList read(org.bukkit.inventory.ItemStack) -> ipsum
com.volmit.wormholes.util.GChunk -> com.volmit.wormholes.src.natoque:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> cx
    java.lang.Integer z -> cy
    java.lang.String world -> cz
    28:29:void <init>(org.bukkit.Chunk) -> <init>
    38:39:void <init>(org.bukkit.Location) -> <init>
    52:56:void <init>(int,int,java.lang.String) -> <init>
    61:66:int hashCode() -> hashCode
    72:128:boolean equals(java.lang.Object) -> equals
    140:145:boolean isChunk(org.bukkit.Chunk) -> ipsum
    155:155:java.lang.Integer getX() -> models
    166:167:void setX(java.lang.Integer) -> ipsum
    176:176:java.lang.Integer getZ() -> networks
    187:188:void setZ(java.lang.Integer) -> dolor
    197:197:java.lang.String getWorld() -> niches
    208:209:void setWorld(java.lang.String) -> setWorld
    218:218:org.bukkit.Chunk toChunk() -> paradigms
    227:227:java.lang.String toString() -> toString
com.volmit.wormholes.util.GFile -> com.volmit.wormholes.src.penatibus:
    long serialVersionUID -> serialVersionUID
    27:28:void <init>(java.io.File,java.lang.String) -> <init>
    38:39:void <init>(java.net.URI) -> <init>
    51:52:void <init>(java.lang.String,java.lang.String) -> <init>
    64:65:void <init>(com.volmit.wormholes.util.GFile,java.lang.String[]) -> <init>
    75:76:void <init>(java.lang.String) -> <init>
    83:88:boolean createNewFile() -> createNewFile
com.volmit.wormholes.util.GList -> com.volmit.wormholes.src.magnis:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    40:46:void <init>(java.util.Set) -> <init>
    56:62:void <init>(java.util.Collection) -> <init>
    72:78:void <init>(java.util.Iterator) -> <init>
    88:90:void <init>(java.lang.Object[]) -> <init>
    101:109:void <init>(java.util.List) -> <init>
    118:145:java.lang.Object mostCommon() -> partnerships
    155:157:com.volmit.wormholes.util.GList shuffleCopy() -> platforms
    165:166:void shuffle() -> portals
    189:215:com.volmit.wormholes.util.GList split() -> relationships
    227:227:boolean hasIndex(int) -> hasIndex
    237:238:java.lang.Object pickRandom() -> ROI
    249:256:com.volmit.wormholes.util.GList stringList() -> synergies
    266:266:int last() -> last
    280:285:int getIndexOrLast(int) -> posuere
    303:303:com.volmit.wormholes.util.GList cropFrom(int) -> molestie
    308:340:com.volmit.wormholes.util.GList split(int) -> odio
    358:358:com.volmit.wormholes.util.GList cropTo(int) -> a
    377:387:com.volmit.wormholes.util.GList crop(int,int) -> sit
    398:402:com.volmit.wormholes.util.GList removeDuplicates() -> readiness
    413:417:void removeAll(java.lang.Object) -> dictum
    426:426:boolean hasDuplicates() -> schemas
    434:442:void sort() -> sort
    455:461:void push(java.lang.Object,int) -> Lorem
    472:476:void add(java.lang.Object[]) -> add
    487:488:com.volmit.wormholes.util.GList qadd(java.lang.Object) -> Vestibulum
    499:503:void add(java.util.List) -> dolor
    516:548:java.lang.String toString(java.lang.String) -> toString
    558:560:com.volmit.wormholes.util.GList reverse() -> solutions
    569:569:java.lang.String toString() -> toString
    579:586:com.volmit.wormholes.util.GList copy() -> supply
    598:599:com.volmit.wormholes.util.GList qdel(java.lang.Object) -> in
    609:616:java.lang.Object pop() -> pop
    621:630:java.lang.Object popRandom() -> chains
com.volmit.wormholes.util.GList$1 -> com.volmit.wormholes.src.magnis$1:
    com.volmit.wormholes.util.GList this$0 -> cA
    435:435:void <init>(com.volmit.wormholes.util.GList) -> <init>
    439:439:int compare(java.lang.Object,java.lang.Object) -> compare
com.volmit.wormholes.util.GListAdapter -> com.volmit.wormholes.src.dis:
    14:14:void <init>() -> <init>
    25:37:java.util.List adapt(java.util.List) -> sit
    java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.GMCA -> com.volmit.wormholes.src.parturient:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer x -> cx
    java.lang.Integer z -> cy
    java.lang.String world -> cz
    29:33:void <init>(int,int,java.lang.String) -> <init>
    38:43:int hashCode() -> hashCode
    49:105:boolean equals(java.lang.Object) -> equals
    115:115:java.lang.Integer getX() -> models
    126:127:void setX(java.lang.Integer) -> ipsum
    136:136:java.lang.Integer getZ() -> networks
    147:148:void setZ(java.lang.Integer) -> dolor
    157:157:java.lang.String getWorld() -> niches
    168:169:void setWorld(java.lang.String) -> setWorld
    177:177:java.lang.String toString() -> toString
com.volmit.wormholes.util.GMap -> com.volmit.wormholes.src.montes:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:23:void <init>(java.util.Map) -> <init>
    32:39:com.volmit.wormholes.util.GMap copy() -> systems
    53:54:com.volmit.wormholes.util.GMap qput(java.lang.Object,java.lang.Object) -> Lorem
    64:81:com.volmit.wormholes.util.GMap flip() -> technologies
    87:94:java.lang.String toString() -> toString
    106:111:com.volmit.wormholes.util.GMap append(com.volmit.wormholes.util.GMap) -> dolor
    121:121:com.volmit.wormholes.util.GList k() -> users
    131:131:com.volmit.wormholes.util.GSet kset() -> vortals
    141:141:com.volmit.wormholes.util.GList v() -> obfuscate
    151:151:com.volmit.wormholes.util.GSet vset() -> star
    164:168:void putNVD(java.lang.Object,java.lang.Object) -> ipsum
    176:176:boolean contains(java.lang.Object) -> contains
    188:198:com.volmit.wormholes.util.GList get(com.volmit.wormholes.util.GList) -> elit
    209:219:com.volmit.wormholes.util.GMap removeDuplicateValues() -> see
    233:242:void put(com.volmit.wormholes.util.GList,com.volmit.wormholes.util.GList) -> Lorem
    251:267:com.volmit.wormholes.util.GList sortK() -> definition
    277:293:com.volmit.wormholes.util.GList sortV() -> show
com.volmit.wormholes.util.GPage -> com.volmit.wormholes.src.nascetur:
    com.volmit.wormholes.util.GMap elements -> cB
    16:18:void <init>() -> <init>
    31:42:com.volmit.wormholes.util.GPage put(java.lang.String,java.lang.String) -> amet
    47:47:com.volmit.wormholes.util.GMap getElements() -> verb
    52:53:void setElements(com.volmit.wormholes.util.GMap) -> sit
com.volmit.wormholes.util.GQuadraset -> com.volmit.wormholes.src.ridiculus:
    java.lang.Object a -> cu
    java.lang.Object b -> cv
    java.lang.Object c -> cC
    java.lang.Object d -> cD
    12:17:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    21:21:java.lang.Object getA() -> initiatives
    26:27:void setA(java.lang.Object) -> pulvinar
    31:31:java.lang.Object getB() -> interfaces
    36:37:void setB(java.lang.Object) -> vulputate
    41:41:java.lang.Object getC() -> confuse
    46:47:void setC(java.lang.Object) -> purus
    51:51:java.lang.Object getD() -> baffle
    56:57:void setD(java.lang.Object) -> non
com.volmit.wormholes.util.GSet -> com.volmit.wormholes.src.mus:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
com.volmit.wormholes.util.GSound -> com.volmit.wormholes.src.Interdum:
    java.lang.String sound -> cE
    org.bukkit.Sound iSound -> cF
    java.lang.Float volume -> cG
    java.lang.Float pitch -> cH
    33:37:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    52:57:void <init>(org.bukkit.Sound,java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    66:70:void <init>(java.lang.String) -> <init>
    80:84:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    93:97:void <init>(org.bukkit.Sound) -> <init>
    102:102:void prePlay() -> Relevance
    114:127:void play(org.bukkit.entity.Player,org.bukkit.Location) -> dolor
    137:138:void play(org.bukkit.entity.Player) -> euismod
    145:145:com.volmit.wormholes.util.Audible clone() -> aggregate
    156:169:void play(org.bukkit.Location) -> mi
    181:196:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Lorem
    205:205:java.lang.String getSound() -> A
    216:217:void setSound(java.lang.String) -> nisl
    226:226:org.bukkit.Sound getiSound() -> ZComplexity
    237:238:void setiSound(org.bukkit.Sound) -> Lorem
    247:247:java.lang.Float getVolume() -> mus
    258:259:void setVolume(java.lang.Float) -> Lorem
    268:268:java.lang.Float getPitch() -> Interdum
    279:280:void setPitch(java.lang.Float) -> ipsum
    15:15:java.lang.Object clone() -> clone
com.volmit.wormholes.util.GText -> com.volmit.wormholes.src.aggregate:
    com.volmit.wormholes.util.RTX t -> cI
    19:21:void <init>() -> <init>
    33:44:void add(java.lang.String) -> add
    58:86:void addWithHover(java.lang.String,java.lang.String) -> consectetur
    102:130:void addWithHoverCommand(java.lang.String,java.lang.String,java.lang.String) -> ipsum
    146:174:void addWithHoverSuggestCommand(java.lang.String,java.lang.String,java.lang.String) -> dolor
    190:218:void addWithHoverURL(java.lang.String,java.lang.String,java.lang.String) -> sit
    222:222:com.volmit.wormholes.util.GText pack() -> Length
    232:232:com.volmit.wormholes.util.JSONArray toJSON() -> lists
    243:244:void tellRawTo(org.bukkit.entity.Player) -> iaculis
com.volmit.wormholes.util.GTime -> com.volmit.wormholes.src.architect:
    long serialVersionUID -> serialVersionUID
    long days -> cJ
    long hours -> cK
    long minutes -> cL
    long seconds -> cM
    long milliseconds -> cN
    33:34:void <init>(long,long,long,long,long) -> <init>
    43:54:void <init>(long) -> <init>
    63:98:void <init>(java.lang.String) -> <init>
    102:129:int getMult(java.lang.String) -> magna
    135:135:long getDays() -> blocks
    140:140:long getHours() -> Common
    145:145:long getMinutes() -> Informal
    150:150:long getSeconds() -> getSeconds
    155:155:long getMilliseconds() -> Synonyms
    160:160:long getTotalDuration() -> for
    170:187:java.lang.String shortDescription() -> b
    193:198:java.lang.String s(long) -> in
    208:208:java.lang.String to() -> to
    220:258:java.lang.String to(java.lang.String) -> tortor
    268:288:java.lang.String ago() -> c
    293:315:java.lang.String toString() -> toString
com.volmit.wormholes.util.GTriset -> com.volmit.wormholes.src.benchmark:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> cu
    java.lang.Object b -> cv
    java.lang.Object c -> cC
    14:18:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    22:22:java.lang.Object getA() -> initiatives
    27:28:void setA(java.lang.Object) -> pulvinar
    32:32:java.lang.Object getB() -> interfaces
    37:38:void setB(java.lang.Object) -> vulputate
    42:42:java.lang.Object getC() -> confuse
    47:48:void setC(java.lang.Object) -> purus
com.volmit.wormholes.util.GVector -> com.volmit.wormholes.src.brand:
    double x -> x
    double y -> y
    double z -> z
    int blockX -> cO
    int blockY -> cP
    int blockZ -> cQ
    26:33:void <init>(org.bukkit.util.Vector) -> <init>
    37:38:void <init>() -> <init>
    47:47:org.bukkit.util.Vector toVector() -> toVector
    57:57:double getX() -> getX
    68:69:void setX(double) -> setX
    78:78:double getY() -> getY
    89:90:void setY(double) -> setY
    99:99:double getZ() -> getZ
    110:111:void setZ(double) -> setZ
    120:120:int getBlockX() -> getBlockX
    130:130:int getBlockY() -> getBlockY
    140:140:int getBlockZ() -> getBlockZ
    146:155:int hashCode() -> hashCode
    161:208:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.Guis -> com.volmit.wormholes.src.cultivate:
    8:8:void <init>() -> <init>
    21:57:com.volmit.wormholes.util.GList getCentered(int,int) -> amet
    69:91:com.volmit.wormholes.util.GList sortLTR(com.volmit.wormholes.util.GList) -> Morbi
com.volmit.wormholes.util.HTTP -> com.volmit.wormholes.src.deliver:
    java.lang.String CRLF -> cR
    34:34:void <init>() -> <init>
    72:103:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> tempus
    128:161:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.HTTPTokener -> com.volmit.wormholes.src.deploy:
    40:41:void <init>(java.lang.String) -> <init>
    52:74:java.lang.String nextToken() -> nextToken
com.volmit.wormholes.util.HandledConfig -> com.volmit.wormholes.src.disintermediate:
com.volmit.wormholes.util.Heaft -> com.volmit.wormholes.src.drive:
    com.volmit.wormholes.util.Heaft TINY -> cS
    com.volmit.wormholes.util.Heaft SMALL -> cT
    com.volmit.wormholes.util.Heaft NORMAL -> cU
    com.volmit.wormholes.util.Heaft BIG -> cV
    com.volmit.wormholes.util.Heaft MASSIVE -> cW
    com.volmit.wormholes.util.Heaft[] $VALUES -> cX
    3:3:com.volmit.wormholes.util.Heaft[] values() -> values
    3:3:com.volmit.wormholes.util.Heaft valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Health -> com.volmit.wormholes.src.e:
    double hp -> cY
    20:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> d
    41:41:double getHearts() -> f
    51:51:double getHalfHearts() -> g
    61:61:int getFlatHalfHearts() -> h
com.volmit.wormholes.util.Hologram -> com.volmit.wormholes.src.enable:
    org.bukkit.entity.Entity getHandle() -> wireless
    void setExclusive(org.bukkit.entity.Player) -> at
    org.bukkit.entity.Player getExclusive() -> world
    java.lang.String getDisplay() -> getDisplay
    void setLocation(org.bukkit.Location) -> setLocation
    void setTextLocation(org.bukkit.Location) -> euismod
    void setDisplay(java.lang.String) -> setDisplay
    void destroy() -> destroy
    org.bukkit.Location getLocation() -> getLocation
com.volmit.wormholes.util.Hud -> com.volmit.wormholes.src.embrace:
    void open() -> open
    void close() -> close
    void setContents(com.volmit.wormholes.util.GList) -> sit
    com.volmit.wormholes.util.GList getContents() -> drive
    java.lang.String getSelection() -> e
    int getSelectionRow() -> enable
    void onUpdate() -> fames
    void onOpen() -> pharetra
    java.lang.String onDisable(java.lang.String) -> consectetur
    java.lang.String onEnable(java.lang.String) -> amet
    void onClose() -> potenti
    void onSelect(java.lang.String,int) -> Lorem
    void onClick(com.volmit.wormholes.util.Click,org.bukkit.entity.Player,java.lang.String,int,com.volmit.wormholes.util.Hud) -> Lorem
com.volmit.wormholes.util.ICopy -> com.volmit.wormholes.src.empower:
    java.io.File target -> cZ
    java.io.File destination -> da
    13:17:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    22:47:void operate() -> channels
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDeflate -> com.volmit.wormholes.src.engage:
    java.io.File target -> cZ
    java.io.File destination -> da
    17:21:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    28:63:void operate() -> channels
    69:69:void reverse() -> reverse
com.volmit.wormholes.util.IDelete -> com.volmit.wormholes.src.engineer:
    java.io.File target -> cZ
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:46:void operate() -> channels
    53:53:void reverse() -> reverse
com.volmit.wormholes.util.IDirectory -> com.volmit.wormholes.src.enhance:
    java.io.File target -> cZ
    11:14:void <init>(com.volmit.wormholes.util.FileHack,java.io.File) -> <init>
    19:21:void operate() -> channels
    27:27:void reverse() -> reverse
com.volmit.wormholes.util.IEncrypt -> com.volmit.wormholes.src.envisioneer:
    java.io.File target -> cZ
    java.io.File destination -> da
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:44:void operate() -> channels
    50:50:void reverse() -> reverse
com.volmit.wormholes.util.IInflate -> com.volmit.wormholes.src.evolve:
    java.io.File target -> cZ
    java.io.File destination -> da
    20:24:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    31:47:void operate() -> channels
    51:121:void add(java.io.File,java.util.jar.JarOutputStream) -> Lorem
    127:127:void reverse() -> reverse
com.volmit.wormholes.util.IModify -> com.volmit.wormholes.src.expedite:
    java.io.File target -> cZ
    java.lang.String key -> key
    java.lang.Object value -> value
    15:20:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.Object) -> <init>
    27:38:void operate() -> channels
    44:44:void reverse() -> reverse
com.volmit.wormholes.util.IMove -> com.volmit.wormholes.src.exploit:
    java.io.File target -> cZ
    java.io.File destination -> da
    12:16:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.io.File) -> <init>
    21:23:void operate() -> channels
    29:29:void reverse() -> reverse
com.volmit.wormholes.util.IO -> com.volmit.wormholes.src.extend:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    97:117:void <clinit>() -> <clinit>
com.volmit.wormholes.util.IOP -> com.volmit.wormholes.src.facilitate:
    com.volmit.wormholes.util.D d -> L
    com.volmit.wormholes.util.FileHack h -> db
    11:14:void <init>(com.volmit.wormholes.util.FileHack) -> <init>
    18:19:void queue(com.volmit.wormholes.util.FOP) -> Lorem
    24:32:void log(java.lang.String,java.lang.CharSequence[]) -> Lorem
com.volmit.wormholes.util.IPatch -> com.volmit.wormholes.src.generate:
    java.io.File target -> cZ
    java.lang.String key -> key
    java.lang.String value -> value
    13:18:void <init>(com.volmit.wormholes.util.FileHack,java.io.File,java.lang.String,java.lang.String) -> <init>
    23:42:void operate() -> channels
    48:48:void reverse() -> reverse
com.volmit.wormholes.util.IntTag -> com.volmit.wormholes.src.grow:
    int value -> value
    54:56:void <init>(java.lang.String,int) -> <init>
    60:60:java.lang.Integer getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Inventories -> com.volmit.wormholes.src.harness:
    12:12:void <init>() -> <init>
    23:23:boolean hasSpace(org.bukkit.inventory.Inventory) -> Lorem
    37:37:boolean hasSpace(org.bukkit.inventory.Inventory,int) -> Lorem
    50:60:com.volmit.wormholes.util.GList getActualContents(org.bukkit.inventory.Inventory) -> ipsum
    76:92:boolean hasSpace(org.bukkit.inventory.Inventory,org.bukkit.inventory.ItemStack) -> Lorem
    104:114:int getEmptySlots(org.bukkit.inventory.Inventory) -> dolor
com.volmit.wormholes.util.Items -> com.volmit.wormholes.src.implement:
    18:18:void <init>() -> <init>
    29:29:boolean is(org.bukkit.inventory.ItemStack) -> dolor
    43:43:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> Lorem
    58:58:boolean is(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    74:74:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> Lorem
    95:107:org.bukkit.inventory.ItemStack getSkull(java.lang.String) -> sem
    123:123:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> Lorem
    135:135:boolean hasMeta(org.bukkit.inventory.ItemStack) -> sit
    147:147:boolean hasName(org.bukkit.inventory.ItemStack) -> amet
    159:159:boolean hasLore(org.bukkit.inventory.ItemStack) -> consectetur
    173:173:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> Lorem
    187:187:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> Lorem
    201:201:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> Lorem
    217:222:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> Lorem
    234:239:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> adipiscing
    252:257:com.volmit.wormholes.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> elit
    269:269:boolean isBroken(org.bukkit.inventory.ItemStack) -> Morbi
    281:281:boolean hasDurability(org.bukkit.inventory.ItemStack) -> pulvinar
    293:303:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> vulputate
    316:329:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> Lorem
    340:345:short getMaxDurability(org.bukkit.inventory.ItemStack) -> dictum
    357:362:short getDurability(org.bukkit.inventory.ItemStack) -> Vestibulum
    375:381:void setDurability(org.bukkit.inventory.ItemStack,short) -> Lorem
    393:399:void setDurability(org.bukkit.inventory.ItemStack,int) -> Lorem
    411:417:void damage(org.bukkit.inventory.ItemStack,int) -> ipsum
    431:474:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> Lorem
com.volmit.wormholes.util.JSONArray -> com.volmit.wormholes.src.incentivize:
    java.util.ArrayList myArrayList -> dc
    92:94:void <init>() -> <init>
    105:133:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    146:147:void <init>(java.lang.String) -> <init>
    155:163:void <init>(java.util.Collection) -> <init>
    172:182:void <init>(java.lang.Object) -> <init>
    186:186:java.util.Iterator iterator() -> iterator
    199:203:java.lang.Object get(int) -> get
    218:228:boolean getBoolean(int) -> getBoolean
    242:247:double getDouble(int) -> getDouble
    264:273:java.lang.Enum getEnum(java.lang.Class,int) -> Lorem
    287:291:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    307:311:java.math.BigInteger getBigInteger(int) -> facilisis
    326:331:int getInt(int) -> getInt
    346:350:com.volmit.wormholes.util.JSONArray getJSONArray(int) -> In
    364:368:com.volmit.wormholes.util.JSONObject getJSONObject(int) -> hac
    382:387:long getLong(int) -> getLong
    401:405:java.lang.String getString(int) -> getString
    416:416:boolean isNull(int) -> isNull
    431:440:java.lang.String join(java.lang.String) -> sed
    449:449:int length() -> length
    460:461:java.lang.Object opt(int) -> habitasse
    474:474:boolean optBoolean(int) -> platea
    490:492:boolean optBoolean(int,boolean) -> Lorem
    506:506:double optDouble(int) -> dictumst
    522:524:double optDouble(int,double) -> Lorem
    538:538:int optInt(int) -> Nam
    554:556:int optInt(int,int) -> consectetur
    570:570:java.lang.Enum optEnum(java.lang.Class,int) -> ipsum
    587:607:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> Lorem
    625:627:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> Lorem
    644:646:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> Lorem
    659:660:com.volmit.wormholes.util.JSONArray optJSONArray(int) -> metus
    673:674:com.volmit.wormholes.util.JSONObject optJSONObject(int) -> nisl
    687:687:long optLong(int) -> magna
    703:705:long optLong(int,long) -> Lorem
    719:719:java.lang.String optString(int) -> tortor
    733:735:java.lang.String optString(int,java.lang.String) -> Lorem
    746:747:com.volmit.wormholes.util.JSONArray put(boolean) -> vulputate
    759:760:com.volmit.wormholes.util.JSONArray put(java.util.Collection) -> Lorem
    773:776:com.volmit.wormholes.util.JSONArray put(double) -> pulvinar
    787:788:com.volmit.wormholes.util.JSONArray put(int) -> tempus
    799:800:com.volmit.wormholes.util.JSONArray put(long) -> purus
    812:813:com.volmit.wormholes.util.JSONArray put(java.util.Map) -> Lorem
    826:827:com.volmit.wormholes.util.JSONArray put(java.lang.Object) -> mi
    844:845:com.volmit.wormholes.util.JSONArray put(int,boolean) -> ipsum
    861:862:com.volmit.wormholes.util.JSONArray put(int,java.util.Collection) -> Lorem
    879:880:com.volmit.wormholes.util.JSONArray put(int,double) -> ipsum
    897:898:com.volmit.wormholes.util.JSONArray put(int,int) -> adipiscing
    915:916:com.volmit.wormholes.util.JSONArray put(int,long) -> ipsum
    933:934:com.volmit.wormholes.util.JSONArray put(int,java.util.Map) -> Lorem
    954:966:com.volmit.wormholes.util.JSONArray put(int,java.lang.Object) -> Lorem
    978:979:java.lang.Object remove(int) -> remove
    991:1013:boolean similar(java.lang.Object) -> euismod
    1029:1036:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.JSONArray) -> Lorem
    1052:1054:java.lang.String toString() -> toString
    1071:1074:java.lang.String toString(int) -> toString
    1087:1087:java.io.Writer write(java.io.Writer) -> Lorem
    1106:1136:java.io.Writer write(java.io.Writer,int,int) -> Lorem
com.volmit.wormholes.util.JSONDataInput -> com.volmit.wormholes.src.incubate:
    8:8:void <init>() -> <init>
    12:40:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.JSONDataOutput -> com.volmit.wormholes.src.innovate:
    7:7:void <init>() -> <init>
    12:24:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.JSONException -> com.volmit.wormholes.src.integrate:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> dd
    20:21:void <init>(java.lang.String) -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    41:41:java.lang.Throwable getCause() -> getCause
com.volmit.wormholes.util.JSONML -> com.volmit.wormholes.src.iterate:
    38:38:void <init>() -> <init>
    56:230:java.lang.Object parse(com.volmit.wormholes.util.XMLTokener,boolean,com.volmit.wormholes.util.JSONArray) -> Lorem
    251:251:com.volmit.wormholes.util.JSONArray toJSONArray(java.lang.String) -> volutpat
    268:268:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.XMLTokener) -> Lorem
    286:286:com.volmit.wormholes.util.JSONObject toJSONObject(com.volmit.wormholes.util.XMLTokener) -> ipsum
    304:304:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> tempus
    321:386:java.lang.String toString(com.volmit.wormholes.util.JSONArray) -> ipsum
    399:467:java.lang.String toString(com.volmit.wormholes.util.JSONObject) -> ipsum
com.volmit.wormholes.util.JSONObject -> com.volmit.wormholes.src.leverage:
    java.util.Map map -> map
    java.lang.Object NULL -> de
    160:162:void <init>() -> <init>
    180:191:void <init>(com.volmit.wormholes.util.JSONObject,java.lang.String[]) -> <init>
    204:250:void <init>(com.volmit.wormholes.util.JSONTokener) -> <init>
    264:279:void <init>(java.util.Map) -> <init>
    304:306:void <init>(java.lang.Object) -> <init>
    324:337:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    353:354:void <init>(java.lang.String) -> <init>
    368:403:void <init>(java.lang.String,java.util.Locale) -> <init>
    426:441:com.volmit.wormholes.util.JSONObject accumulate(java.lang.String,java.lang.Object) -> ipsum
    461:476:com.volmit.wormholes.util.JSONObject append(java.lang.String,java.lang.Object) -> dolor
    489:508:java.lang.String doubleToString(double) -> vulputate
    522:531:java.lang.Object get(java.lang.String) -> get
    548:556:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    571:581:boolean getBoolean(java.lang.String) -> getBoolean
    596:603:java.math.BigInteger getBigInteger(java.lang.String) -> rhoncus
    619:626:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    642:649:double getDouble(java.lang.String) -> getDouble
    665:672:int getInt(java.lang.String) -> getInt
    687:692:com.volmit.wormholes.util.JSONArray getJSONArray(java.lang.String) -> sapien
    706:711:com.volmit.wormholes.util.JSONObject getJSONObject(java.lang.String) -> orci
    726:733:long getLong(java.lang.String) -> getLong
    744:757:java.lang.String[] getNames(com.volmit.wormholes.util.JSONObject) -> dolor
    767:783:java.lang.String[] getNames(java.lang.Object) -> Pellentesque
    797:802:java.lang.String getString(java.lang.String) -> getString
    814:814:boolean has(java.lang.String) -> has
    831:870:com.volmit.wormholes.util.JSONObject increment(java.lang.String) -> ligula
    884:884:boolean isNull(java.lang.String) -> isNull
    894:894:java.util.Iterator keys() -> keys
    904:904:java.util.Set keySet() -> keySet
    914:914:int length() -> length
    926:932:com.volmit.wormholes.util.JSONArray names() -> i
    946:966:java.lang.String numberToString(java.lang.Number) -> Lorem
    978:978:java.lang.Object opt(java.lang.String) -> Sed
    992:992:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> ipsum
    1011:1033:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> Lorem
    1047:1047:boolean optBoolean(java.lang.String) -> ultrices
    1065:1069:boolean optBoolean(java.lang.String,boolean) -> ipsum
    1084:1084:double optDouble(java.lang.String) -> imperdiet
    1102:1106:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> Lorem
    1125:1129:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> Lorem
    1148:1152:double optDouble(java.lang.String,double) -> ipsum
    1167:1167:int optInt(java.lang.String) -> turpis
    1185:1189:int optInt(java.lang.String,int) -> consectetur
    1203:1204:com.volmit.wormholes.util.JSONArray optJSONArray(java.lang.String) -> Nullam
    1217:1218:com.volmit.wormholes.util.JSONObject optJSONObject(java.lang.String) -> vehicula
    1232:1232:long optLong(java.lang.String) -> porta
    1250:1254:long optLong(java.lang.String,long) -> ipsum
    1269:1269:java.lang.String optString(java.lang.String) -> ultricies
    1284:1285:java.lang.String optString(java.lang.String,java.lang.String) -> adipiscing
    1290:1346:void populateMap(java.lang.Object) -> at
    1361:1362:com.volmit.wormholes.util.JSONObject put(java.lang.String,boolean) -> dolor
    1378:1379:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Collection) -> Lorem
    1395:1396:com.volmit.wormholes.util.JSONObject put(java.lang.String,double) -> dolor
    1412:1413:com.volmit.wormholes.util.JSONObject put(java.lang.String,int) -> adipiscing
    1429:1430:com.volmit.wormholes.util.JSONObject put(java.lang.String,long) -> dolor
    1446:1447:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.util.Map) -> Lorem
    1466:1479:com.volmit.wormholes.util.JSONObject put(java.lang.String,java.lang.Object) -> sit
    1497:1505:com.volmit.wormholes.util.JSONObject putOnce(java.lang.String,java.lang.Object) -> amet
    1524:1528:com.volmit.wormholes.util.JSONObject putOpt(java.lang.String,java.lang.Object) -> consectetur
    1543:1555:java.lang.String quote(java.lang.String) -> quote
    1560:1621:java.io.Writer quote(java.lang.String,java.io.Writer) -> Lorem
    1634:1634:java.lang.Object remove(java.lang.String) -> vestibulum
    1650:1690:boolean similar(java.lang.Object) -> euismod
    1705:1760:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1773:1791:void testValidity(java.lang.Object) -> iaculis
    1806:1815:com.volmit.wormholes.util.JSONArray toJSONArray(com.volmit.wormholes.util.JSONArray) -> dolor
    1834:1838:java.lang.String toString() -> toString
    1858:1862:java.lang.String toString(int) -> toString
    1891:1936:java.lang.String valueToString(java.lang.Object) -> valueToString
    1955:1990:java.lang.Object wrap(java.lang.Object) -> wrap
    2005:2005:java.io.Writer write(java.io.Writer) -> Lorem
    2010:2071:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> Lorem
    2076:2080:void indent(java.io.Writer,int) -> Lorem
    2095:2147:java.io.Writer write(java.io.Writer,int,int) -> Lorem
    154:154:void <clinit>() -> <clinit>
com.volmit.wormholes.util.JSONObject$1 -> com.volmit.wormholes.src.leverage$1:
com.volmit.wormholes.util.JSONObject$Null -> com.volmit.wormholes.src.leverage$Lorem:
    103:103:void <init>() -> <init>
    115:115:java.lang.Object clone() -> clone
    129:129:boolean equals(java.lang.Object) -> equals
    139:139:java.lang.String toString() -> toString
    103:103:void <init>(com.volmit.wormholes.util.JSONObject$1) -> <init>
com.volmit.wormholes.util.JSONString -> com.volmit.wormholes.src.matrix:
    java.lang.String toJSONString() -> toJSONString
com.volmit.wormholes.util.JSONStringer -> com.volmit.wormholes.src.maximize:
    64:65:void <init>() -> <init>
    76:76:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONTokener -> com.volmit.wormholes.src.mesh:
    long character -> df
    boolean eof -> eof
    long index -> dg
    long line -> dh
    char previous -> di
    java.io.Reader reader -> reader
    boolean usePrevious -> dj
    57:67:void <init>(java.io.Reader) -> <init>
    75:76:void <init>(java.io.InputStream) -> <init>
    85:86:void <init>(java.lang.String) -> <init>
    95:102:void back() -> back
    112:121:int dehexchar(char) -> sit
    125:125:boolean end() -> j
    135:140:boolean more() -> k
    151:177:char next() -> next
    189:194:char next(char) -> amet
    208:222:java.lang.String next(int) -> sem
    233:237:char nextClean() -> l
    254:297:java.lang.String nextString(char) -> consectetur
    310:320:java.lang.String nextTo(char) -> adipiscing
    332:342:java.lang.String nextTo(java.lang.String) -> felis
    355:390:java.lang.Object nextValue() -> m
    404:422:char skipTo(char) -> elit
    433:433:com.volmit.wormholes.util.JSONException syntaxError(java.lang.String) -> nec
    443:443:java.lang.String toString() -> toString
com.volmit.wormholes.util.JSONWriter -> com.volmit.wormholes.src.monetize:
    int maxdepth -> dk
    boolean comma -> dl
    char mode -> dm
    com.volmit.wormholes.util.JSONObject[] stack -> dn
    int top -> top
    java.io.Writer writer -> writer
    96:102:void <init>(java.io.Writer) -> <init>
    111:129:com.volmit.wormholes.util.JSONWriter append(java.lang.String) -> tristique
    142:148:com.volmit.wormholes.util.JSONWriter array() -> n
    159:171:com.volmit.wormholes.util.JSONWriter end(char,char) -> Lorem
    181:181:com.volmit.wormholes.util.JSONWriter endArray() -> o
    191:191:com.volmit.wormholes.util.JSONWriter endObject() -> p
    203:221:com.volmit.wormholes.util.JSONWriter key(java.lang.String) -> lacinia
    235:244:com.volmit.wormholes.util.JSONWriter object() -> q
    255:268:void pop(char) -> Morbi
    276:282:void push(com.volmit.wormholes.util.JSONObject) -> sit
    293:293:com.volmit.wormholes.util.JSONWriter value(boolean) -> dictum
    303:303:com.volmit.wormholes.util.JSONWriter value(double) -> dictum
    313:313:com.volmit.wormholes.util.JSONWriter value(long) -> non
    325:325:com.volmit.wormholes.util.JSONWriter value(java.lang.Object) -> urna
com.volmit.wormholes.util.Keyed -> com.volmit.wormholes.src.morph:
    java.lang.String value() -> value
com.volmit.wormholes.util.Lang -> com.volmit.wormholes.src.optimize:
    java.lang.String value() -> value
com.volmit.wormholes.util.LineParticleManipulator -> com.volmit.wormholes.src.orchestrate:
    13:13:void <init>() -> <init>
    30:41:void play(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> Lorem
com.volmit.wormholes.util.ListTag -> com.volmit.wormholes.src.productize:
    java.lang.Class type -> type
    java.util.List value -> value
    63:66:void <init>(java.lang.String,java.lang.Class,java.util.List) -> <init>
    73:73:java.lang.Class getType() -> getType
    78:78:java.util.List getValue() -> getValue
    83:94:java.lang.String toString() -> toString
    44:44:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.ListViewWindow -> com.volmit.wormholes.src.recontextualize:
    com.volmit.wormholes.util.GList binds -> do
    16:19:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    23:25:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.LongTag -> com.volmit.wormholes.src.redefine:
    long value -> value
    54:56:void <init>(java.lang.String,long) -> <init>
    60:60:java.lang.Long getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.M -> com.volmit.wormholes.src.reintermediate:
    int precision -> dp
    int modulus -> dq
    float[] sin -> dr
    18:18:void <init>() -> <init>
    35:38:double evaluate(java.lang.String) -> Duis
    50:55:boolean r(java.lang.Double) -> ipsum
    77:87:double evaluate(java.lang.String,java.lang.Double[]) -> Lorem
    92:115:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> Lorem
    130:130:double tps(long,int) -> amet
    142:142:double ticksFromNS(long) -> mi
    154:180:java.lang.String toRoman(int) -> sed
    194:206:java.lang.String repeat(java.lang.String,int) -> repeat
    211:211:int rand(int,int) -> elit
    223:295:int fromRoman(java.lang.String) -> tempor
    305:305:long ns() -> r
    315:315:long ms() -> s
    327:334:double avg(com.volmit.wormholes.util.GList) -> pulvinar
    347:351:void lim(com.volmit.wormholes.util.GList,int) -> ipsum
    364:364:double distance(org.bukkit.Location,org.bukkit.Location) -> dolor
    382:382:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> ipsum
    394:394:float sin(float) -> sin
    406:406:float cos(float) -> cos
    418:428:int max(int[]) -> max
    440:450:int min(int[]) -> min
    466:466:boolean within(int,int,int) -> amet
    479:479:float sinLookup(int) -> volutpat
    22:475:void <clinit>() -> <clinit>
com.volmit.wormholes.util.MFADistortion -> com.volmit.wormholes.src.reinvent:
    int span -> ds
    float to -> dt
    9:12:void <init>(int,float) -> <init>
    17:37:com.volmit.wormholes.util.Audible distort(com.volmit.wormholes.util.Audible) -> dolor
com.volmit.wormholes.util.MSound -> com.volmit.wormholes.src.repurpose:
    com.volmit.wormholes.util.MSound AMBIENCE_CAVE -> du
    com.volmit.wormholes.util.MSound AMBIENCE_RAIN -> dv
    com.volmit.wormholes.util.MSound AMBIENCE_THUNDER -> dw
    com.volmit.wormholes.util.MSound ANVIL_BREAK -> dx
    com.volmit.wormholes.util.MSound ANVIL_LAND -> dy
    com.volmit.wormholes.util.MSound ANVIL_USE -> dz
    com.volmit.wormholes.util.MSound ARROW_HIT -> dA
    com.volmit.wormholes.util.MSound BURP -> dB
    com.volmit.wormholes.util.MSound CHEST_CLOSE -> dC
    com.volmit.wormholes.util.MSound CHEST_OPEN -> dD
    com.volmit.wormholes.util.MSound CLICK -> dE
    com.volmit.wormholes.util.MSound DOOR_CLOSE -> dF
    com.volmit.wormholes.util.MSound DOOR_OPEN -> dG
    com.volmit.wormholes.util.MSound DRINK -> dH
    com.volmit.wormholes.util.MSound EAT -> dI
    com.volmit.wormholes.util.MSound EXPLODE -> dJ
    com.volmit.wormholes.util.MSound FALL_BIG -> dK
    com.volmit.wormholes.util.MSound FALL_SMALL -> dL
    com.volmit.wormholes.util.MSound FIRE -> dM
    com.volmit.wormholes.util.MSound FIRE_IGNITE -> dN
    com.volmit.wormholes.util.MSound FIZZ -> dO
    com.volmit.wormholes.util.MSound FUSE -> dP
    com.volmit.wormholes.util.MSound GLASS -> dQ
    com.volmit.wormholes.util.MSound HURT_FLESH -> dR
    com.volmit.wormholes.util.MSound ITEM_BREAK -> dS
    com.volmit.wormholes.util.MSound ITEM_PICKUP -> dT
    com.volmit.wormholes.util.MSound LAVA -> dU
    com.volmit.wormholes.util.MSound LAVA_POP -> dV
    com.volmit.wormholes.util.MSound LEVEL_UP -> dW
    com.volmit.wormholes.util.MSound MINECART_BASE -> dX
    com.volmit.wormholes.util.MSound MINECART_INSIDE -> dY
    com.volmit.wormholes.util.MSound NOTE_BASS -> dZ
    com.volmit.wormholes.util.MSound NOTE_PIANO -> ea
    com.volmit.wormholes.util.MSound NOTE_BASS_DRUM -> eb
    com.volmit.wormholes.util.MSound NOTE_STICKS -> ec
    com.volmit.wormholes.util.MSound NOTE_BASS_GUITAR -> ed
    com.volmit.wormholes.util.MSound NOTE_SNARE_DRUM -> ee
    com.volmit.wormholes.util.MSound NOTE_PLING -> ef
    com.volmit.wormholes.util.MSound ORB_PICKUP -> eg
    com.volmit.wormholes.util.MSound PISTON_EXTEND -> eh
    com.volmit.wormholes.util.MSound PISTON_RETRACT -> ei
    com.volmit.wormholes.util.MSound PORTAL -> ej
    com.volmit.wormholes.util.MSound PORTAL_TRAVEL -> ek
    com.volmit.wormholes.util.MSound PORTAL_TRIGGER -> el
    com.volmit.wormholes.util.MSound SHOOT_ARROW -> em
    com.volmit.wormholes.util.MSound SPLASH -> en
    com.volmit.wormholes.util.MSound SPLASH2 -> eo
    com.volmit.wormholes.util.MSound STEP_GRASS -> ep
    com.volmit.wormholes.util.MSound STEP_GRAVEL -> eq
    com.volmit.wormholes.util.MSound STEP_LADDER -> er
    com.volmit.wormholes.util.MSound STEP_SAND -> es
    com.volmit.wormholes.util.MSound STEP_SNOW -> ev
    com.volmit.wormholes.util.MSound STEP_STONE -> ew
    com.volmit.wormholes.util.MSound STEP_WOOD -> ey
    com.volmit.wormholes.util.MSound STEP_WOOL -> ez
    com.volmit.wormholes.util.MSound SWIM -> eA
    com.volmit.wormholes.util.MSound WATER -> eB
    com.volmit.wormholes.util.MSound WOOD_CLICK -> eC
    com.volmit.wormholes.util.MSound BAT_DEATH -> eD
    com.volmit.wormholes.util.MSound BAT_HURT -> eE
    com.volmit.wormholes.util.MSound BAT_IDLE -> eF
    com.volmit.wormholes.util.MSound BAT_LOOP -> eG
    com.volmit.wormholes.util.MSound BAT_TAKEOFF -> eH
    com.volmit.wormholes.util.MSound BLAZE_BREATH -> eI
    com.volmit.wormholes.util.MSound BLAZE_DEATH -> eJ
    com.volmit.wormholes.util.MSound BLAZE_HIT -> eK
    com.volmit.wormholes.util.MSound CAT_HISS -> eL
    com.volmit.wormholes.util.MSound CAT_HIT -> eM
    com.volmit.wormholes.util.MSound CAT_MEOW -> eN
    com.volmit.wormholes.util.MSound CAT_PURR -> eO
    com.volmit.wormholes.util.MSound CAT_PURREOW -> eP
    com.volmit.wormholes.util.MSound CHICKEN_IDLE -> eQ
    com.volmit.wormholes.util.MSound CHICKEN_HURT -> eR
    com.volmit.wormholes.util.MSound CHICKEN_EGG_POP -> eS
    com.volmit.wormholes.util.MSound CHICKEN_WALK -> eT
    com.volmit.wormholes.util.MSound COW_IDLE -> eU
    com.volmit.wormholes.util.MSound COW_HURT -> eV
    com.volmit.wormholes.util.MSound COW_WALK -> eW
    com.volmit.wormholes.util.MSound CREEPER_HISS -> eX
    com.volmit.wormholes.util.MSound CREEPER_DEATH -> eY
    com.volmit.wormholes.util.MSound ENDERDRAGON_DEATH -> eZ
    com.volmit.wormholes.util.MSound ENDERDRAGON_GROWL -> fa
    com.volmit.wormholes.util.MSound ENDERDRAGON_HIT -> fb
    com.volmit.wormholes.util.MSound ENDERDRAGON_WINGS -> fc
    com.volmit.wormholes.util.MSound ENDERMAN_DEATH -> fd
    com.volmit.wormholes.util.MSound ENDERMAN_HIT -> fe
    com.volmit.wormholes.util.MSound ENDERMAN_IDLE -> ff
    com.volmit.wormholes.util.MSound ENDERMAN_TELEPORT -> fg
    com.volmit.wormholes.util.MSound ENDERMAN_SCREAM -> fh
    com.volmit.wormholes.util.MSound ENDERMAN_STARE -> fi
    com.volmit.wormholes.util.MSound GHAST_SCREAM -> fj
    com.volmit.wormholes.util.MSound GHAST_SCREAM2 -> fk
    com.volmit.wormholes.util.MSound GHAST_CHARGE -> fl
    com.volmit.wormholes.util.MSound GHAST_DEATH -> fm
    com.volmit.wormholes.util.MSound GHAST_FIREBALL -> fn
    com.volmit.wormholes.util.MSound GHAST_MOAN -> fo
    com.volmit.wormholes.util.MSound IRONGOLEM_DEATH -> fp
    com.volmit.wormholes.util.MSound IRONGOLEM_HIT -> fq
    com.volmit.wormholes.util.MSound IRONGOLEM_THROW -> fr
    com.volmit.wormholes.util.MSound IRONGOLEM_WALK -> fs
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK -> ft
    com.volmit.wormholes.util.MSound MAGMACUBE_WALK2 -> fu
    com.volmit.wormholes.util.MSound MAGMACUBE_JUMP -> fv
    com.volmit.wormholes.util.MSound PIG_IDLE -> fw
    com.volmit.wormholes.util.MSound PIG_DEATH -> fx
    com.volmit.wormholes.util.MSound PIG_WALK -> fy
    com.volmit.wormholes.util.MSound SHEEP_IDLE -> fz
    com.volmit.wormholes.util.MSound SHEEP_SHEAR -> fA
    com.volmit.wormholes.util.MSound SHEEP_WALK -> fB
    com.volmit.wormholes.util.MSound SILVERFISH_HIT -> fC
    com.volmit.wormholes.util.MSound SILVERFISH_KILL -> fD
    com.volmit.wormholes.util.MSound SILVERFISH_IDLE -> fE
    com.volmit.wormholes.util.MSound SILVERFISH_WALK -> fF
    com.volmit.wormholes.util.MSound SKELETON_IDLE -> fG
    com.volmit.wormholes.util.MSound SKELETON_DEATH -> fH
    com.volmit.wormholes.util.MSound SKELETON_HURT -> fI
    com.volmit.wormholes.util.MSound SKELETON_WALK -> fJ
    com.volmit.wormholes.util.MSound SLIME_ATTACK -> fK
    com.volmit.wormholes.util.MSound SLIME_WALK -> fL
    com.volmit.wormholes.util.MSound SLIME_WALK2 -> fM
    com.volmit.wormholes.util.MSound SPIDER_IDLE -> fN
    com.volmit.wormholes.util.MSound SPIDER_DEATH -> fO
    com.volmit.wormholes.util.MSound SPIDER_WALK -> fP
    com.volmit.wormholes.util.MSound WITHER_DEATH -> fQ
    com.volmit.wormholes.util.MSound WITHER_HURT -> fR
    com.volmit.wormholes.util.MSound WITHER_IDLE -> fS
    com.volmit.wormholes.util.MSound WITHER_SHOOT -> fT
    com.volmit.wormholes.util.MSound WITHER_SPAWN -> fU
    com.volmit.wormholes.util.MSound WOLF_BARK -> fV
    com.volmit.wormholes.util.MSound WOLF_DEATH -> fW
    com.volmit.wormholes.util.MSound WOLF_GROWL -> fX
    com.volmit.wormholes.util.MSound WOLF_HOWL -> fY
    com.volmit.wormholes.util.MSound WOLF_HURT -> fZ
    com.volmit.wormholes.util.MSound WOLF_PANT -> ga
    com.volmit.wormholes.util.MSound WOLF_SHAKE -> gb
    com.volmit.wormholes.util.MSound WOLF_WALK -> gc
    com.volmit.wormholes.util.MSound WOLF_WHINE -> gd
    com.volmit.wormholes.util.MSound ZOMBIE_METAL -> ge
    com.volmit.wormholes.util.MSound ZOMBIE_WOOD -> gf
    com.volmit.wormholes.util.MSound ZOMBIE_WOODBREAK -> gg
    com.volmit.wormholes.util.MSound ZOMBIE_IDLE -> gh
    com.volmit.wormholes.util.MSound ZOMBIE_DEATH -> gi
    com.volmit.wormholes.util.MSound ZOMBIE_HURT -> gj
    com.volmit.wormholes.util.MSound ZOMBIE_INFECT -> gk
    com.volmit.wormholes.util.MSound ZOMBIE_UNFECT -> gl
    com.volmit.wormholes.util.MSound ZOMBIE_REMEDY -> gm
    com.volmit.wormholes.util.MSound ZOMBIE_WALK -> gn
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_IDLE -> go
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_ANGRY -> gp
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_DEATH -> gq
    com.volmit.wormholes.util.MSound ZOMBIE_PIG_HURT -> gr
    com.volmit.wormholes.util.MSound DIG_WOOL -> gs
    com.volmit.wormholes.util.MSound DIG_GRASS -> gt
    com.volmit.wormholes.util.MSound DIG_GRAVEL -> gu
    com.volmit.wormholes.util.MSound DIG_SAND -> gv
    com.volmit.wormholes.util.MSound DIG_SNOW -> gw
    com.volmit.wormholes.util.MSound DIG_STONE -> gx
    com.volmit.wormholes.util.MSound DIG_WOOD -> gy
    com.volmit.wormholes.util.MSound FIREWORK_BLAST -> gz
    com.volmit.wormholes.util.MSound FIREWORK_BLAST2 -> gA
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST -> gB
    com.volmit.wormholes.util.MSound FIREWORK_LARGE_BLAST2 -> gC
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE -> gD
    com.volmit.wormholes.util.MSound FIREWORK_TWINKLE2 -> gE
    com.volmit.wormholes.util.MSound FIREWORK_LAUNCH -> gF
    com.volmit.wormholes.util.MSound SUCCESSFUL_HIT -> gG
    com.volmit.wormholes.util.MSound HORSE_ANGRY -> gH
    com.volmit.wormholes.util.MSound HORSE_ARMOR -> gI
    com.volmit.wormholes.util.MSound HORSE_BREATHE -> gJ
    com.volmit.wormholes.util.MSound HORSE_DEATH -> gK
    com.volmit.wormholes.util.MSound HORSE_GALLOP -> gL
    com.volmit.wormholes.util.MSound HORSE_HIT -> gM
    com.volmit.wormholes.util.MSound HORSE_IDLE -> gN
    com.volmit.wormholes.util.MSound HORSE_JUMP -> gO
    com.volmit.wormholes.util.MSound HORSE_LAND -> gP
    com.volmit.wormholes.util.MSound HORSE_SADDLE -> gQ
    com.volmit.wormholes.util.MSound HORSE_SOFT -> gR
    com.volmit.wormholes.util.MSound HORSE_WOOD -> gS
    com.volmit.wormholes.util.MSound DONKEY_ANGRY -> gT
    com.volmit.wormholes.util.MSound DONKEY_DEATH -> gU
    com.volmit.wormholes.util.MSound DONKEY_HIT -> gV
    com.volmit.wormholes.util.MSound DONKEY_IDLE -> gW
    com.volmit.wormholes.util.MSound HORSE_SKELETON_DEATH -> gX
    com.volmit.wormholes.util.MSound HORSE_SKELETON_HIT -> gY
    com.volmit.wormholes.util.MSound HORSE_SKELETON_IDLE -> gZ
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_DEATH -> ha
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_HIT -> hb
    com.volmit.wormholes.util.MSound HORSE_ZOMBIE_IDLE -> hc
    com.volmit.wormholes.util.MSound VILLAGER_DEATH -> hd
    com.volmit.wormholes.util.MSound VILLAGER_HAGGLE -> he
    com.volmit.wormholes.util.MSound VILLAGER_HIT -> hf
    com.volmit.wormholes.util.MSound VILLAGER_IDLE -> hg
    com.volmit.wormholes.util.MSound VILLAGER_NO -> hh
    com.volmit.wormholes.util.MSound VILLAGER_YES -> hi
    java.lang.String pre19sound -> hj
    java.lang.String post19sound -> hk
    org.bukkit.Sound resolvedSound -> hl
    com.volmit.wormholes.util.MSound[] $VALUES -> hm
    8:8:com.volmit.wormholes.util.MSound[] values() -> values
    8:8:com.volmit.wormholes.util.MSound valueOf(java.lang.String) -> valueOf
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:230:org.bukkit.Sound bukkitSound() -> t
    8:203:void <clinit>() -> <clinit>
com.volmit.wormholes.util.MaterialBlock -> com.volmit.wormholes.src.revolutionize:
    org.bukkit.Material material -> hn
    java.lang.Byte data -> ho
    26:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    32:35:void <init>(org.bukkit.Material) -> <init>
    38:41:void <init>(org.bukkit.Location) -> <init>
    44:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> u
    66:67:void setData(java.lang.Byte) -> ipsum
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.MessageBuilder -> com.volmit.wormholes.src.scale:
    java.lang.String tag -> tag
    java.lang.String hoverText -> hp
    20:23:void <init>() -> <init>
    32:35:void <init>(com.volmit.wormholes.util.TagProvider) -> <init>
    47:78:void message(org.bukkit.command.CommandSender,java.lang.String) -> Lorem
    89:90:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String) -> eget
    104:107:com.volmit.wormholes.util.MessageBuilder setTag(java.lang.String,java.lang.String) -> elit
    112:112:java.lang.String getHoverText() -> v
    117:118:void setHoverText(java.lang.String) -> semper
    122:122:java.lang.String getTag() -> getTag
com.volmit.wormholes.util.MetaObject -> com.volmit.wormholes.src.seize:
    void write(com.volmit.wormholes.util.DataCluster,java.lang.String) -> ipsum
    void read(com.volmit.wormholes.util.DataCluster,java.lang.String) -> dolor
com.volmit.wormholes.util.MultiDataHandler -> com.volmit.wormholes.src.strategize:
    java.lang.Object get(java.lang.Object) -> get
    void load(java.lang.Object) -> sit
    void save(java.lang.Object) -> save
    java.lang.Object onLoad(java.lang.Object) -> adipiscing
    void onSave(java.lang.Object) -> consectetur
    boolean contains(java.lang.Object) -> contains
    com.volmit.wormholes.util.GMap getCache() -> seamless
    void saveAll() -> saveAll
com.volmit.wormholes.util.NBTConstants -> com.volmit.wormholes.src.streamline:
    java.nio.charset.Charset CHARSET -> CHARSET
    int TYPE_END -> TYPE_END
    int TYPE_BYTE -> TYPE_BYTE
    int TYPE_SHORT -> TYPE_SHORT
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_BYTE_ARRAY -> TYPE_BYTE_ARRAY
    int TYPE_STRING -> TYPE_STRING
    int TYPE_LIST -> TYPE_LIST
    int TYPE_COMPOUND -> TYPE_COMPOUND
    int TYPE_BOOLEAN -> hq
    69:71:void <init>() -> <init>
    48:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.NBTInputStream -> com.volmit.wormholes.src.syndicate:
    java.io.DataInputStream is -> hr
    70:72:void <init>(java.io.InputStream) -> <init>
    80:80:com.volmit.wormholes.util.Tag readTag() -> w
    90:102:com.volmit.wormholes.util.Tag readTag(int) -> rhoncus
    114:172:com.volmit.wormholes.util.Tag readTagPayload(int,java.lang.String,int) -> Lorem
    178:179:void close() -> close
com.volmit.wormholes.util.NBTOutputStream -> com.volmit.wormholes.src.synergize:
    java.io.DataOutputStream os -> hs
    67:69:void <init>(java.io.OutputStream) -> <init>
    77:90:void writeTag(com.volmit.wormholes.util.Tag) -> Lorem
    98:139:void writeTagPayload(com.volmit.wormholes.util.Tag) -> ipsum
    147:148:void writeByteTagPayload(com.volmit.wormholes.util.ByteTag) -> Lorem
    156:159:void writeByteArrayTagPayload(com.volmit.wormholes.util.ByteArrayTag) -> Lorem
    167:171:void writeCompoundTagPayload(com.volmit.wormholes.util.CompoundTag) -> Lorem
    179:188:void writeListTagPayload(com.volmit.wormholes.util.ListTag) -> Lorem
    196:199:void writeStringTagPayload(com.volmit.wormholes.util.StringTag) -> Lorem
    207:208:void writeDoubleTagPayload(com.volmit.wormholes.util.DoubleTag) -> Lorem
    216:217:void writeBooleanTagPayload(com.volmit.wormholes.util.BooleanTag) -> Lorem
    225:226:void writeFloatTagPayload(com.volmit.wormholes.util.FloatTag) -> Lorem
    234:235:void writeLongTagPayload(com.volmit.wormholes.util.LongTag) -> Lorem
    243:244:void writeIntTagPayload(com.volmit.wormholes.util.IntTag) -> Lorem
    252:253:void writeShortTagPayload(com.volmit.wormholes.util.ShortTag) -> Lorem
    262:262:void writeEndTagPayload(com.volmit.wormholes.util.EndTag) -> Lorem
    266:267:void close() -> close
com.volmit.wormholes.util.NBTUtils -> com.volmit.wormholes.src.synthesize:
    47:97:java.lang.String getTypeName(java.lang.Class) -> getTypeName
    112:162:int getTypeCode(java.lang.Class) -> getTypeCode
    177:204:java.lang.Class getTypeClass(int) -> getTypeClass
    212:214:void <init>() -> <init>
com.volmit.wormholes.util.NMSClass -> com.volmit.wormholes.src.target:
    boolean init -> ht
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> hu
    java.lang.Class IChatBaseComponent -> hv
    java.lang.Class ChatSerializer -> hw
    java.lang.Class PacketPlayOutPlayerInfo -> hx
    java.lang.Class PlayerInfoData -> hy
    java.lang.Class EnumPlayerInfoAction -> hz
    java.lang.Class GameProfile -> hA
    java.lang.Class EnumGamemode -> hB
    java.lang.Class TileEntitySkull -> hC
    java.lang.Class LoadingCache -> hD
    8:8:void <init>() -> <init>
    11:130:void <clinit>() -> <clinit>
com.volmit.wormholes.util.NMSX -> com.volmit.wormholes.src.transform:
    com.volmit.wormholes.util.NMSX instance -> hE
    boolean useOldMethods -> hF
    java.lang.String nmsver -> hG
    com.volmit.wormholes.util.GList colors -> hH
    29:29:void <init>() -> <init>
    38:40:java.lang.String getVersion() -> getVersion
    47:55:java.lang.Object serializeChat(java.lang.String) -> aliquam
    66:71:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> Lorem
    86:104:void setChestState(org.bukkit.Location,boolean) -> Lorem
    108:122:java.lang.Class getCraftClass(java.lang.String) -> lectus
    133:135:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> Lorem
    147:161:java.lang.Class getCBNMSClass(java.lang.String) -> consequat
    173:187:java.lang.Class getOBCClass(java.lang.String) -> neque
    194:202:java.lang.Object getHandle(java.lang.Object) -> Proin
    209:219:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    224:233:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    238:254:boolean ClassListEqual(java.lang.Class[],java.lang.Class[]) -> Lorem
    269:278:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> Lorem
    294:303:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    317:318:void launchFirework(org.bukkit.Location,org.bukkit.Color,org.bukkit.FireworkEffect$Type) -> Lorem
    330:331:void launchFirework(org.bukkit.Location,org.bukkit.Color) -> Lorem
    344:345:void playRecord(org.bukkit.entity.Player,org.bukkit.Material) -> Lorem
    360:361:void playRecord(org.bukkit.entity.Player,org.bukkit.Location,org.bukkit.Material) -> Lorem
    371:372:void launchFirework(org.bukkit.Location) -> iaculis
    387:391:void spreadParticles(org.bukkit.Location,org.bukkit.Material,int) -> Lorem
    406:410:void breakParticles(org.bukkit.Location,org.bukkit.Material,int) -> ipsum
    422:432:java.lang.Class getNMSClass(java.lang.String) -> sagittis
    447:452:java.lang.Class getPacket(java.lang.String) -> lorem
    464:465:void setWeatherDownfall(org.bukkit.entity.Player) -> urna
    475:476:void setWeatherClear(org.bukkit.entity.Player) -> Proin
    486:487:void resetWeather(org.bukkit.entity.Player) -> ac
    499:500:void setTime(org.bukkit.entity.Player,long) -> Lorem
    510:511:void resetTime(org.bukkit.entity.Player) -> enim
    525:525:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location,com.volmit.wormholes.util.MaterialBlock) -> ipsum
    537:537:org.bukkit.entity.Entity createFallingBlock(org.bukkit.Location) -> urna
    549:549:long getPlayerTime(org.bukkit.entity.Player) -> posuere
    575:612:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> Lorem
    622:623:void clearTitle(org.bukkit.entity.Player) -> molestie
    637:669:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> ipsum
    686:720:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> Lorem
    731:731:java.lang.String getEntityName(org.bukkit.entity.Entity) -> vulputate
    736:736:java.lang.String getNBTV() -> x
    746:746:java.lang.String getBukkitVersion() -> getBukkitVersion
    756:756:java.lang.String nmsPackage() -> y
    766:766:java.lang.String craftPackage() -> B
    779:792:void showEnd(org.bukkit.entity.Player) -> odio
    804:816:void showDemo(org.bukkit.entity.Player) -> a
    830:842:void showBrightness(org.bukkit.entity.Player,float) -> Lorem
    856:868:void showWeather(org.bukkit.entity.Player,float) -> ipsum
    874:884:java.lang.Object getBlockPosition(org.bukkit.Location) -> Proin
    891:904:void showBlockBreakAnimation(org.bukkit.entity.Player,org.bukkit.Location,int) -> Lorem
    916:928:void showControls(org.bukkit.entity.Player) -> facilisis
    942:954:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> Lorem
    967:980:int ping(org.bukkit.entity.Player) -> In
    985:1011:void <clinit>() -> <clinit>
com.volmit.wormholes.util.P -> com.volmit.wormholes.src.transition:
    22:22:void <init>() -> <init>
    33:33:boolean isOnline(java.lang.String) -> vel
    45:45:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    55:55:org.bukkit.entity.Player getAnyPlayer() -> C
    65:65:boolean isAnyOnline() -> D
    77:77:com.volmit.wormholes.util.GList inWorld(org.bukkit.World) -> Lorem
    89:101:com.volmit.wormholes.util.GList inChunk(org.bukkit.Chunk) -> dolor
    115:115:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,double) -> Lorem
    129:129:com.volmit.wormholes.util.GList inArea(org.bukkit.Location,int) -> Lorem
    140:141:void disable(org.bukkit.entity.Player) -> hac
    151:152:void enable(org.bukkit.entity.Player) -> habitasse
    165:165:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> dolor
    179:179:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> sit
    191:192:boolean hasInventoryOpen(org.bukkit.entity.Player) -> platea
    208:240:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> Lorem
    254:263:int getTotalExperience(org.bukkit.entity.Player) -> dictumst
    278:286:void setTotalExperience(org.bukkit.entity.Player,int) -> amet
    297:297:boolean canFindPlayer(java.lang.String) -> Quisque
    309:325:org.bukkit.entity.Player findPlayer(java.lang.String) -> congue
    335:342:com.volmit.wormholes.util.GList onlinePlayers() -> E
    354:354:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> Nam
    365:368:void clear(org.bukkit.entity.Player) -> metus
    378:382:void clearEffects(org.bukkit.entity.Player) -> nisl
    394:395:void heal(org.bukkit.entity.Player,double) -> Lorem
    405:406:void heal(org.bukkit.entity.Player) -> magna
    416:417:void resetMaxHeath(org.bukkit.entity.Player) -> tortor
    427:428:void resetHunger(org.bukkit.entity.Player) -> tempus
    438:439:void kill(org.bukkit.entity.Player) -> sem
    450:450:com.volmit.wormholes.util.Shape getShape(org.bukkit.entity.Player) -> sed
    462:462:org.bukkit.Location getHand(org.bukkit.entity.Player) -> volutpat
    478:487:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> Lorem
com.volmit.wormholes.util.P$1 -> com.volmit.wormholes.src.transition$1:
    90:90:void <init>() -> <init>
    94:99:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> pulvinar
    90:90:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.P$2 -> com.volmit.wormholes.src.transition$2:
    java.lang.Double val$doff -> hI
    org.bukkit.entity.Player val$e -> hJ
    org.bukkit.entity.Entity[] val$result -> hK
    222:222:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    226:237:void onTrace(org.bukkit.Location) -> amet
com.volmit.wormholes.util.PE -> com.volmit.wormholes.src.unleash:
    com.volmit.wormholes.util.PE ABSORPTION -> hL
    com.volmit.wormholes.util.PE BLINDNESS -> hM
    com.volmit.wormholes.util.PE CONFUSION -> hN
    com.volmit.wormholes.util.PE DAMAGE_RESISTANCE -> hO
    com.volmit.wormholes.util.PE FAST_DIGGING -> hP
    com.volmit.wormholes.util.PE FIRE_RESISTANCE -> hQ
    com.volmit.wormholes.util.PE GLOWING -> hR
    com.volmit.wormholes.util.PE HARM -> hS
    com.volmit.wormholes.util.PE HEAL -> hT
    com.volmit.wormholes.util.PE HEALTH_BOOST -> hU
    com.volmit.wormholes.util.PE HUNGER -> hV
    com.volmit.wormholes.util.PE INCREASE_DAMAGE -> hW
    com.volmit.wormholes.util.PE INVISIBILITY -> hX
    com.volmit.wormholes.util.PE JUMP -> hY
    com.volmit.wormholes.util.PE LEVITATION -> hZ
    com.volmit.wormholes.util.PE LUCK -> ia
    com.volmit.wormholes.util.PE NIGHT_VISION -> ib
    com.volmit.wormholes.util.PE POISON -> ic
    com.volmit.wormholes.util.PE REGENERATION -> ie
    com.volmit.wormholes.util.PE SATURATION -> if
    com.volmit.wormholes.util.PE SLOW -> ig
    com.volmit.wormholes.util.PE SLOW_DIGGING -> ih
    com.volmit.wormholes.util.PE SPEED -> ii
    com.volmit.wormholes.util.PE UNLUCK -> ij
    com.volmit.wormholes.util.PE WATER_BREATHING -> ik
    com.volmit.wormholes.util.PE WEAKNESS -> il
    com.volmit.wormholes.util.PE WITHER -> im
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:com.volmit.wormholes.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> Lorem
    144:144:com.volmit.wormholes.util.PE d(int) -> sapien
    156:156:com.volmit.wormholes.util.PE a(int) -> orci
    166:166:org.bukkit.potion.PotionEffect c() -> F
    177:178:void c(org.bukkit.entity.LivingEntity) -> Lorem
    182:183:void crm(org.bukkit.entity.LivingEntity) -> ipsum
    187:188:void rm(org.bukkit.entity.LivingEntity) -> dolor
    192:215:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PackageType -> com.volmit.wormholes.src.utilize:
    com.volmit.wormholes.util.PackageType STRING -> io
    com.volmit.wormholes.util.PackageType SHORT -> ip
    com.volmit.wormholes.util.PackageType LONG -> iq
    com.volmit.wormholes.util.PackageType INTEGER -> ir
    com.volmit.wormholes.util.PackageType FLOAT -> is
    com.volmit.wormholes.util.PackageType DOUBLE -> it
    com.volmit.wormholes.util.PackageType CHAR -> iu
    com.volmit.wormholes.util.PackageType BYTES -> iv
    com.volmit.wormholes.util.PackageType BYTE -> iw
    com.volmit.wormholes.util.PackageType BOOLEAN -> ix
    com.volmit.wormholes.util.PackageType DATA_PACK -> iy
    byte type -> type
    java.lang.Class clazz -> clazz
    com.volmit.wormholes.util.PackageType[] $VALUES -> iz
    3:3:com.volmit.wormholes.util.PackageType[] values() -> values
    3:3:com.volmit.wormholes.util.PackageType valueOf(java.lang.String) -> valueOf
    21:24:void <init>(java.lang.String,int,byte,java.lang.Class) -> <init>
    28:28:byte getType() -> getType
    33:33:java.lang.Class getClazz() -> getClazz
    40:48:com.volmit.wormholes.util.DataHandle getInstance() -> G
    53:61:com.volmit.wormholes.util.PackageType getType(byte) -> amet
    66:73:com.volmit.wormholes.util.DataHandle getInstance(byte) -> consectetur
    3:15:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PacketWrapper -> com.volmit.wormholes.src.visualize:
    23:23:void <init>() -> <init>
    27:27:void onEnable() -> onEnable
com.volmit.wormholes.util.ParallelPoolManager -> com.volmit.wormholes.src.whiteboard:
    com.volmit.wormholes.util.QueueMode mode -> iA
    com.volmit.wormholes.util.GList threads -> iB
    int next -> iC
    int threadCount -> iD
    java.util.Queue squeue -> iE
    15:16:void syncQueue(com.volmit.wormholes.util.Execution) -> Lorem
    20:24:void tickSyncQueue() -> H
    27:42:void <init>(int,com.volmit.wormholes.util.QueueMode) -> <init>
    46:47:void start() -> start
    51:55:void shutdown() -> shutdown
    59:60:void <init>(int) -> <init>
    64:65:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    69:69:int getSize() -> getSize
    74:74:com.volmit.wormholes.util.ParallelThread[] getThreads() -> I
    79:109:com.volmit.wormholes.util.ParallelThread nextThread() -> J
    114:120:void createThreads(int) -> ligula
com.volmit.wormholes.util.ParallelPoolManager$1 -> com.volmit.wormholes.src.whiteboard$1:
    int[] $SwitchMap$com$volmit$wormholes$util$QueueMode -> iF
    86:86:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParallelThread -> com.volmit.wormholes.src.B2B:
    java.util.Queue queue -> iG
    com.volmit.wormholes.util.ThreadInformation info -> iH
    12:17:void <init>(int) -> <init>
    21:53:void run() -> run
    57:61:void conditionallySleep(double) -> Vestibulum
    67:74:void execute(com.volmit.wormholes.util.Execution) -> dolor
    78:88:void execute() -> execute
    92:93:void queue(com.volmit.wormholes.util.Execution) -> ipsum
    97:97:java.util.Queue getQueue() -> K
    102:102:com.volmit.wormholes.util.ThreadInformation getInfo() -> L
com.volmit.wormholes.util.ParameterAdapter -> com.volmit.wormholes.src.B2C:
    11:13:void <init>() -> <init>
    24:29:java.lang.String adapt(java.lang.String) -> vitae
    java.lang.String onParameterRequested(java.lang.String) -> ornare
com.volmit.wormholes.util.ParticleEffect -> com.volmit.wormholes.src.back:
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_NORMAL -> iI
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_LARGE -> iJ
    com.volmit.wormholes.util.ParticleEffect EXPLOSION_HUGE -> iK
    com.volmit.wormholes.util.ParticleEffect FIREWORKS_SPARK -> iL
    com.volmit.wormholes.util.ParticleEffect WATER_BUBBLE -> iM
    com.volmit.wormholes.util.ParticleEffect WATER_SPLASH -> iN
    com.volmit.wormholes.util.ParticleEffect WATER_WAKE -> iO
    com.volmit.wormholes.util.ParticleEffect SUSPENDED -> iP
    com.volmit.wormholes.util.ParticleEffect SUSPENDED_DEPTH -> iQ
    com.volmit.wormholes.util.ParticleEffect CRIT -> iR
    com.volmit.wormholes.util.ParticleEffect CRIT_MAGIC -> iS
    com.volmit.wormholes.util.ParticleEffect SMOKE_NORMAL -> iT
    com.volmit.wormholes.util.ParticleEffect SMOKE_LARGE -> iU
    com.volmit.wormholes.util.ParticleEffect SPELL -> iV
    com.volmit.wormholes.util.ParticleEffect SPELL_INSTANT -> iW
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB -> iX
    com.volmit.wormholes.util.ParticleEffect SPELL_MOB_AMBIENT -> iY
    com.volmit.wormholes.util.ParticleEffect SPELL_WITCH -> iZ
    com.volmit.wormholes.util.ParticleEffect DRIP_WATER -> ja
    com.volmit.wormholes.util.ParticleEffect DRIP_LAVA -> jb
    com.volmit.wormholes.util.ParticleEffect VILLAGER_ANGRY -> jc
    com.volmit.wormholes.util.ParticleEffect VILLAGER_HAPPY -> jd
    com.volmit.wormholes.util.ParticleEffect TOWN_AURA -> je
    com.volmit.wormholes.util.ParticleEffect NOTE -> jf
    com.volmit.wormholes.util.ParticleEffect PORTAL -> jg
    com.volmit.wormholes.util.ParticleEffect ENCHANTMENT_TABLE -> jh
    com.volmit.wormholes.util.ParticleEffect FLAME -> ji
    com.volmit.wormholes.util.ParticleEffect LAVA -> jj
    com.volmit.wormholes.util.ParticleEffect FOOTSTEP -> jk
    com.volmit.wormholes.util.ParticleEffect CLOUD -> jl
    com.volmit.wormholes.util.ParticleEffect REDSTONE -> jm
    com.volmit.wormholes.util.ParticleEffect SNOWBALL -> jn
    com.volmit.wormholes.util.ParticleEffect SNOW_SHOVEL -> jo
    com.volmit.wormholes.util.ParticleEffect SLIME -> jp
    com.volmit.wormholes.util.ParticleEffect HEART -> jq
    com.volmit.wormholes.util.ParticleEffect BARRIER -> jr
    com.volmit.wormholes.util.ParticleEffect ITEM_CRACK -> js
    com.volmit.wormholes.util.ParticleEffect BLOCK_CRACK -> jt
    com.volmit.wormholes.util.ParticleEffect BLOCK_DUST -> ju
    com.volmit.wormholes.util.ParticleEffect WATER_DROP -> jv
    com.volmit.wormholes.util.ParticleEffect ITEM_TAKE -> jw
    com.volmit.wormholes.util.ParticleEffect MOB_APPEARANCE -> jx
    com.volmit.wormholes.util.ParticleEffect DRAGON_BREATH -> jy
    com.volmit.wormholes.util.ParticleEffect END_ROD -> jz
    com.volmit.wormholes.util.ParticleEffect DAMAGE_INDICATOR -> jA
    com.volmit.wormholes.util.ParticleEffect SWEEP_ATTACK -> jB
    java.util.Map NAME_MAP -> jC
    java.util.Map ID_MAP -> jD
    java.lang.String name -> name
    int id -> id
    int requiredVersion -> jE
    java.util.List properties -> jF
    com.volmit.wormholes.util.ParticleEffect[] $VALUES -> jG
    50:50:com.volmit.wormholes.util.ParticleEffect[] values() -> values
    50:50:com.volmit.wormholes.util.ParticleEffect valueOf(java.lang.String) -> valueOf
    483:488:void <init>(java.lang.String,int,java.lang.String,int,int,com.volmit.wormholes.util.ParticleEffect$ParticleProperty[]) -> <init>
    497:497:java.lang.String getName() -> getName
    507:507:int getId() -> getId
    517:517:int getRequiredVersion() -> M
    527:527:boolean hasProperty(com.volmit.wormholes.util.ParticleEffect$ParticleProperty) -> Lorem
    538:542:boolean isSupported() -> isSupported
    554:562:com.volmit.wormholes.util.ParticleEffect fromName(java.lang.String) -> Integer
    574:582:com.volmit.wormholes.util.ParticleEffect fromId(int) -> Sed
    594:595:boolean isWater(org.bukkit.Location) -> ac
    608:618:boolean isLongDistance(org.bukkit.Location,java.util.List) -> Lorem
    632:632:boolean isDataCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> Lorem
    646:646:boolean isColorCorrect(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor) -> Lorem
    682:699:void display(float,int,org.bukkit.Location,double) -> Lorem
    734:747:void display(float,int,org.bukkit.Location,java.util.List) -> Lorem
    781:782:void display(float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    810:827:void display(org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    854:871:void display(org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    896:897:void display(org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    920:933:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,double) -> Lorem
    956:969:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,java.util.List) -> Lorem
    990:991:void display(com.volmit.wormholes.util.ParticleEffect$ParticleColor,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1027:1043:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,double) -> Lorem
    1078:1091:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,java.util.List) -> Lorem
    1126:1127:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    1154:1167:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Lorem
    1193:1206:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Lorem
    1231:1232:void display(com.volmit.wormholes.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Lorem
    2133:2154:void phantom(org.bukkit.Location,int) -> ipsum
    50:468:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParticleEffect$1 -> com.volmit.wormholes.src.back$1:
    int[] val$in -> jH
    org.bukkit.Location val$l -> empower
    2136:2136:void <init>(int,int[],org.bukkit.Location) -> <init>
    2140:2152:void run() -> run
com.volmit.wormholes.util.ParticleEffect$BlockData -> com.volmit.wormholes.src.back$Lorem:
    1388:1393:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$ItemData -> com.volmit.wormholes.src.back$ipsum:
    1359:1360:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.wormholes.util.ParticleEffect$NoteColor -> com.volmit.wormholes.src.back$dolor:
    int note -> note
    1587:1597:void <init>(int) -> <init>
    1607:1607:float getValueX() -> N
    1618:1618:float getValueY() -> O
    1629:1629:float getValueZ() -> P
com.volmit.wormholes.util.ParticleEffect$OrdinaryColor -> com.volmit.wormholes.src.back$sit:
    int red -> red
    int green -> green
    int blue -> blue
    1460:1488:void <init>(int,int,int) -> <init>
    1498:1499:void <init>(org.bukkit.Color) -> <init>
    1508:1508:int getRed() -> getRed
    1518:1518:int getGreen() -> getGreen
    1528:1528:int getBlue() -> getBlue
    1539:1539:float getValueX() -> N
    1550:1550:float getValueY() -> O
    1561:1561:float getValueZ() -> P
com.volmit.wormholes.util.ParticleEffect$ParticleColor -> com.volmit.wormholes.src.back$amet:
    1407:1407:void <init>() -> <init>
    float getValueX() -> N
    float getValueY() -> O
    float getValueZ() -> P
com.volmit.wormholes.util.ParticleEffect$ParticleColorException -> com.volmit.wormholes.src.back$consectetur:
    long serialVersionUID -> serialVersionUID
    1684:1685:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleData -> com.volmit.wormholes.src.back$adipiscing:
    org.bukkit.Material material -> hn
    byte data -> data
    int[] packetData -> jI
    1290:1294:void <init>(org.bukkit.Material,byte) -> <init>
    1303:1303:org.bukkit.Material getMaterial() -> getMaterial
    1313:1313:byte getData() -> getData
    1323:1323:int[] getPacketData() -> Q
    1333:1333:java.lang.String getPacketDataString() -> R
com.volmit.wormholes.util.ParticleEffect$ParticleDataException -> com.volmit.wormholes.src.back$elit:
    long serialVersionUID -> serialVersionUID
    1657:1658:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket -> com.volmit.wormholes.src.back$Morbi:
    int version -> version
    java.lang.Class enumParticle -> jJ
    java.lang.reflect.Constructor packetConstructor -> jK
    java.lang.reflect.Method getHandle -> jL
    java.lang.reflect.Field playerConnection -> jM
    java.lang.reflect.Method sendPacket -> jN
    boolean initialized -> initialized
    com.volmit.wormholes.util.ParticleEffect effect -> jO
    float offsetX -> jP
    float offsetY -> jQ
    float offsetZ -> jR
    float speed -> jS
    int amount -> jT
    boolean longDistance -> jU
    com.volmit.wormholes.util.ParticleEffect$ParticleData data -> jV
    java.lang.Object packet -> jW
    1771:1789:void <init>(com.volmit.wormholes.util.ParticleEffect,float,float,float,float,int,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1813:1814:void <init>(com.volmit.wormholes.util.ParticleEffect,org.bukkit.util.Vector,float,boolean,com.volmit.wormholes.util.ParticleEffect$ParticleData) -> <init>
    1831:1836:void <init>(com.volmit.wormholes.util.ParticleEffect,com.volmit.wormholes.util.ParticleEffect$ParticleColor,boolean) -> <init>
    1852:1888:void initialize() -> initialize
    1897:1901:int getVersion() -> getVersion
    1913:1913:boolean isInitialized() -> isInitialized
    1926:1965:void initializePacket(org.bukkit.Location) -> enim
    1982:1991:void sendTo(org.bukkit.Location,org.bukkit.entity.Player) -> Lorem
    2006:2014:void sendTo(org.bukkit.Location,java.util.List) -> ipsum
    2031:2045:void sendTo(org.bukkit.Location,double) -> ipsum
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketInstantiationException -> com.volmit.wormholes.src.back$Morbi$Lorem:
    long serialVersionUID -> serialVersionUID
    2099:2100:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$PacketSendingException -> com.volmit.wormholes.src.back$Morbi$ipsum:
    long serialVersionUID -> serialVersionUID
    2126:2127:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticlePacket$VersionIncompatibleException -> com.volmit.wormholes.src.back$Morbi$dolor:
    long serialVersionUID -> serialVersionUID
    2071:2072:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.wormholes.util.ParticleEffect$ParticleProperty -> com.volmit.wormholes.src.back$pulvinar:
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_WATER -> jX
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty REQUIRES_DATA -> jY
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty DIRECTIONAL -> jZ
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty COLORABLE -> ka
    com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] $VALUES -> kb
    1243:1243:com.volmit.wormholes.util.ParticleEffect$ParticleProperty[] values() -> values
    1243:1243:com.volmit.wormholes.util.ParticleEffect$ParticleProperty valueOf(java.lang.String) -> valueOf
    1243:1243:void <init>(java.lang.String,int) -> <init>
    1243:1260:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ParticleEffect$ParticleVersionException -> com.volmit.wormholes.src.back$vulputate:
    long serialVersionUID -> serialVersionUID
    1710:1711:void <init>(java.lang.String) -> <init>
com.volmit.wormholes.util.ParticleManipulator -> com.volmit.wormholes.src.end:
    9:9:void <init>() -> <init>
com.volmit.wormholes.util.PhantomDialog -> com.volmit.wormholes.src.best:
    boolean cancellable -> kc
    27:30:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    34:52:com.volmit.wormholes.util.Window close() -> S
    62:62:boolean isCancellable() -> isCancellable
    67:69:com.volmit.wormholes.util.Dialog setCancellable(boolean) -> pulvinar
    76:76:void onCancelled(org.bukkit.entity.Player,com.volmit.wormholes.util.Window,com.volmit.wormholes.util.Dialog) -> Lorem
    81:81:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomDialog$1 -> com.volmit.wormholes.src.best$1:
    com.volmit.wormholes.util.PhantomDialog this$0 -> kd
    44:44:void <init>(com.volmit.wormholes.util.PhantomDialog,java.lang.Integer) -> <init>
    47:48:void run() -> run
com.volmit.wormholes.util.PhantomEffect -> com.volmit.wormholes.src.of:
    10:10:void <init>() -> <init>
    15:15:com.volmit.wormholes.util.GList getEffects() -> unleash
    void play(org.bukkit.Location) -> mi
    25:25:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.PhantomElement -> com.volmit.wormholes.src.breed:
    org.bukkit.Material type -> ke
    java.lang.Byte metadata -> kf
    java.lang.String title -> title
    com.volmit.wormholes.util.GList text -> kg
    java.lang.Short durability -> kh
    java.lang.Integer count -> ki
    com.volmit.wormholes.util.Slot slot -> kj
    org.bukkit.inventory.ItemStack stack -> kk
    boolean glowing -> glowing
    java.util.UUID id -> kl
    39:50:void <init>(org.bukkit.inventory.ItemStack,com.volmit.wormholes.util.Slot) -> <init>
    72:94:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    108:109:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    125:126:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    142:143:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    159:160:void <init>(org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    178:179:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Integer) -> <init>
    197:198:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short) -> <init>
    218:219:void <init>(org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,java.lang.Short,java.lang.Integer) -> <init>
    224:226:com.volmit.wormholes.util.Element addText(java.lang.String) -> hac
    232:232:org.bukkit.Material getType() -> getType
    238:240:com.volmit.wormholes.util.Element setType(org.bukkit.Material) -> ipsum
    246:246:java.lang.Byte getMetadata() -> vertical
    252:254:com.volmit.wormholes.util.Element setMetadata(java.lang.Byte) -> Lorem
    260:260:java.lang.String getTitle() -> getTitle
    266:268:com.volmit.wormholes.util.Element setTitle(java.lang.String) -> habitasse
    274:274:com.volmit.wormholes.util.GList getText() -> viral
    280:282:com.volmit.wormholes.util.Element setText(com.volmit.wormholes.util.GList) -> consectetur
    288:288:java.lang.Short getDurability() -> virtual
    294:296:com.volmit.wormholes.util.Element setDurability(java.lang.Short) -> Lorem
    302:302:java.lang.Integer getCount() -> getCount
    308:310:com.volmit.wormholes.util.Element setCount(java.lang.Integer) -> Lorem
    316:316:com.volmit.wormholes.util.Slot getSlot() -> visionary
    322:324:com.volmit.wormholes.util.Element setSlot(com.volmit.wormholes.util.Slot) -> Lorem
    331:348:org.bukkit.inventory.ItemStack getStack() -> enabled
    354:356:com.volmit.wormholes.util.Element setStack(org.bukkit.inventory.ItemStack) -> Lorem
    362:362:com.volmit.wormholes.util.Element copy() -> web
    375:375:java.util.UUID getId() -> getId
    382:382:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
    387:392:boolean equals(java.lang.Object) -> equals
    398:399:void setGlowing(boolean) -> setGlowing
    404:404:boolean isGlowing() -> isGlowing
com.volmit.wormholes.util.PhantomElement$1 -> com.volmit.wormholes.src.breed$1:
    com.volmit.wormholes.util.PhantomElement this$0 -> km
    363:363:void <init>(com.volmit.wormholes.util.PhantomElement,org.bukkit.Material,java.lang.Byte,com.volmit.wormholes.util.Slot,java.lang.String,com.volmit.wormholes.util.GList,java.lang.Short,java.lang.Integer) -> <init>
    368:368:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.PhantomEvent -> com.volmit.wormholes.src.bleeding:
    org.bukkit.event.HandlerList handlers -> kn
    11:11:void <init>() -> <init>
    20:20:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    28:28:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    13:13:void <clinit>() -> <clinit>
com.volmit.wormholes.util.PhantomHologram -> com.volmit.wormholes.src.edge:
    com.volmit.wormholes.util.GList meta -> ko
    java.lang.String text -> text
    org.bukkit.Location base -> kp
    double splitDistance -> kq
    org.bukkit.entity.Player exclusive -> kr
    28:34:void <init>(org.bukkit.Location) -> <init>
    39:39:org.bukkit.entity.Entity getHandle() -> wireless
    45:45:java.lang.String getDisplay() -> getDisplay
    51:53:void setLocation(org.bukkit.Location) -> setLocation
    58:59:void setTextLocation(org.bukkit.Location) -> euismod
    64:66:void setDisplay(java.lang.String) -> setDisplay
    74:113:void update() -> update
    118:125:void destroy() -> destroy
    130:130:org.bukkit.Location getLocation() -> getLocation
    135:135:double getSplitDistance() -> T
    140:142:void setSplitDistance(double) -> in
    147:153:void setExclusive(org.bukkit.entity.Player) -> at
    158:158:org.bukkit.entity.Player getExclusive() -> world
com.volmit.wormholes.util.PhantomSelectDialog -> com.volmit.wormholes.src.bricks:
    com.volmit.wormholes.util.GMap bindings -> ks
    30:33:void <init>(java.lang.String,org.bukkit.entity.Player,boolean) -> <init>
    37:39:com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    44:49:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    55:55:void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.PhantomSpinner -> com.volmit.wormholes.src.and:
    com.volmit.wormholes.util.ProgressSpinner s -> kt
    com.volmit.wormholes.util.ProgressSpinner c -> ku
    14:17:void <init>(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C) -> <init>
    22:22:java.lang.String toString() -> toString
com.volmit.wormholes.util.PhantomWindow -> com.volmit.wormholes.src.clicks:
    java.lang.Integer viewport -> kv
    java.lang.String title -> title
    com.volmit.wormholes.util.GList elements -> kw
    org.bukkit.inventory.Inventory inventory -> inventory
    com.volmit.wormholes.util.Element background -> kx
    boolean open -> open
    org.bukkit.entity.Player viewer -> vel
    java.util.UUID id -> kl
    40:56:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    61:65:com.volmit.wormholes.util.Window open() -> U
    71:78:com.volmit.wormholes.util.Window close() -> S
    84:88:void update() -> update
    93:113:com.volmit.wormholes.util.Window build() -> V
    118:150:void rebuild() -> per
    155:163:boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    169:169:boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    175:186:com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    192:197:com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    203:205:com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    211:211:java.lang.String getTitle() -> getTitle
    217:219:com.volmit.wormholes.util.Window setTitle(java.lang.String) -> commodo
    225:225:com.volmit.wormholes.util.GList getElements() -> W
    231:233:com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    239:239:org.bukkit.entity.Player getViewer() -> Proin
    245:245:org.bukkit.inventory.Inventory getInventory() -> getInventory
    251:251:java.util.UUID getId() -> getId
    257:257:com.volmit.wormholes.util.Element getBackground() -> X
    263:265:com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    271:271:java.lang.Integer getViewport() -> Y
    277:279:com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    285:287:com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    293:293:boolean isOpen() -> isOpen
    299:304:void on(org.bukkit.event.inventory.InventoryCloseEvent) -> Lorem
    309:313:void on(org.bukkit.event.inventory.InventoryDragEvent) -> Lorem
    318:343:void on(org.bukkit.event.inventory.InventoryClickEvent) -> Lorem
    348:353:boolean equals(java.lang.Object) -> equals
    359:359:boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    366:366:void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
com.volmit.wormholes.util.PhantomWindow$1 -> com.volmit.wormholes.src.clicks$1:
    com.volmit.wormholes.util.PhantomWindow this$0 -> ky
    48:48:void <init>(com.volmit.wormholes.util.PhantomWindow,org.bukkit.Material,com.volmit.wormholes.util.Slot,java.lang.String) -> <init>
    53:53:void onClick(org.bukkit.entity.Player,com.volmit.wormholes.util.Click,com.volmit.wormholes.util.Window) -> Lorem
com.volmit.wormholes.util.Physical -> com.volmit.wormholes.src.mortar:
    org.bukkit.Location getLocation() -> getLocation
    org.bukkit.util.Vector getVelocity() -> getVelocity
    org.bukkit.util.Vector getVolume() -> Z
    java.lang.Double getMass() -> aa
    java.lang.Double getDensity() -> ab
    void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    void influenceForce(org.bukkit.util.Vector) -> dolor
com.volmit.wormholes.util.PhysicalObject -> com.volmit.wormholes.src.collaborative:
    org.bukkit.Location location -> sagittis
    org.bukkit.util.Vector velocity -> mattis
    org.bukkit.util.Vector volume -> kz
    java.lang.Double mass -> kA
    30:35:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double) -> <init>
    47:48:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    52:52:org.bukkit.Location getLocation() -> getLocation
    57:57:org.bukkit.util.Vector getVelocity() -> getVelocity
    62:62:org.bukkit.util.Vector getVolume() -> Z
    67:67:java.lang.Double getMass() -> aa
    72:72:java.lang.Double getDensity() -> ab
    77:82:void influenceGravity(com.volmit.wormholes.util.Physical) -> Lorem
    87:89:void influenceForce(org.bukkit.util.Vector) -> dolor
com.volmit.wormholes.util.PlayerDataHandler -> com.volmit.wormholes.src.compelling:
    17:18:void <init>(com.volmit.wormholes.util.Controllable) -> <init>
    com.volmit.wormholes.util.Configurable onLoad(org.bukkit.entity.Player) -> rhoncus
    void onSave(org.bukkit.entity.Player) -> sapien
    12:12:void onSave(java.lang.Object) -> consectetur
    12:12:com.volmit.wormholes.util.Configurable onLoad(java.lang.Object) -> amet
    12:12:java.lang.Object onLoad(java.lang.Object) -> adipiscing
com.volmit.wormholes.util.PlayerDataSet -> com.volmit.wormholes.src.cross:
    java.io.File folder -> folder
    24:26:void <init>(java.io.File) -> <init>
    40:42:void load(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> Lorem
    56:58:void save(org.bukkit.entity.Player,com.volmit.wormholes.util.DataCluster) -> ipsum
com.volmit.wormholes.util.PlayerEvent -> com.volmit.wormholes.src.platform:
    org.bukkit.entity.Player player -> player
    15:17:void <init>(org.bukkit.entity.Player) -> <init>
    26:26:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.wormholes.util.PlayerHud -> com.volmit.wormholes.src.media:
    boolean closeOnMove -> kB
    org.bukkit.Location last -> lorem
    14:18:void <init>(org.bukkit.entity.Player,boolean) -> <init>
    22:23:void <init>(org.bukkit.entity.Player) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> disintermediate
    37:51:void onUpdateInternal() -> embrace
com.volmit.wormholes.util.PlayerInventorySet -> com.volmit.wormholes.src.customized:
    org.bukkit.entity.Player p -> efficitur
    org.bukkit.inventory.ItemStack[] contents -> kC
    12:15:void <init>(org.bukkit.entity.Player) -> <init>
    19:35:void pop() -> pop
    39:42:void push() -> push
com.volmit.wormholes.util.PlayerScrollEvent -> com.volmit.wormholes.src.cutting:
    int from -> from
    int to -> to
    int distance -> kD
    int movement -> kE
    com.volmit.wormholes.util.ScrollDirection direction -> kF
    15:47:void <init>(org.bukkit.entity.Player,int,int) -> <init>
    51:51:int getFrom() -> ae
    56:56:int getTo() -> af
    61:61:int getDistance() -> ag
    66:66:int getMovement() -> ah
    71:71:com.volmit.wormholes.util.ScrollDirection getDirection() -> ai
com.volmit.wormholes.util.PluginMessage -> com.volmit.wormholes.src.distributed:
    com.google.common.io.ByteArrayDataOutput out -> kG
    org.bukkit.entity.Player player -> player
    org.bukkit.plugin.Plugin plugin -> plugin
    29:39:void <init>(org.bukkit.plugin.Plugin,java.lang.String[]) -> <init>
    46:52:void send() -> send
com.volmit.wormholes.util.PluginUtil -> com.volmit.wormholes.src.dot:
    34:34:void <init>() -> <init>
    45:49:void enable(org.bukkit.plugin.Plugin) -> ipsum
    56:60:void enableAll() -> aj
    70:74:void disable(org.bukkit.plugin.Plugin) -> dolor
    81:85:void disableAll() -> ak
    96:96:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> sit
    110:116:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> Lorem
    128:135:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> ante
    145:151:java.util.List getPluginNames(boolean) -> Vestibulum
    163:168:java.lang.String getPluginVersion(java.lang.String) -> cursus
    182:204:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> amet
    219:298:java.util.List findByCommand(java.lang.String) -> suscipit
    319:320:void load(org.bukkit.plugin.Plugin) -> consectetur
    324:346:java.lang.String getPluginFileName(java.lang.String) -> Mauris
    359:409:boolean load(java.lang.String) -> load
    421:426:void reload(org.bukkit.plugin.Plugin) -> adipiscing
    433:437:void reloadAll() -> al
    449:577:void unload(org.bukkit.plugin.Plugin) -> elit
    584:707:void unloadNoGC(org.bukkit.plugin.Plugin) -> Morbi
    712:712:org.bukkit.plugin.Plugin getAnyPlugin() -> am
com.volmit.wormholes.util.Polygon -> com.volmit.wormholes.src.com:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.Priority -> com.volmit.wormholes.src.dynamic:
    com.volmit.wormholes.util.Priority LOWEST -> kH
    com.volmit.wormholes.util.Priority VERY_LOW -> kI
    com.volmit.wormholes.util.Priority LOW -> kJ
    com.volmit.wormholes.util.Priority NORMAL -> kK
    com.volmit.wormholes.util.Priority HIGH -> kL
    com.volmit.wormholes.util.Priority VERY_HIGH -> kM
    com.volmit.wormholes.util.Priority HIGHEST -> kN
    com.volmit.wormholes.util.Priority[] $VALUES -> kO
    3:3:com.volmit.wormholes.util.Priority[] values() -> values
    3:3:com.volmit.wormholes.util.Priority valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    9:9:com.volmit.wormholes.util.GList topDown() -> an
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ProgressSpinner -> com.volmit.wormholes.src.business:
    java.lang.String[] chars -> kP
    int index -> index
    com.volmit.wormholes.util.ProgressSpinner DEFAULT -> kQ
    com.volmit.wormholes.util.ProgressSpinner NETWORK -> kR
    com.volmit.wormholes.util.ProgressSpinner CIRCLES -> kS
    com.volmit.wormholes.util.ProgressSpinner RANDOMS -> kT
    com.volmit.wormholes.util.ProgressSpinner MERGERS -> kU
    26:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> ao
    65:65:int getIndex() -> getIndex
    70:75:void <clinit>() -> <clinit>
com.volmit.wormholes.util.QueueMode -> com.volmit.wormholes.src.efficient:
    com.volmit.wormholes.util.QueueMode ROUND_ROBIN -> kV
    com.volmit.wormholes.util.QueueMode SMALLEST -> kW
    com.volmit.wormholes.util.QueueMode[] $VALUES -> kX
    3:3:com.volmit.wormholes.util.QueueMode[] values() -> values
    3:3:com.volmit.wormholes.util.QueueMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.util.RTEX -> com.volmit.wormholes.src.to:
    com.volmit.wormholes.util.GList extras -> kY
    19:21:void <init>(com.volmit.wormholes.util.ColoredString[]) -> <init>
    30:44:com.volmit.wormholes.util.JSONObject toJSON() -> proactive
com.volmit.wormholes.util.RTX -> com.volmit.wormholes.src.enterprise:
    com.volmit.wormholes.util.JSONArray base -> kZ
    19:22:void <init>() -> <init>
    32:33:void add(com.volmit.wormholes.util.JSONObject) -> amet
    43:47:void addText(java.lang.String) -> addText
    59:63:void addText(java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    77:86:void addTextHover(java.lang.String,com.volmit.wormholes.util.RTEX,com.volmit.wormholes.util.C) -> Lorem
    100:110:void addTextSuggestedCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    124:134:void addTextOpenURL(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    150:160:void addTextFireCommand(java.lang.String,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    178:192:void addTextSuggestedHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> Lorem
    208:222:void addTextOpenHoverURL(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> ipsum
    238:252:void addTextFireHoverCommand(java.lang.String,com.volmit.wormholes.util.RTEX,java.lang.String,com.volmit.wormholes.util.C) -> dolor
    261:261:com.volmit.wormholes.util.JSONArray toJSON() -> lists
    272:273:void tellRawTo(org.bukkit.entity.Player) -> iaculis
com.volmit.wormholes.util.RayTrace -> com.volmit.wormholes.src.extensible:
    org.bukkit.Location start -> la
    org.bukkit.util.Vector direction -> primis
    java.lang.Double maxDistance -> lb
    java.lang.Double distanceCovered -> lc
    java.lang.Double step -> ld
    java.lang.Boolean stop -> le
    37:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> ap
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> amet
    89:89:org.bukkit.Location getStart() -> aq
    94:95:void setStart(org.bukkit.Location) -> posuere
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> ar
    114:115:void setMaxDistance(java.lang.Double) -> dolor
    119:119:java.lang.Double getDistanceCovered() -> as
    124:125:void setDistanceCovered(java.lang.Double) -> sit
    129:129:java.lang.Double getStep() -> au
    134:135:void setStep(java.lang.Double) -> amet
com.volmit.wormholes.util.RedstonePower -> com.volmit.wormholes.src.frictionless:
    byte power -> lf
    19:21:void <init>(byte) -> <init>
    30:40:byte getPower() -> av
    51:52:void setPower(byte) -> adipiscing
com.volmit.wormholes.util.ReflectionUtils -> com.volmit.wormholes.src.front:
    34:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Class[]) -> Lorem
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> Lorem
    156:156:java.lang.Object instantiateObject(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.Object[]) -> Lorem
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> Lorem
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> Lorem
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> Lorem
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> Lorem
    360:360:java.lang.reflect.Field getField(java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> Lorem
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Lorem
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> Lorem
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> Lorem
    509:510:void setValue(java.lang.Object,java.lang.String,com.volmit.wormholes.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> Lorem
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> Lorem
com.volmit.wormholes.util.ReflectionUtils$DataType -> com.volmit.wormholes.src.front$Lorem:
    com.volmit.wormholes.util.ReflectionUtils$DataType BYTE -> lg
    com.volmit.wormholes.util.ReflectionUtils$DataType SHORT -> lh
    com.volmit.wormholes.util.ReflectionUtils$DataType INTEGER -> li
    com.volmit.wormholes.util.ReflectionUtils$DataType LONG -> lj
    com.volmit.wormholes.util.ReflectionUtils$DataType CHARACTER -> lk
    com.volmit.wormholes.util.ReflectionUtils$DataType FLOAT -> ll
    com.volmit.wormholes.util.ReflectionUtils$DataType DOUBLE -> lm
    com.volmit.wormholes.util.ReflectionUtils$DataType BOOLEAN -> ln
    java.util.Map CLASS_MAP -> lo
    java.lang.Class primitive -> lp
    java.lang.Class reference -> lq
    com.volmit.wormholes.util.ReflectionUtils$DataType[] $VALUES -> lr
    630:630:com.volmit.wormholes.util.ReflectionUtils$DataType[] values() -> values
    630:630:com.volmit.wormholes.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
    657:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> aw
    679:679:java.lang.Class getReference() -> ax
    691:691:com.volmit.wormholes.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> dolor
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> sit
    718:719:java.lang.Class getReference(java.lang.Class) -> amet
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> Lorem
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> ipsum
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> Lorem
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> ipsum
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> ipsum
    630:646:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ReflectionUtils$PackageType -> com.volmit.wormholes.src.front$ipsum:
    com.volmit.wormholes.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> ls
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT -> lt
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> lu
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> lv
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> lw
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> lx
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> ly
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> lz
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> lA
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> lB
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> lC
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> lD
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> lE
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> lF
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> lG
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> lH
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> lI
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> lJ
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> lK
    com.volmit.wormholes.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> lL
    java.lang.String path -> path
    com.volmit.wormholes.util.ReflectionUtils$PackageType[] $VALUES -> lM
    548:548:com.volmit.wormholes.util.ReflectionUtils$PackageType[] values() -> values
    548:548:com.volmit.wormholes.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
    561:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,com.volmit.wormholes.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    548:550:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Registrar -> com.volmit.wormholes.src.global:
    com.volmit.wormholes.util.RegistrarType value() -> ay
com.volmit.wormholes.util.RegistrarType -> com.volmit.wormholes.src.granular:
    com.volmit.wormholes.util.RegistrarType AUTO -> lN
    com.volmit.wormholes.util.RegistrarType MANUAL -> lO
    com.volmit.wormholes.util.RegistrarType[] $VALUES -> lP
    3:3:com.volmit.wormholes.util.RegistrarType[] values() -> values
    3:3:com.volmit.wormholes.util.RegistrarType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.RootedHud -> com.volmit.wormholes.src.holistic:
    org.bukkit.Location track -> lQ
    double maxDist -> bH
    14:18:void <init>(org.bukkit.entity.Player,org.bukkit.Location,double) -> <init>
    22:23:void <init>(org.bukkit.entity.Player,org.bukkit.Location) -> <init>
    28:31:org.bukkit.Location getBaseLocation() -> disintermediate
    37:43:void onUpdateInternal() -> embrace
com.volmit.wormholes.util.S -> com.volmit.wormholes.src.impactful:
    6:15:void <init>() -> <init>
    void sync() -> sync
com.volmit.wormholes.util.S$1 -> com.volmit.wormholes.src.impactful$1:
    com.volmit.wormholes.util.S this$0 -> lR
    8:8:void <init>(com.volmit.wormholes.util.S) -> <init>
    12:13:void run() -> run
com.volmit.wormholes.util.SR -> com.volmit.wormholes.src.innovative:
    java.lang.Object t -> lS
    boolean f -> f
    5:32:void <init>() -> <init>
    36:36:java.lang.Object get() -> get
    java.lang.Object sync() -> az
    3:3:java.lang.Object access$002(com.volmit.wormholes.util.SR,java.lang.Object) -> Lorem
    3:3:boolean access$102(com.volmit.wormholes.util.SR,boolean) -> Lorem
com.volmit.wormholes.util.SR$1 -> com.volmit.wormholes.src.innovative$1:
    com.volmit.wormholes.util.SR this$0 -> lT
    11:11:void <init>(com.volmit.wormholes.util.SR) -> <init>
    15:17:void run() -> run
com.volmit.wormholes.util.SYM -> com.volmit.wormholes.src.integrated:
    char QUOTE_LEFT -> lU
    char QUOTE_RIGHT -> lV
    char QUOTE_SINGLE_LEFT -> lW
    char QUOTE_SINGLE_RIGHT -> lX
    char DEGREE_CELCIUS -> lY
    char DEGREE_FAHRENHEIT -> lZ
    char BRACKET_LEFT -> ma
    char BRACKET_RIGHT -> mb
    char BRACKET_SHELL_LEFT -> mc
    char BRACKET_SHELL_RIGHT -> md
    char ARROW_LEFT -> me
    char ARROW_UP -> mf
    char ARROW_RIGHT -> mg
    char ARROW_DOWN -> mh
    char ARROW_DOUBLE_LEFT -> mj
    char ARROW_DOUBLE_UP -> mk
    char ARROW_DOUBLE_RIGHT -> ml
    char ARROW_DOUBLE_DOWN -> mm
    char ARROW_LEFT_RIGHT -> mn
    char ARROW_UP_DOWN -> mo
    char ARROW_UP_LEFT -> mp
    char ARROW_UP_RIGHT -> mq
    char ARROW_DOWN_RIGHT -> mr
    char ARROW_DOWN_LEFT -> ms
    char SYMBOL_SNOWFLAKE -> mt
    char SYMBOL_HEART -> mu
    char SYMBOL_COPYRIGHT -> mv
    char SYMBOL_REGISTERED -> mw
    char SYMBOL_WARNING -> mx
    char SYMBOL_DIAMOND -> my
    char SYMBOL_NIB -> mz
    char SYMBOL_CUT -> mA
    char SYMBOL_OHM -> mB
    char SYMBOL_GEAR -> mC
    char SYMBOL_PENCIL -> mD
    char SYMBOL_SMILE -> mE
    char SYMBOL_RADIOACTIVE -> mF
    char SYMBOL_PEACE -> mG
    char SYMBOL_FEMALE -> mH
    char SYMBOL_MALE -> mI
    char SYMBOL_KING -> mJ
    char SYNBOL_QUEEN -> mK
    char SYMBOL_CASTLE -> mL
    char SYMBOL_HORSE -> mM
    char SYMBOL_CLOVER -> mN
    char SYMBOL_FLAG -> mO
    char SYMBOL_VOLTAGE -> mP
    char SYMBOL_EGG -> mQ
    char SHAPE_CIRCLE -> mR
    char SHAPE_SQUARE -> mS
    char SHAPE_TRIANGLE -> mT
    char SHAPE_DIAMOND -> mU
    char SHAPE_PENTAGON -> mV
    char SHAPE_HEXAGON -> mW
    char SHAPE_HEXAGON_HORIZONTAL -> mX
    char SHAPE_ELIPSE -> mY
    11:11:void <init>() -> <init>
    83:99:void printSymbols(org.bukkit.entity.Player) -> orci
com.volmit.wormholes.util.ScrollDirection -> com.volmit.wormholes.src.interactive:
    com.volmit.wormholes.util.ScrollDirection UP -> mZ
    com.volmit.wormholes.util.ScrollDirection DOWN -> na
    com.volmit.wormholes.util.ScrollDirection[] $VALUES -> nb
    3:3:com.volmit.wormholes.util.ScrollDirection[] values() -> values
    3:3:com.volmit.wormholes.util.ScrollDirection valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.util.ScrollingText -> com.volmit.wormholes.src.intuitive:
    java.lang.String text -> text
    int shift -> nc
    9:12:void <init>(java.lang.String) -> <init>
    15:18:void <init>() -> <init>
    22:23:void shiftLeft(int) -> ultrices
    27:28:void shiftRight(int) -> imperdiet
    32:32:java.lang.String getText() -> getText
    37:38:void setText(java.lang.String) -> setText
    42:42:int getShift() -> getShift
    47:48:void setShift(int) -> turpis
    53:65:java.lang.String toString() -> toString
com.volmit.wormholes.util.SelectDialog -> com.volmit.wormholes.src.killer:
    com.volmit.wormholes.util.SelectDialog bind(com.volmit.wormholes.util.Element,java.lang.Object) -> Lorem
    void onSelected(java.lang.Object,com.volmit.wormholes.util.Element) -> Lorem
com.volmit.wormholes.util.Sequencer -> com.volmit.wormholes.src.leading:
    void add(com.volmit.wormholes.util.Audible,int) -> Lorem
    boolean isPlaying() -> isPlaying
    void setPlayHead(int) -> Nullam
    int getLength() -> getLength
    int getPlayHead() -> aA
com.volmit.wormholes.util.Serializer -> com.volmit.wormholes.src.magnetic:
    21:21:void <init>() -> <init>
    34:40:byte[] serialize(java.io.Serializable) -> serialize
    56:61:java.io.Serializable deserialize(byte[]) -> vulputate
    76:79:void serializeToFile(java.io.Serializable,java.io.File) -> Lorem
    94:98:java.io.Serializable deserializeFromFile(java.io.File) -> adipiscing
com.volmit.wormholes.util.Shape -> com.volmit.wormholes.src.mission:
    org.bukkit.Location location -> sagittis
    org.bukkit.util.Vector offset -> cubilia
    org.bukkit.util.Vector size -> nd
    28:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> molestie
    90:94:org.bukkit.Location randomLocation() -> aB
    104:104:org.bukkit.Location randomSurface() -> aC
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> varius
    129:129:org.bukkit.util.Vector getSize() -> aD
com.volmit.wormholes.util.ShockEffect -> com.volmit.wormholes.src.critical:
    java.lang.Float power -> ne
    11:13:void <init>(java.lang.Float) -> <init>
    17:27:void play(org.bukkit.Location,org.bukkit.util.Vector) -> ipsum
    31:31:com.volmit.wormholes.util.LineParticleManipulator getArm() -> aE
com.volmit.wormholes.util.ShockEffect$1 -> com.volmit.wormholes.src.critical$1:
    com.volmit.wormholes.util.ShockEffect this$0 -> nf
    32:32:void <init>(com.volmit.wormholes.util.ShockEffect) -> <init>
    36:37:void play(org.bukkit.Location) -> mi
com.volmit.wormholes.util.ShortTag -> com.volmit.wormholes.src.next:
    short value -> value
    54:56:void <init>(java.lang.String,short) -> <init>
    60:60:java.lang.Short getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.Slot -> com.volmit.wormholes.src.generation:
    java.lang.Integer x -> cx
    java.lang.Integer y -> ng
    java.lang.Integer s -> nh
    24:43:void <init>(java.lang.Integer,java.lang.Integer) -> <init>
    52:56:void <init>(java.lang.Integer) -> <init>
    65:65:java.lang.Integer getSlot() -> aF
    75:75:java.lang.Integer getX() -> models
    85:85:java.lang.Integer getY() -> aG
    90:90:int getPosition(int,int) -> Morbi
    102:105:void setSlot(java.lang.Integer) -> amet
    116:129:void setX(java.lang.Integer) -> ipsum
    139:147:void setY(java.lang.Integer) -> consectetur
    152:152:java.lang.String toString() -> toString
    162:162:com.volmit.wormholes.util.Slot copy() -> aH
    168:173:int hashCode() -> hashCode
    179:235:boolean equals(java.lang.Object) -> equals
com.volmit.wormholes.util.SortedGMap -> com.volmit.wormholes.src.one:
    long serialVersionUID -> serialVersionUID
    12:12:void <init>() -> <init>
    21:37:com.volmit.wormholes.util.GList k() -> users
    45:61:com.volmit.wormholes.util.GList v() -> obfuscate
com.volmit.wormholes.util.SphereParticleManipulator -> com.volmit.wormholes.src.open:
    11:11:void <init>() -> <init>
    29:52:void play(org.bukkit.Location,java.lang.Double,java.lang.Double) -> Lorem
com.volmit.wormholes.util.StringTag -> com.volmit.wormholes.src.source:
    java.lang.String value -> value
    54:56:void <init>(java.lang.String,java.lang.String) -> <init>
    60:60:java.lang.String getValue() -> getValue
    65:70:java.lang.String toString() -> toString
    41:41:java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.SubCommand -> com.volmit.wormholes.src.out:
    java.lang.String sub -> ni
    com.volmit.wormholes.util.GList osub -> nj
    java.lang.String description -> description
    13:17:void <init>(java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    void cs(org.bukkit.command.CommandSender,java.lang.String[]) -> ipsum
    void cp(org.bukkit.entity.Player,java.lang.String[]) -> Lorem
    25:25:java.lang.String getSub() -> aI
    30:30:com.volmit.wormholes.util.GList getOsub() -> aJ
    35:35:java.lang.String getDescription() -> getDescription
com.volmit.wormholes.util.SubGroup -> com.volmit.wormholes.src.the:
    com.volmit.wormholes.util.GList subCommands -> nk
    java.lang.String root -> nl
    12:15:void <init>(java.lang.String) -> <init>
    19:20:void add(com.volmit.wormholes.util.SubCommand) -> Lorem
    24:28:void showHelp(org.bukkit.command.CommandSender) -> sit
    32:33:void sendLine(org.bukkit.command.CommandSender,com.volmit.wormholes.util.SubCommand) -> Lorem
    37:67:void hit(org.bukkit.command.CommandSender,java.lang.String[]) -> dolor
com.volmit.wormholes.util.SystemEffect -> com.volmit.wormholes.src.box:
    com.volmit.wormholes.util.GList effects -> nm
    20:22:void <init>() -> <init>
    27:27:com.volmit.wormholes.util.GList getEffects() -> unleash
    33:37:void play(org.bukkit.Location) -> mi
    42:43:void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.TFColor -> com.volmit.wormholes.src.plug:
    com.volmit.wormholes.util.C c -> p
    8:10:void <init>(com.volmit.wormholes.util.C) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> mollis
com.volmit.wormholes.util.TFRemove -> com.volmit.wormholes.src.play:
    java.lang.String grep -> nn
    8:10:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String onFilter(java.lang.String) -> mollis
com.volmit.wormholes.util.TFReplace -> com.volmit.wormholes.src.proactive:
    java.lang.String grep -> nn
    java.lang.String rep -> no
    9:12:void <init>(java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String onFilter(java.lang.String) -> mollis
com.volmit.wormholes.util.TICK -> com.volmit.wormholes.src.real:
    long tick -> np
    3:3:void <init>() -> <init>
    5:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.TXT -> com.volmit.wormholes.src.time:
    10:10:void <init>() -> <init>
    23:23:java.lang.String repeat(java.lang.String,int) -> repeat
    37:45:com.volmit.wormholes.util.GList wrap(java.lang.String,int) -> sit
    65:65:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    83:83:java.lang.String makeTag(com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,com.volmit.wormholes.util.C,java.lang.String) -> Lorem
    97:97:java.lang.String line(com.volmit.wormholes.util.C,int) -> Lorem
    111:111:java.lang.String underline(com.volmit.wormholes.util.C,int) -> ipsum
    133:138:java.lang.String getLine(com.volmit.wormholes.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> Lorem
com.volmit.wormholes.util.TabbedWindow -> com.volmit.wormholes.src.revolutionary:
    com.volmit.wormholes.util.GMap elements -> cB
    24:27:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    39:45:void bindTab(com.volmit.wormholes.util.Element,java.lang.Integer) -> Lorem
    55:67:void setTab(int) -> vehicula
com.volmit.wormholes.util.Tabled -> com.volmit.wormholes.src.rich:
    java.lang.String value() -> value
com.volmit.wormholes.util.Tabulator -> com.volmit.wormholes.src.robust:
    long serialVersionUID -> serialVersionUID
    int tabSize -> nq
    18:21:void <init>(int) -> <init>
    31:37:void <init>(java.util.Set,int) -> <init>
    47:53:void <init>(java.util.Collection,int) -> <init>
    63:69:void <init>(java.util.Iterator,int) -> <init>
    79:81:void <init>(java.lang.Object[],int) -> <init>
    92:100:void <init>(java.util.List,int) -> <init>
    109:109:int getTabCount() -> getTabCount
    121:126:int getFirstIndex(int) -> porta
    138:143:int getLastIndex(int) -> ultricies
    155:162:com.volmit.wormholes.util.GList getTab(int) -> vestibulum
    174:174:boolean hasTab(int) -> felis
    184:184:int getTabSize() -> getTabSize
    195:196:void setTabSize(int) -> setTabSize
com.volmit.wormholes.util.Tag -> com.volmit.wormholes.src.scalable:
    java.lang.String name -> name
    52:54:void <init>(java.lang.String) -> <init>
    61:61:java.lang.String getName() -> getName
    java.lang.Object getValue() -> getValue
com.volmit.wormholes.util.TagProvider -> com.volmit.wormholes.src.seamless:
    java.lang.String getChatTag() -> aK
    java.lang.String getChatTagHover() -> aL
com.volmit.wormholes.util.Task -> com.volmit.wormholes.src.sexy:
    int taskx -> nr
    com.volmit.wormholes.util.FinalInteger task -> ns
    java.lang.Boolean running -> nt
    21:32:void <init>(int) -> <init>
    void run() -> run
    42:45:void cancel() -> cancel
    54:54:boolean isRunning() -> isRunning
    10:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Task$1 -> com.volmit.wormholes.src.sexy$1:
    com.volmit.wormholes.util.Task this$0 -> nu
    25:25:void <init>(com.volmit.wormholes.util.Task) -> <init>
    29:30:void run() -> run
com.volmit.wormholes.util.TaskLater -> com.volmit.wormholes.src.sticky:
    int taskx -> nr
    17:18:void <init>() -> <init>
    27:36:void <init>(java.lang.Integer) -> <init>
    void run() -> run
    10:10:void <clinit>() -> <clinit>
com.volmit.wormholes.util.TaskLater$1 -> com.volmit.wormholes.src.sticky$1:
    com.volmit.wormholes.util.TaskLater this$0 -> nv
    29:29:void <init>(com.volmit.wormholes.util.TaskLater) -> <init>
    33:34:void run() -> run
com.volmit.wormholes.util.TaskManager -> com.volmit.wormholes.src.strategic:
    3:3:void <init>() -> <init>
com.volmit.wormholes.util.TextFilter -> com.volmit.wormholes.src.synergistic:
    java.lang.String onFilter(java.lang.String) -> mollis
com.volmit.wormholes.util.TextFilterer -> com.volmit.wormholes.src.transparent:
    com.volmit.wormholes.util.GList filters -> nw
    8:10:void <init>() -> <init>
    14:15:void registerFilter(com.volmit.wormholes.util.TextFilter) -> Lorem
    20:27:java.lang.String onFilter(java.lang.String) -> mollis
    32:32:java.lang.String filter(java.lang.String) -> convallis
com.volmit.wormholes.util.TextListener -> com.volmit.wormholes.src.turn:
    org.bukkit.entity.Player player -> player
    13:22:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    27:40:void on(org.bukkit.event.player.AsyncPlayerChatEvent) -> Lorem
    void onTextEntered(java.lang.String) -> viverra
com.volmit.wormholes.util.TextListener$1 -> com.volmit.wormholes.src.turn$1:
    org.bukkit.event.player.AsyncPlayerChatEvent val$e -> nx
    com.volmit.wormholes.util.TextListener this$0 -> ny
    32:32:void <init>(com.volmit.wormholes.util.TextListener,org.bukkit.event.player.AsyncPlayerChatEvent) -> <init>
    36:37:void run() -> run
com.volmit.wormholes.util.ThreadInformation -> com.volmit.wormholes.src.key:
    double ticksPerSecond -> nz
    int queuedSize -> nA
    boolean processing -> nB
    double utilization -> nC
    com.volmit.wormholes.util.Average ticksPerSecondAverage -> nD
    long tick -> np
    int id -> id
    14:22:void <init>(int) -> <init>
    26:26:double getTicksPerSecond() -> aM
    31:33:void setTicksPerSecond(double) -> purus
    37:37:int getQueuedSize() -> aN
    42:43:void setQueuedSize(int) -> nec
    47:47:boolean isProcessing() -> aO
    52:53:void setProcessing(boolean) -> in
    57:57:double getUtilization() -> aP
    62:63:void setUtilization(double) -> non
    67:67:double getTicksPerSecondAverage() -> aQ
    72:72:long getTick() -> getTick
    77:78:void setTick(long) -> setTick
    82:82:long getTickLag() -> aR
    87:87:int getId() -> getId
com.volmit.wormholes.util.TickHandle -> com.volmit.wormholes.src.ubiquitous:
    com.volmit.wormholes.util.TickHandler value() -> aS
com.volmit.wormholes.util.TickHandler -> com.volmit.wormholes.src.user:
    com.volmit.wormholes.util.TickHandler SYNCED -> nE
    com.volmit.wormholes.util.TickHandler REALTIME -> nF
    com.volmit.wormholes.util.TickHandler[] $VALUES -> nG
    3:3:com.volmit.wormholes.util.TickHandler[] values() -> values
    3:3:com.volmit.wormholes.util.TickHandler valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
com.volmit.wormholes.util.Ticked -> com.volmit.wormholes.src.centric:
    double value() -> value
com.volmit.wormholes.util.Timed -> com.volmit.wormholes.src.value:
    long time -> time
    java.lang.String id -> id
    com.volmit.wormholes.util.GList timers -> nH
    10:14:void <init>(java.lang.String,long) -> <init>
    18:18:long getTime() -> getTime
    23:24:void setTime(long) -> setTime
    28:28:java.lang.String getId() -> getId
    33:34:void setId(java.lang.String) -> setId
    38:38:com.volmit.wormholes.util.GList getTimers() -> aT
    43:44:void setTimers(com.volmit.wormholes.util.GList) -> dictum
    48:48:double getTimeMS() -> aU
    53:53:double getTotalTimeMS() -> aV
    58:65:long getTotalTime() -> getTotalTime
    70:70:com.volmit.wormholes.util.GList toLines() -> aW
    75:75:com.volmit.wormholes.util.GList toLines(int,int) -> pulvinar
    80:90:com.volmit.wormholes.util.GList toLines(int,int,com.volmit.wormholes.util.GList) -> Lorem
    95:104:com.volmit.wormholes.util.Timed get(java.lang.String) -> lacus
    109:110:void hit(java.lang.String,long) -> sit
    114:124:void hit(com.volmit.wormholes.util.Timed) -> Lorem
com.volmit.wormholes.util.Timer -> com.volmit.wormholes.src.added:
    long tns -> nI
    long cns -> nJ
    18:21:void <init>() -> <init>
    28:29:void start() -> start
    36:38:void stop() -> stop
    47:47:long getTime() -> getTime
    57:57:long getLastRun() -> aX
com.volmit.wormholes.util.Title -> com.volmit.wormholes.src.vertical:
    java.lang.String title -> title
    java.lang.String subTitle -> nK
    java.lang.String action -> action
    java.lang.Integer fadeIn -> nL
    java.lang.Integer fadeOut -> nM
    java.lang.Integer stayTime -> nN
    24:28:void <init>() -> <init>
    47:54:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    71:77:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    92:97:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    109:117:void send(org.bukkit.entity.Player) -> ligula
    121:121:java.lang.String getTitle() -> getTitle
    126:128:com.volmit.wormholes.util.Title setTitle(java.lang.String) -> eu
    133:133:java.lang.String getSubTitle() -> aY
    138:140:com.volmit.wormholes.util.Title setSubTitle(java.lang.String) -> Phasellus
    145:145:java.lang.String getAction() -> getAction
    150:152:com.volmit.wormholes.util.Title setAction(java.lang.String) -> accumsan
    157:157:java.lang.Integer getFadeIn() -> aZ
    162:163:void setFadeIn(java.lang.Integer) -> adipiscing
    167:167:java.lang.Integer getFadeOut() -> ba
    172:173:void setFadeOut(java.lang.Integer) -> elit
    177:177:java.lang.Integer getStayTime() -> bb
    182:183:void setStayTime(java.lang.Integer) -> Morbi
    187:187:java.lang.Integer totalTime() -> bc
com.volmit.wormholes.util.Transmission -> com.volmit.wormholes.src.viral:
    7:12:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    16:16:java.lang.String getType() -> getType
    21:21:java.lang.String getDestination() -> dictumst
    26:26:java.lang.String getSource() -> getSource
    31:32:void setType(java.lang.String) -> setType
    36:37:void setSource(java.lang.String) -> setSource
    41:42:void setDestination(java.lang.String) -> ipsum
com.volmit.wormholes.util.VariableBlock -> com.volmit.wormholes.src.virtual:
    com.volmit.wormholes.util.GList blocks -> nO
    15:17:void <init>() -> <init>
    21:24:void <init>(java.lang.String) -> <init>
    33:35:void <init>(com.volmit.wormholes.util.MaterialBlock[]) -> <init>
    47:48:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    58:59:void <init>(org.bukkit.Material) -> <init>
    68:68:com.volmit.wormholes.util.GList getBlocks() -> erat
    73:73:com.volmit.wormholes.util.MaterialBlock random() -> bd
    85:85:boolean is(com.volmit.wormholes.util.MaterialBlock) -> ipsum
    96:100:void addBlock(com.volmit.wormholes.util.MaterialBlock) -> dolor
    110:111:void removeBlock(com.volmit.wormholes.util.MaterialBlock) -> sit
    115:145:void fromString(java.lang.String) -> sit
    150:157:java.lang.String toString() -> toString
com.volmit.wormholes.util.VectorMath -> com.volmit.wormholes.src.visionary:
    14:14:void <init>() -> <init>
    18:28:org.bukkit.util.Vector scaleStatic(com.volmit.wormholes.util.Axis,org.bukkit.util.Vector,double) -> Lorem
    33:38:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> Lorem
    43:48:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> ipsum
    53:58:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> dolor
    63:65:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> consectetur
    70:73:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> ipsum
    78:131:org.bukkit.util.Vector rotate(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction,org.bukkit.util.Vector) -> ipsum
    136:136:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> adipiscing
    141:141:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> elit
    146:146:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> Morbi
    151:151:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> pulvinar
    156:156:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> vulputate
    161:161:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> dictum
    166:187:org.bukkit.util.Vector getAxis(com.volmit.wormholes.util.Direction,com.volmit.wormholes.util.Direction) -> sit
    192:192:double round(double,int) -> sit
    197:200:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> Lorem
    205:218:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> Lorem
    231:316:com.volmit.wormholes.util.GList split(org.bukkit.block.BlockFace) -> Lorem
    330:330:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> sit
    335:335:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> amet
    349:349:org.bukkit.util.Vector toVector(float,float) -> dolor
    362:363:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> Lorem
    377:380:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> Lorem
    391:406:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> Vestibulum
    418:421:double getSpeed(org.bukkit.util.Vector) -> in
    435:442:com.volmit.wormholes.util.GList shift(org.bukkit.util.Vector,com.volmit.wormholes.util.GList) -> Lorem
    454:496:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> purus
    510:522:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> Lorem
    536:548:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> ipsum
    562:571:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> dolor
    585:594:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> sit
    608:656:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> non
com.volmit.wormholes.util.VectorMath$1 -> com.volmit.wormholes.src.visionary$1:
    org.bukkit.util.Vector val$vector -> nP
    436:436:void <init>(org.bukkit.util.Vector) -> <init>
    440:440:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> mi
    436:436:java.lang.Object onAdapt(java.lang.Object) -> ipsum
com.volmit.wormholes.util.VectorMath$2 -> com.volmit.wormholes.src.visionary$2:
    int[] $SwitchMap$com$volmit$wormholes$util$Axis -> Y
    int[] $SwitchMap$org$bukkit$block$BlockFace -> nQ
    18:233:void <clinit>() -> <clinit>
com.volmit.wormholes.util.VectorSchematic -> com.volmit.wormholes.src.web:
    com.volmit.wormholes.util.GMap schematic -> nR
    19:21:void <init>() -> <init>
    33:41:boolean contains(com.volmit.wormholes.util.MaterialBlock) -> amet
    53:53:boolean containsMultiple(com.volmit.wormholes.util.MaterialBlock) -> consectetur
    65:75:com.volmit.wormholes.util.GList find(com.volmit.wormholes.util.MaterialBlock) -> adipiscing
    87:119:com.volmit.wormholes.util.GMap match(org.bukkit.Location) -> odio
    129:129:com.volmit.wormholes.util.GMap getSchematic() -> be
    135:138:int hashCode() -> hashCode
    144:168:boolean equals(java.lang.Object) -> equals
    176:177:void clear() -> clear
com.volmit.wormholes.util.VectorTrace -> com.volmit.wormholes.src.enabled:
    org.bukkit.Location hit -> nS
    11:21:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    25:25:boolean canHit(org.bukkit.Location) -> a
    30:30:org.bukkit.Location getHit() -> bf
com.volmit.wormholes.util.VersionBukkit -> com.volmit.wormholes.src.wireless:
    com.volmit.wormholes.util.VersionBukkit VU -> nT
    com.volmit.wormholes.util.VersionBukkit V7 -> nU
    com.volmit.wormholes.util.VersionBukkit V8 -> nV
    com.volmit.wormholes.util.VersionBukkit V9 -> nW
    com.volmit.wormholes.util.VersionBukkit V11 -> nX
    com.volmit.wormholes.util.VersionBukkit V111 -> nY
    com.volmit.wormholes.util.VersionBukkit[] $VALUES -> nZ
    5:5:com.volmit.wormholes.util.VersionBukkit[] values() -> values
    5:5:com.volmit.wormholes.util.VersionBukkit valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    15:20:boolean tc() -> bg
    25:30:boolean uc() -> bh
    35:60:com.volmit.wormholes.util.VersionBukkit get() -> bi
    5:12:void <clinit>() -> <clinit>
com.volmit.wormholes.util.VisualEffect -> com.volmit.wormholes.src.world:
    com.volmit.wormholes.util.GList getEffects() -> unleash
    void play(org.bukkit.Location) -> mi
    void addEffect(com.volmit.wormholes.util.VisualEffect) -> Lorem
com.volmit.wormholes.util.W -> com.volmit.wormholes.src.class:
    28:28:void <init>() -> <init>
    39:47:boolean visible(org.bukkit.block.Block) -> ipsum
    52:52:org.bukkit.DyeColor getColor(org.bukkit.Location) -> facilisis
    58:63:org.bukkit.DyeColor getColor(org.bukkit.block.Block) -> dolor
    76:79:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> Lorem
    90:101:org.bukkit.entity.Entity getEntity(int) -> tristique
    116:129:int count(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock) -> Lorem
    146:146:boolean has(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> Lorem
    158:158:int getChunkX(org.bukkit.block.Block) -> sit
    170:170:int getChunkY(org.bukkit.block.Block) -> amet
    183:184:void dropXp(org.bukkit.Location,int) -> dolor
    195:195:int getChunkZ(org.bukkit.block.Block) -> consectetur
    211:218:void take(org.bukkit.entity.Player,com.volmit.wormholes.util.MaterialBlock,int) -> ipsum
    234:242:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> Lorem
    247:254:com.volmit.wormholes.util.GList news(org.bukkit.Location) -> In
    271:279:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> Lorem
    291:291:com.volmit.wormholes.util.GList getBlocks(org.bukkit.Chunk) -> sit
    303:313:com.volmit.wormholes.util.GList getChunklets(org.bukkit.Chunk) -> amet
    325:325:org.bukkit.World getSyncWorld(org.bukkit.World) -> ipsum
    337:344:com.volmit.wormholes.util.GList getChunklets(com.volmit.wormholes.util.GList) -> Vestibulum
    361:428:com.volmit.wormholes.util.MaterialBlock getMaterialBlock(java.lang.String) -> egestas
    442:454:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> Lorem
    469:470:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> Lorem
    487:488:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> Lorem
    502:503:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> Lorem
    520:521:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> Lorem
    534:535:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> Lorem
    550:551:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> Lorem
    567:577:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> Lorem
    589:596:com.volmit.wormholes.util.GList chunkFaces(org.bukkit.Chunk) -> consectetur
    608:617:com.volmit.wormholes.util.GList blockFaces(org.bukkit.block.Block) -> adipiscing
    629:643:org.bukkit.Location simulateFall(org.bukkit.Location) -> hac
    657:669:com.volmit.wormholes.util.GList chunkRadius(org.bukkit.Chunk,int) -> Lorem
    683:695:com.volmit.wormholes.util.GList blockRadius(org.bukkit.block.Block,int) -> Lorem
    718:750:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> Lorem
    768:775:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> Lorem
    789:789:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> Lorem
    794:794:int chunkDistance(org.bukkit.Chunk,org.bukkit.Chunk) -> Lorem
    799:799:boolean isColored(org.bukkit.block.Block) -> elit
com.volmit.wormholes.util.W$1 -> com.volmit.wormholes.src.class$1:
    java.lang.Double val$doff -> hI
    org.bukkit.entity.Entity val$e -> oa
    org.bukkit.entity.Entity[] val$result -> hK
    732:732:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    736:747:void onTrace(org.bukkit.Location) -> amet
com.volmit.wormholes.util.Window -> com.volmit.wormholes.src.action:
    com.volmit.wormholes.util.Window open() -> U
    void update() -> update
    com.volmit.wormholes.util.Window close() -> S
    void onClose(com.volmit.wormholes.util.Window,org.bukkit.entity.Player) -> Lorem
    com.volmit.wormholes.util.Window build() -> V
    boolean contains(com.volmit.wormholes.util.Slot) -> ipsum
    boolean contains(com.volmit.wormholes.util.Element) -> ipsum
    com.volmit.wormholes.util.Element getElement(com.volmit.wormholes.util.Slot) -> dolor
    com.volmit.wormholes.util.Window addElement(com.volmit.wormholes.util.Element) -> Lorem
    com.volmit.wormholes.util.Window removeElement(com.volmit.wormholes.util.Element) -> dolor
    java.lang.String getTitle() -> getTitle
    com.volmit.wormholes.util.Window setTitle(java.lang.String) -> commodo
    com.volmit.wormholes.util.GList getElements() -> W
    com.volmit.wormholes.util.Window setElements(com.volmit.wormholes.util.GList) -> vulputate
    org.bukkit.entity.Player getViewer() -> Proin
    org.bukkit.inventory.Inventory getInventory() -> getInventory
    java.util.UUID getId() -> getId
    com.volmit.wormholes.util.Element getBackground() -> X
    com.volmit.wormholes.util.Window setBackground(com.volmit.wormholes.util.Element) -> sit
    java.lang.Integer getViewport() -> Y
    com.volmit.wormholes.util.Window setViewport(java.lang.Integer) -> sit
    com.volmit.wormholes.util.Window setInventory(org.bukkit.inventory.Inventory) -> sit
    boolean onClick(com.volmit.wormholes.util.Element,org.bukkit.entity.Player) -> Lorem
    boolean isOpen() -> isOpen
com.volmit.wormholes.util.WindowBorder -> com.volmit.wormholes.src.items:
    com.volmit.wormholes.util.GMap directionSet -> ob
    16:22:void <init>() -> <init>
    35:37:com.volmit.wormholes.util.WindowBorder put(com.volmit.wormholes.util.BorderDirection,int) -> Lorem
    49:69:boolean isValid(com.volmit.wormholes.util.Slot) -> sit
com.volmit.wormholes.util.Worlds -> com.volmit.wormholes.src.applications:
    11:11:void <init>() -> <init>
    20:20:com.volmit.wormholes.util.GList getWorlds() -> bj
    32:32:boolean hasWorld(java.lang.String) -> Praesent
    44:44:org.bukkit.World getWorld(java.lang.String) -> getWorld
com.volmit.wormholes.util.Wraith -> com.volmit.wormholes.src.architectures:
    com.volmit.wormholes.util.ParallelPoolManager poolManager -> oc
    org.bukkit.plugin.Plugin instance -> od
    9:9:void <init>() -> <init>
    16:17:void registerListener(org.bukkit.event.Listener) -> Lorem
    21:22:void callEvent(org.bukkit.event.Event) -> callEvent
    26:27:void unregisterListener(org.bukkit.event.Listener) -> ipsum
    42:42:int scheduleSyncRepeatingTask(int,int,java.lang.Runnable) -> Lorem
    56:56:int scheduleSyncTask(int,java.lang.Runnable) -> Lorem
    67:68:void cancelTask(int) -> cancelTask
    12:12:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperHandshakingClientSetProtocol -> com.volmit.wormholes.src.bandwidth:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getProtocolVersion() -> getProtocolVersion
    57:58:void setProtocolVersion(int) -> setProtocolVersion
    69:69:java.lang.String getServerAddressHostnameOrIp() -> bk
    80:81:void setServerAddressHostnameOrIp(java.lang.String) -> eros
    92:92:int getServerPort() -> getServerPort
    103:104:void setServerPort(int) -> lacinia
    115:115:com.comphenix.protocol.PacketType$Protocol getNextState() -> bl
    126:127:void setNextState(com.comphenix.protocol.PacketType$Protocol) -> Lorem
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginClientEncryptionBegin -> com.volmit.wormholes.src.channels:
    com.comphenix.protocol.PacketType TYPE -> oe
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:byte[] getSharedSecret() -> getSharedSecret
    54:55:void setSharedSecret(byte[]) -> setSharedSecret
    64:64:byte[] getVerifyToken() -> getVerifyToken
    75:76:void setVerifyToken(byte[]) -> setVerifyToken
    23:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginClientStart -> com.volmit.wormholes.src.communities:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    55:56:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerDisconnect -> com.volmit.wormholes.src.content:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> bm
    50:50:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> bn
    61:62:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
    67:68:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerEncryptionBegin -> com.volmit.wormholes.src.convergence:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getServerId() -> getServerId
    57:58:void setServerId(java.lang.String) -> setServerId
    67:67:java.security.PublicKey getPublicKey() -> getPublicKey
    78:79:void setPublicKey(java.security.PublicKey) -> setPublicKey
    88:88:byte[] getVerifyToken() -> getVerifyToken
    99:100:void setVerifyToken(byte[]) -> setVerifyToken
    24:24:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerSetCompression -> com.volmit.wormholes.src.deliverables:
    com.comphenix.protocol.PacketType TYPE -> oe
    27:29:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getThreshold() -> getThreshold
    56:57:void setThreshold(int) -> setThreshold
    23:23:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperLoginServerSuccess -> com.volmit.wormholes.src.commerce:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:com.comphenix.protocol.wrappers.WrappedGameProfile getProfile() -> getProfile
    52:53:void setProfile(com.comphenix.protocol.wrappers.WrappedGameProfile) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientAbilities -> com.volmit.wormholes.src.markets:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> bo
    41:42:void setInvulnurable(boolean) -> purus
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> bp
    57:58:void setCanFly(boolean) -> non
    61:61:boolean canInstantlyBuild() -> bq
    65:66:void setCanInstantlyBuild(boolean) -> mi
    69:69:float getFlyingSpeed() -> br
    73:74:void setFlyingSpeed(float) -> consectetur
    77:77:float getWalkingSpeed() -> bs
    81:82:void setWalkingSpeed(float) -> adipiscing
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientArmAnimation -> com.volmit.wormholes.src.services:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBlockDig -> com.volmit.wormholes.src.tailers:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    60:60:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> bu
    64:65:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
    75:75:com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType getStatus() -> bv
    84:85:void setStatus(com.comphenix.protocol.wrappers.EnumWrappers$PlayerDigType) -> Lorem
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBlockPlace -> com.volmit.wormholes.src.experiences:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> bw
    42:43:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    46:46:long getTimestamp() -> getTimestamp
    50:51:void setTimestamp(long) -> euismod
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientBoatMove -> com.volmit.wormholes.src.eyeballs:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:boolean getLeftOar() -> bx
    42:43:void setLeftOar(boolean) -> euismod
    46:46:boolean getRightOar() -> by
    50:51:void setRightOar(boolean) -> Pellentesque
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientChat -> com.volmit.wormholes.src.functionalities:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:java.lang.String getMessage() -> getMessage
    51:52:void setMessage(java.lang.String) -> setMessage
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientClientCommand -> com.volmit.wormholes.src.infomediaries:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand getAction() -> bz
    54:55:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$ClientCommand) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientCloseWindow -> com.volmit.wormholes.src.infrastructures:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(int) -> Duis
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientCustomPayload -> com.volmit.wormholes.src.initiatives:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> et
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> bB
    74:77:byte[] getContents() -> bC
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientEnchantItem -> com.volmit.wormholes.src.interfaces:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(byte) -> elit
    65:65:int getEnchantment() -> bD
    74:75:void setEnchantment(int) -> tempor
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientEntityAction -> com.volmit.wormholes.src.methodologies:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction getAction() -> bF
    98:99:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerAction) -> Lorem
    109:109:int getJumpBoost() -> bG
    118:119:void setJumpBoost(int) -> semper
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientFlying -> com.volmit.wormholes.src.metrics:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:boolean getOnGround() -> bH
    53:54:void setOnGround(boolean) -> at
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientHeldItemSlot -> com.volmit.wormholes.src.mindshare:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> aliquam
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientKeepAlive -> com.volmit.wormholes.src.models:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> bI
    51:52:void setKeepAliveId(int) -> lectus
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientLook -> com.volmit.wormholes.src.networks:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getYaw() -> getYaw
    53:54:void setYaw(float) -> setYaw
    64:64:float getPitch() -> getPitch
    73:74:void setPitch(float) -> setPitch
    84:84:boolean getOnGround() -> bH
    93:94:void setOnGround(boolean) -> at
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientPosition -> com.volmit.wormholes.src.niches:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:boolean getOnGround() -> bH
    114:115:void setOnGround(boolean) -> at
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientPositionLook -> com.volmit.wormholes.src.paradigms:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:double getX() -> getX
    53:54:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    145:145:boolean getOnGround() -> bH
    154:155:void setOnGround(boolean) -> at
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientResourcePackStatus -> com.volmit.wormholes.src.partnerships:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus getResult() -> bJ
    56:57:void setResult(com.comphenix.protocol.wrappers.EnumWrappers$ResourcePackStatus) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSetCreativeSlot -> com.volmit.wormholes.src.platforms:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getSlot() -> getSlot
    56:57:void setSlot(int) -> aliquam
    65:65:org.bukkit.inventory.ItemStack getClickedItem() -> bK
    74:75:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSettings -> com.volmit.wormholes.src.portals:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getLocale() -> getLocale
    54:55:void setLocale(java.lang.String) -> setLocale
    65:65:int getViewDistance() -> getViewDistance
    74:75:void setViewDistance(byte) -> setViewDistance
    85:85:com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility getChatFlags() -> bL
    94:95:void setChatFlags(com.comphenix.protocol.wrappers.EnumWrappers$ChatVisibility) -> Lorem
    105:105:boolean getChatColours() -> bM
    114:115:void setChatColours(boolean) -> setChatColours
    125:125:int getDisplayedSkinParts() -> bN
    134:135:void setDisplayedSkinParts(int) -> consequat
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSpectate -> com.volmit.wormholes.src.relationships:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:java.util.UUID getTargetPlayer() -> bO
    53:54:void setTargetPlayer(java.util.UUID) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientSteerVehicle -> com.volmit.wormholes.src.ROI:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getSideways() -> bP
    53:54:void setSideways(float) -> elit
    64:64:float getForward() -> bQ
    73:74:void setForward(float) -> Morbi
    77:77:boolean isJump() -> bR
    81:82:void setJump(boolean) -> iaculis
    85:85:boolean isUnmount() -> bS
    89:90:void setUnmount(boolean) -> urna
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTabComplete -> com.volmit.wormholes.src.synergies:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:java.lang.String getText() -> getText
    52:53:void setText(java.lang.String) -> setText
    61:61:com.comphenix.protocol.wrappers.BlockPosition getHasPosition() -> bT
    70:71:void setHasPosition(com.comphenix.protocol.wrappers.BlockPosition) -> ipsum
    82:82:com.comphenix.protocol.wrappers.BlockPosition getLookedAtBlock() -> bU
    91:92:void setLookedAtBlock(com.comphenix.protocol.wrappers.BlockPosition) -> dolor
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTeleportAccept -> com.volmit.wormholes.src.readiness:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getTeleportId() -> bV
    55:56:void setTeleportId(int) -> neque
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientTransaction -> com.volmit.wormholes.src.schemas:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(byte) -> elit
    65:65:short getActionNumber() -> bW
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> bX
    94:95:void setAccepted(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUpdateSign -> com.volmit.wormholes.src.solutions:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    63:63:java.lang.String[] getLines() -> getLines
    72:78:void setLines(java.lang.String[]) -> in
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUseEntity -> com.volmit.wormholes.src.supply:
    com.comphenix.protocol.PacketType TYPE -> oe
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getTargetID() -> bY
    58:58:org.bukkit.entity.Entity getTarget(org.bukkit.World) -> sit
    68:68:org.bukkit.entity.Entity getTarget(com.comphenix.protocol.events.PacketEvent) -> ipsum
    77:78:void setTargetID(int) -> sagittis
    86:86:com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction getType() -> bZ
    95:96:void setType(com.comphenix.protocol.wrappers.EnumWrappers$EntityUseAction) -> Lorem
    106:106:org.bukkit.util.Vector getTargetVector() -> ca
    115:116:void setTargetVector(org.bukkit.util.Vector) -> euismod
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientUseItem -> com.volmit.wormholes.src.chains:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    57:58:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    61:61:com.comphenix.protocol.wrappers.EnumWrappers$Direction getFace() -> cb
    65:66:void setFace(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> ipsum
    69:69:com.comphenix.protocol.wrappers.EnumWrappers$Hand getHand() -> bw
    73:74:void setHand(com.comphenix.protocol.wrappers.EnumWrappers$Hand) -> Lorem
    85:85:float getCursorPositionX() -> cc
    94:95:void setCursorPositionX(float) -> pulvinar
    106:106:float getCursorPositionY() -> cd
    115:116:void setCursorPositionY(float) -> vulputate
    127:127:float getCursorPositionZ() -> ce
    136:137:void setCursorPositionZ(float) -> dictum
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientVehicleMove -> com.volmit.wormholes.src.systems:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientWindowClick -> com.volmit.wormholes.src.technologies:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getWindowId() -> bA
    55:56:void setWindowId(int) -> Duis
    66:66:int getSlot() -> getSlot
    75:76:void setSlot(int) -> aliquam
    86:86:int getButton() -> getButton
    95:96:void setButton(int) -> lorem
    107:107:short getActionNumber() -> bW
    116:117:void setActionNumber(short) -> ipsum
    125:125:org.bukkit.inventory.ItemStack getClickedItem() -> bK
    134:135:void setClickedItem(org.bukkit.inventory.ItemStack) -> in
    138:138:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType getShift() -> cf
    142:143:void setShift(com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType -> com.volmit.wormholes.src.technologies$Lorem:
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP -> og
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_MOVE -> oh
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType SWAP -> oi
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType CLONE -> oj
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType THROW -> ok
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType QUICK_CRAFT -> ol
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType PICKUP_ALL -> om
    com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] $VALUES -> on
    145:145:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType[] values() -> values
    145:145:com.volmit.wormholes.util.WrapperPlayClientWindowClick$InventoryClickType valueOf(java.lang.String) -> valueOf
    145:145:void <init>(java.lang.String,int) -> <init>
    145:146:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAbilities -> com.volmit.wormholes.src.users:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:boolean isInvulnurable() -> bo
    41:42:void setInvulnurable(boolean) -> purus
    45:45:boolean isFlying() -> isFlying
    49:50:void setFlying(boolean) -> setFlying
    53:53:boolean canFly() -> bp
    57:58:void setCanFly(boolean) -> non
    61:61:boolean canInstantlyBuild() -> bq
    65:66:void setCanInstantlyBuild(boolean) -> mi
    69:69:float getFlyingSpeed() -> br
    73:74:void setFlyingSpeed(float) -> consectetur
    77:77:float getWalkingSpeed() -> bs
    81:82:void setWalkingSpeed(float) -> adipiscing
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAnimation -> com.volmit.wormholes.src.vortals:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getAnimation() -> cg
    97:98:void setAnimation(int) -> vel
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerAttachEntity -> com.volmit.wormholes.src.obfuscate:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:int getVehicleId() -> ch
    97:98:void setVehicleId(int) -> Quisque
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBed -> com.volmit.wormholes.src.star:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    98:99:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockAction -> com.volmit.wormholes.src.see:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    56:57:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    67:67:int getByte1() -> ci
    76:77:void setByte1(int) -> congue
    87:87:int getByte2() -> cj
    96:97:void setByte2(int) -> vitae
    107:107:org.bukkit.Material getBlockType() -> ck
    116:117:void setBlockType(org.bukkit.Material) -> dolor
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockBreakAnimation -> com.volmit.wormholes.src.definition:
    com.comphenix.protocol.PacketType TYPE -> oe
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> bE
    59:60:void setEntityID(int) -> eget
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    99:100:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    110:110:int getDestroyStage() -> cl
    119:120:void setDestroyStage(int) -> ornare
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerBlockChange -> com.volmit.wormholes.src.show:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    58:59:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    68:68:org.bukkit.Location getBukkitLocation(org.bukkit.World) -> amet
    77:77:com.comphenix.protocol.wrappers.WrappedBlockData getBlockData() -> cm
    86:87:void setBlockData(com.comphenix.protocol.wrappers.WrappedBlockData) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCamera -> com.volmit.wormholes.src.verb:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCameraId() -> cn
    51:52:void setCameraId(int) -> Integer
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerChat -> com.volmit.wormholes.src.confuse:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedChatComponent getMessage() -> co
    53:53:com.comphenix.protocol.wrappers.WrappedChatComponent getJsonData() -> bn
    62:63:void setMessage(com.comphenix.protocol.wrappers.WrappedChatComponent) -> dolor
    70:71:void setJsonData(com.comphenix.protocol.wrappers.WrappedChatComponent) -> ipsum
    82:82:byte getPosition() -> getPosition
    91:92:void setPosition(byte) -> setPosition
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCloseWindow -> com.volmit.wormholes.src.baffle:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(int) -> Duis
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCollect -> com.volmit.wormholes.src.Relevance:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getCollectedEntityId() -> cp
    51:52:void setCollectedEntityId(int) -> commodo
    60:60:int getCollectorEntityId() -> cq
    69:70:void setCollectorEntityId(int) -> ante
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCombatEvent -> com.volmit.wormholes.src.A:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType getEvent() -> cr
    56:57:void setEvent(com.comphenix.protocol.wrappers.EnumWrappers$CombatEventType) -> Lorem
    62:66:int getDuration() -> getDuration
    70:75:void setDuration(int) -> setDuration
    80:84:int getPlayerID() -> cs
    88:93:void setPlayerId(int) -> cursus
    96:102:int getEntityID() -> bE
    109:115:void setEntityId(int) -> setEntityId
    122:126:java.lang.String getMessage() -> getMessage
    130:135:void setMessage(java.lang.String) -> setMessage
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCombatEvent$1 -> com.volmit.wormholes.src.A$1:
    int[] $SwitchMap$com$comphenix$protocol$wrappers$EnumWrappers$CombatEventType -> oo
    97:97:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCustomPayload -> com.volmit.wormholes.src.ZComplexity:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getChannel() -> getChannel
    56:57:void setChannel(java.lang.String) -> et
    65:65:io.netty.buffer.ByteBuf getContentsBuffer() -> bB
    74:77:byte[] getContents() -> bC
    86:92:void setContentsBuffer(io.netty.buffer.ByteBuf) -> Lorem
    100:101:void setContents(byte[]) -> dictum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerCustomSoundEffect -> com.volmit.wormholes.src.Length:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:java.lang.String getSoundName() -> ct
    56:57:void setSoundName(java.lang.String) -> sodales
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> cu
    77:78:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    89:89:int getX() -> getX
    98:99:void setX(int) -> setX
    110:110:int getY() -> getY
    119:120:void setY(int) -> setY
    131:131:int getZ() -> getZ
    140:141:void setZ(int) -> setZ
    151:151:float getVolume() -> cv
    160:161:void setVolume(float) -> Vestibulum
    171:171:float getPitch() -> getPitch
    180:181:void setPitch(float) -> setPitch
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntity -> com.volmit.wormholes.src.lists:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityDestroy -> com.volmit.wormholes.src.blocks:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    55:55:int[] getEntityIDs() -> cw
    64:65:void setEntityIds(int[]) -> Lorem
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityEffect -> com.volmit.wormholes.src.Common:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEffectID() -> cx
    97:98:void setEffectID(byte) -> Morbi
    106:106:byte getAmplifier() -> cy
    115:116:void setAmplifier(byte) -> pulvinar
    124:124:int getDuration() -> getDuration
    133:134:void setDuration(int) -> setDuration
    142:142:boolean getHideParticles() -> cz
    151:152:void setHideParticles(boolean) -> ac
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityEquipment -> com.volmit.wormholes.src.Informal:
    com.comphenix.protocol.PacketType TYPE -> oe
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> bE
    60:61:void setEntityID(int) -> eget
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    84:84:com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot getSlot() -> cA
    88:89:void setSlot(com.comphenix.protocol.wrappers.EnumWrappers$ItemSlot) -> Lorem
    99:99:org.bukkit.inventory.ItemStack getItem() -> getItem
    108:109:void setItem(org.bukkit.inventory.ItemStack) -> setItem
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityHeadRotation -> com.volmit.wormholes.src.Synonyms:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:byte getHeadYaw() -> cB
    98:99:void setHeadYaw(byte) -> vulputate
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityLook -> com.volmit.wormholes.src.for:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    86:86:float getYaw() -> getYaw
    95:96:void setYaw(float) -> setYaw
    104:104:float getPitch() -> getPitch
    113:114:void setPitch(float) -> setPitch
    122:122:boolean getOnGround() -> bH
    131:132:void setOnGround(boolean) -> at
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityMetadata -> com.volmit.wormholes.src.b:
    com.comphenix.protocol.PacketType TYPE -> oe
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> bE
    61:62:void setEntityID(int) -> eget
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getMetadata() -> getMetadata
    99:100:void setMetadata(java.util.List) -> setMetadata
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityStatus -> com.volmit.wormholes.src.c:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getEntityID() -> bE
    57:58:void setEntityID(int) -> eget
    67:67:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    77:77:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    88:88:byte getEntityStatus() -> cC
    97:98:void setEntityStatus(byte) -> dictum
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityTeleport -> com.volmit.wormholes.src.d:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:int getEntityID() -> bE
    56:57:void setEntityID(int) -> eget
    66:66:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    76:76:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    80:80:double getX() -> getX
    84:85:void setX(double) -> setX
    88:88:double getY() -> getY
    92:93:void setY(double) -> setY
    96:96:double getZ() -> getZ
    100:101:void setZ(double) -> setZ
    109:109:float getYaw() -> getYaw
    118:119:void setYaw(float) -> setYaw
    127:127:float getPitch() -> getPitch
    136:137:void setPitch(float) -> setPitch
    140:140:boolean getOnGround() -> bH
    144:145:void setOnGround(boolean) -> at
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerEntityVelocity -> com.volmit.wormholes.src.f:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    87:87:double getVelocityX() -> cD
    96:97:void setVelocityX(double) -> mi
    105:105:double getVelocityY() -> cE
    114:115:void setVelocityY(double) -> euismod
    123:123:double getVelocityZ() -> cF
    132:133:void setVelocityZ(double) -> Pellentesque
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerExperience -> com.volmit.wormholes.src.g:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getExperienceBar() -> cG
    53:54:void setExperienceBar(float) -> in
    62:62:int getLevel() -> getLevel
    71:72:void setLevel(int) -> setLevel
    80:80:int getTotalExperience() -> getTotalExperience
    89:90:void setTotalExperience(int) -> setTotalExperience
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerExplosion -> com.volmit.wormholes.src.h:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    63:63:double getY() -> getY
    72:73:void setY(double) -> setY
    81:81:double getZ() -> getZ
    90:91:void setZ(double) -> setZ
    101:101:float getRadius() -> getRadius
    110:111:void setRadius(float) -> setRadius
    121:121:java.util.List getRecors() -> cH
    130:131:void setRecords(java.util.List) -> amet
    134:134:float getPlayerVelocityX() -> cI
    138:139:void setPlayerVelocityX(float) -> purus
    142:142:float getPlayerVelocityY() -> cJ
    146:147:void setPlayerVelocityY(float) -> non
    150:150:float getPlayerVelocityZ() -> cK
    154:155:void setPlayerVelocityZ(float) -> mi
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerGameStateChange -> com.volmit.wormholes.src.i:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    43:43:int getReason() -> getReason
    52:53:void setReason(int) -> suscipit
    63:63:float getValue() -> getValue
    72:73:void setValue(float) -> setValue
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerHeldItemSlot -> com.volmit.wormholes.src.j:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getSlot() -> getSlot
    53:54:void setSlot(int) -> aliquam
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerKeepAlive -> com.volmit.wormholes.src.k:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:int getKeepAliveId() -> bI
    51:52:void setKeepAliveId(int) -> lectus
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerKickDisconnect -> com.volmit.wormholes.src.l:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    47:47:com.comphenix.protocol.wrappers.WrappedChatComponent getReason() -> bm
    56:57:void setReason(com.comphenix.protocol.wrappers.WrappedChatComponent) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerLogin -> com.volmit.wormholes.src.m:
    com.comphenix.protocol.PacketType TYPE -> oe
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> bE
    60:61:void setEntityID(int) -> eget
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> cL
    101:102:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    112:112:int getDimension() -> getDimension
    121:122:void setDimension(int) -> setDimension
    132:132:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> cM
    141:142:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    152:152:int getMaxPlayers() -> getMaxPlayers
    161:162:void setMaxPlayers(int) -> setMaxPlayers
    172:172:org.bukkit.WorldType getLevelType() -> cN
    181:182:void setLevelType(org.bukkit.WorldType) -> Lorem
    190:190:boolean getReducedDebugInfo() -> cO
    199:200:void setReducedDebugInfo(boolean) -> setReducedDebugInfo
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMap -> com.volmit.wormholes.src.n:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getItemDamage() -> cP
    53:54:void setItemDamage(int) -> Mauris
    62:62:byte getScale() -> cQ
    71:72:void setScale(byte) -> Vestibulum
    75:75:boolean getTrackingPosition() -> cR
    79:80:void setTrackingPosition(boolean) -> enim
    83:83:java.lang.Object[] getMapIcons() -> cS
    87:88:void setMapIcons(java.lang.Object[]) -> dolor
    91:91:int getColumns() -> getColumns
    95:96:void setColumns(int) -> setColumns
    99:99:int getRows() -> getRows
    103:104:void setRows(int) -> setRows
    107:107:int getX() -> getX
    111:112:void setX(int) -> setX
    115:115:int getZ() -> getZ
    119:120:void setZ(int) -> setZ
    123:123:byte[] getData() -> getData
    127:128:void setData(byte[]) -> setData
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMapChunk -> com.volmit.wormholes.src.o:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getChunkX() -> getChunkX
    53:54:void setChunkX(int) -> mollis
    64:64:int getChunkZ() -> getChunkZ
    73:74:void setChunkZ(int) -> convallis
    77:77:java.lang.Object getChunkMap() -> cT
    81:82:void setChunkMap(java.lang.Object) -> ac
    94:94:boolean getGroundUpContinuous() -> cU
    103:104:void setGroundUpContinuous(boolean) -> posuere
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMount -> com.volmit.wormholes.src.p:
    com.comphenix.protocol.PacketType TYPE -> oe
    38:40:void <init>() -> <init>
    43:44:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    54:54:int getEntityID() -> bE
    64:64:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    74:74:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:84:void setEntityID(int) -> eget
    87:87:int[] getPassengerIds() -> cV
    91:92:void setPassengerIds(int[]) -> ipsum
    95:95:java.util.List getPassengers(com.comphenix.protocol.events.PacketEvent) -> dolor
    99:110:java.util.List getPassengers(org.bukkit.World) -> consectetur
    114:120:void setPassengers(java.util.List) -> consectetur
    35:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerMultiBlockChange -> com.volmit.wormholes.src.q:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.ChunkCoordIntPair getChunk() -> getChunk
    54:55:void setChunk(com.comphenix.protocol.wrappers.ChunkCoordIntPair) -> Lorem
    63:63:com.comphenix.protocol.wrappers.MultiBlockChangeInfo[] getRecords() -> cW
    72:73:void setRecords(com.comphenix.protocol.wrappers.MultiBlockChangeInfo[]) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerNamedEntitySpawn -> com.volmit.wormholes.src.r:
    com.comphenix.protocol.PacketType TYPE -> oe
    37:39:void <init>() -> <init>
    42:43:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    53:53:int getEntityID() -> bE
    62:63:void setEntityID(int) -> eget
    72:72:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    82:82:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    93:93:java.util.UUID getPlayerUUID() -> cX
    102:103:void setPlayerUUID(java.util.UUID) -> ipsum
    111:111:org.bukkit.util.Vector getPosition() -> cY
    120:123:void setPosition(org.bukkit.util.Vector) -> Pellentesque
    126:126:double getX() -> getX
    130:131:void setX(double) -> setX
    134:134:double getY() -> getY
    138:139:void setY(double) -> setY
    142:142:double getZ() -> getZ
    146:147:void setZ(double) -> setZ
    155:155:float getYaw() -> getYaw
    164:165:void setYaw(float) -> setYaw
    173:173:float getPitch() -> getPitch
    182:183:void setPitch(float) -> setPitch
    193:193:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> cZ
    202:203:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
    33:33:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerNamedSoundEffect -> com.volmit.wormholes.src.s:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:org.bukkit.Sound getSoundEffect() -> da
    45:46:void setSoundEffect(org.bukkit.Sound) -> ipsum
    49:49:com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory getSoundCategory() -> cu
    53:54:void setSoundCategory(com.comphenix.protocol.wrappers.EnumWrappers$SoundCategory) -> Lorem
    64:64:int getEffectPositionX() -> db
    73:74:void setEffectPositionX(int) -> viverra
    84:84:int getEffectPositionY() -> dc
    93:94:void setEffectPositionY(int) -> lacus
    104:104:int getEffectPositionZ() -> dd
    113:114:void setEffectPositionZ(int) -> eu
    124:124:float getVolume() -> cv
    133:134:void setVolume(float) -> Vestibulum
    144:144:float getPitch() -> getPitch
    153:154:void setPitch(float) -> setPitch
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerOpenSignEditor -> com.volmit.wormholes.src.t:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerOpenWindow -> com.volmit.wormholes.src.u:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getWindowID() -> de
    59:60:void setWindowID(int) -> Phasellus
    70:70:java.lang.String getInventoryType() -> df
    79:80:void setInventoryType(java.lang.String) -> scelerisque
    90:90:com.comphenix.protocol.wrappers.WrappedChatComponent getWindowTitle() -> dg
    99:100:void setWindowTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> sit
    111:111:int getNumberOfSlots() -> dh
    120:121:void setNumberOfSlots(int) -> accumsan
    131:131:int getEntityID() -> bE
    140:141:void setEntityID(int) -> eget
    150:150:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    160:160:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPlayerInfo -> com.volmit.wormholes.src.v:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    41:41:com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction getAction() -> di
    45:46:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$PlayerInfoAction) -> Lorem
    49:49:java.util.List getData() -> dj
    53:54:void setData(java.util.List) -> adipiscing
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPlayerListHeaderFooter -> com.volmit.wormholes.src.w:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.WrappedChatComponent getHeader() -> dk
    53:54:void setHeader(com.comphenix.protocol.wrappers.WrappedChatComponent) -> amet
    62:62:com.comphenix.protocol.wrappers.WrappedChatComponent getFooter() -> dl
    71:72:void setFooter(com.comphenix.protocol.wrappers.WrappedChatComponent) -> consectetur
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPosition -> com.volmit.wormholes.src.x:
    com.comphenix.protocol.PacketType TYPE -> oe
    java.lang.Class FLAGS_CLASS -> op
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:double getX() -> getX
    59:60:void setX(double) -> setX
    70:70:double getY() -> getY
    79:80:void setY(double) -> setY
    90:90:double getZ() -> getZ
    99:100:void setZ(double) -> setZ
    110:110:float getYaw() -> getYaw
    119:120:void setYaw(float) -> setYaw
    130:130:float getPitch() -> getPitch
    139:140:void setPitch(float) -> setPitch
    151:154:com.comphenix.protocol.reflect.StructureModifier getFlagsModifier() -> dm
    158:158:java.util.Set getFlags() -> dn
    162:163:void setFlags(java.util.Set) -> Lorem
    31:143:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag -> com.volmit.wormholes.src.x$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X -> oq
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y -> or
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Z -> os
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag Y_ROT -> ot
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag X_ROT -> ou
    com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] $VALUES -> ov
    146:146:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag[] values() -> values
    146:146:com.volmit.wormholes.util.WrapperPlayServerPosition$PlayerTeleportFlag valueOf(java.lang.String) -> valueOf
    146:146:void <init>(java.lang.String,int) -> <init>
    146:147:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRelEntityMove -> com.volmit.wormholes.src.y:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    82:82:int getDx() -> do
    86:87:void setDx(int) -> egestas
    90:90:int getDy() -> dp
    94:95:void setDy(int) -> Praesent
    98:98:int getDz() -> dq
    102:103:void setDz(int) -> eros
    111:111:boolean getOnGround() -> bH
    120:121:void setOnGround(boolean) -> at
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRelEntityMoveLook -> com.volmit.wormholes.src.z:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    87:87:double getDx() -> dr
    96:97:void setDx(double) -> at
    105:105:double getDy() -> ds
    114:115:void setDy(double) -> iaculis
    123:123:double getDz() -> dt
    132:133:void setDz(double) -> urna
    141:141:float getYaw() -> getYaw
    150:151:void setYaw(float) -> setYaw
    159:159:float getPitch() -> getPitch
    168:169:void setPitch(float) -> setPitch
    177:177:boolean getOnGround() -> bH
    186:187:void setOnGround(boolean) -> at
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRemoveEntityEffect -> com.volmit.wormholes.src.B:
    com.comphenix.protocol.PacketType TYPE -> oe
    34:36:void <init>() -> <init>
    39:40:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:50:int getEntityID() -> bE
    59:60:void setEntityID(int) -> eget
    69:69:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    79:79:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    83:83:org.bukkit.potion.PotionEffectType getEffect() -> du
    87:88:void setEffect(org.bukkit.potion.PotionEffectType) -> ipsum
    30:30:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerResourcePackSend -> com.volmit.wormholes.src.C:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:java.lang.String getUrl() -> getUrl
    54:55:void setUrl(java.lang.String) -> setUrl
    69:69:java.lang.String getHash() -> getHash
    78:79:void setHash(java.lang.String) -> velit
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerRespawn -> com.volmit.wormholes.src.D:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    48:48:int getDimension() -> getDimension
    57:58:void setDimension(int) -> setDimension
    68:68:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> cM
    77:78:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    89:89:com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode getGamemode() -> cL
    98:99:void setGamemode(com.comphenix.protocol.wrappers.EnumWrappers$NativeGameMode) -> Lorem
    109:109:org.bukkit.WorldType getLevelType() -> cN
    118:119:void setLevelType(org.bukkit.WorldType) -> Lorem
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardDisplayObjective -> com.volmit.wormholes.src.E:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:int getPosition() -> getPosition
    55:56:void setPosition(int) -> setPosition
    66:66:java.lang.String getScoreName() -> getScoreName
    75:76:void setScoreName(java.lang.String) -> setScoreName
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective -> com.volmit.wormholes.src.F:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    63:63:java.lang.String getName() -> getName
    72:73:void setName(java.lang.String) -> setName
    83:83:java.lang.String getDisplayName() -> getDisplayName
    92:93:void setDisplayName(java.lang.String) -> setDisplayName
    103:103:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay getHealthDisplay() -> dv
    113:114:void setHealthDisplay(com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay) -> Lorem
    125:125:int getMode() -> getMode
    134:135:void setMode(int) -> setMode
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay -> com.volmit.wormholes.src.F$Lorem:
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay INTEGER -> ow
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay HEARTS -> ox
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] $VALUES -> oy
    137:137:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay[] values() -> values
    137:137:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$HealthDisplay valueOf(java.lang.String) -> valueOf
    137:137:void <init>(java.lang.String,int) -> <init>
    137:138:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode -> com.volmit.wormholes.src.F$ipsum:
    int ADD_OBJECTIVE -> oz
    int REMOVE_OBJECTIVE -> oA
    int UPDATE_VALUE -> oB
    com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode INSTANCE -> oC
    43:43:void <init>() -> <init>
    51:51:com.volmit.wormholes.util.WrapperPlayServerScoreboardObjective$Mode getInstance() -> dw
    48:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardScore -> com.volmit.wormholes.src.G:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:java.lang.String getScoreName() -> getScoreName
    55:56:void setScoreName(java.lang.String) -> setScoreName
    66:66:java.lang.String getObjectiveName() -> dx
    75:76:void setObjectiveName(java.lang.String) -> Donec
    87:87:int getValue() -> getValue
    96:97:void setValue(int) -> setValue
    100:100:com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction getAction() -> dy
    104:105:void setScoreboardAction(com.comphenix.protocol.wrappers.EnumWrappers$ScoreboardAction) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam -> com.volmit.wormholes.src.H:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    68:68:java.lang.String getName() -> getName
    77:78:void setName(java.lang.String) -> setName
    88:88:java.lang.String getDisplayName() -> getDisplayName
    97:98:void setDisplayName(java.lang.String) -> setDisplayName
    109:109:java.lang.String getPrefix() -> getPrefix
    118:119:void setPrefix(java.lang.String) -> setPrefix
    130:130:java.lang.String getSuffix() -> getSuffix
    139:140:void setSuffix(java.lang.String) -> setSuffix
    151:151:java.lang.String getNameTagVisibility() -> getNameTagVisibility
    160:161:void setNameTagVisibility(java.lang.String) -> setNameTagVisibility
    171:171:int getColor() -> getColor
    180:181:void setColor(int) -> setColor
    189:189:java.lang.String getCollisionRule() -> getCollisionRule
    197:198:void setCollisionRule(java.lang.String) -> setCollisionRule
    210:211:java.util.List getPlayers() -> getPlayers
    220:221:void setPlayers(java.util.List) -> elit
    233:233:int getMode() -> getMode
    242:243:void setMode(int) -> setMode
    263:263:int getPackOptionData() -> dz
    273:274:void setPackOptionData(int) -> et
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode -> com.volmit.wormholes.src.H$Lorem:
    int TEAM_CREATED -> oD
    int TEAM_REMOVED -> oE
    int TEAM_UPDATED -> oF
    int PLAYERS_ADDED -> oG
    int PLAYERS_REMOVED -> oH
    com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode INSTANCE -> oI
    46:46:void <init>() -> <init>
    56:56:com.volmit.wormholes.util.WrapperPlayServerScoreboardTeam$Mode getInstance() -> dA
    53:53:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerServerDifficulty -> com.volmit.wormholes.src.I:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    46:46:com.comphenix.protocol.wrappers.EnumWrappers$Difficulty getDifficulty() -> cM
    55:56:void setDifficulty(com.comphenix.protocol.wrappers.EnumWrappers$Difficulty) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetCooldown -> com.volmit.wormholes.src.J:
    java.lang.Class ITEM_CLASS -> oJ
    com.comphenix.protocol.PacketType TYPE -> oe
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:46:org.bukkit.Material getItem() -> dB
    50:53:void setItem(org.bukkit.Material) -> sit
    56:56:int getTicks() -> dC
    60:61:void setTicks(int) -> sodales
    30:30:java.lang.Class access$100() -> dD
    31:33:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetCooldown$1 -> com.volmit.wormholes.src.J$1:
com.volmit.wormholes.util.WrapperPlayServerSetCooldown$ItemConverter -> com.volmit.wormholes.src.J$Lorem:
    com.comphenix.protocol.reflect.accessors.MethodAccessor getMaterial -> oK
    com.comphenix.protocol.reflect.accessors.MethodAccessor getItem -> oL
    63:63:void <init>() -> <init>
    69:76:org.bukkit.Material getSpecific(java.lang.Object) -> enim
    81:88:java.lang.Object getGeneric(java.lang.Class,org.bukkit.Material) -> Lorem
    93:93:java.lang.Class getSpecificType() -> getSpecificType
    63:63:java.lang.Object getGeneric(java.lang.Class,java.lang.Object) -> getGeneric
    63:63:java.lang.Object getSpecific(java.lang.Object) -> getSpecific
    63:63:void <init>(com.volmit.wormholes.util.WrapperPlayServerSetCooldown$1) -> <init>
    64:65:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSetSlot -> com.volmit.wormholes.src.K:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getWindowId() -> bA
    60:61:void setWindowId(int) -> Duis
    71:71:int getSlot() -> getSlot
    80:81:void setSlot(int) -> aliquam
    89:89:org.bukkit.inventory.ItemStack getSlotData() -> dE
    98:99:void setSlotData(org.bukkit.inventory.ItemStack) -> purus
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity -> com.volmit.wormholes.src.L:
    com.comphenix.protocol.PacketType TYPE -> oe
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> oM
    86:88:void <init>() -> <init>
    91:92:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    95:96:void <init>(org.bukkit.entity.Entity,int,int) -> <init>
    101:106:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity,int,int) -> Lorem
    115:115:int getEntityID() -> bE
    125:125:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    135:135:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    144:145:void setEntityID(int) -> eget
    148:148:java.util.UUID getUniqueId() -> getUniqueId
    152:153:void setUniqueId(java.util.UUID) -> setUniqueId
    163:163:double getX() -> getX
    172:173:void setX(double) -> setX
    183:183:double getY() -> getY
    192:193:void setY(double) -> setY
    203:203:double getZ() -> getZ
    212:213:void setZ(double) -> setZ
    223:223:double getOptionalSpeedX() -> dF
    232:233:void setOptionalSpeedX(double) -> Proin
    243:243:double getOptionalSpeedY() -> dG
    252:253:void setOptionalSpeedY(double) -> ac
    263:263:double getOptionalSpeedZ() -> dH
    272:273:void setOptionalSpeedZ(double) -> enim
    281:281:float getPitch() -> getPitch
    290:291:void setPitch(float) -> setPitch
    299:299:float getYaw() -> getYaw
    308:309:void setYaw(float) -> setYaw
    317:317:int getType() -> getType
    326:327:void setType(int) -> setType
    364:364:int getObjectData() -> dI
    376:377:void setObjectData(int) -> scelerisque
    34:34:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes -> com.volmit.wormholes.src.L$Lorem:
    int BOAT -> oN
    int ITEM_STACK -> oO
    int AREA_EFFECT_CLOUD -> oP
    int MINECART -> oQ
    int ACTIVATED_TNT -> oR
    int ENDER_CRYSTAL -> oS
    int TIPPED_ARROW_PROJECTILE -> oT
    int SNOWBALL_PROJECTILE -> oU
    int EGG_PROJECTILE -> oV
    int GHAST_FIREBALL -> oW
    int BLAZE_FIREBALL -> oX
    int THROWN_ENDERPEARL -> oY
    int WITHER_SKULL_PROJECTILE -> oZ
    int SHULKER_BULLET -> pa
    int FALLING_BLOCK -> pb
    int ITEM_FRAME -> pc
    int EYE_OF_ENDER -> pd
    int THROWN_POTION -> pe
    int THROWN_EXP_BOTTLE -> pf
    int FIREWORK_ROCKET -> pg
    int LEASH_KNOT -> ph
    int ARMORSTAND -> pi
    int FISHING_FLOAT -> pj
    int SPECTRAL_ARROW -> pk
    int DRAGON_FIREBALL -> pl
    com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes INSTANCE -> pm
    43:43:void <init>() -> <init>
    81:81:com.volmit.wormholes.util.WrapperPlayServerSpawnEntity$ObjectTypes getInstance() -> dJ
    73:73:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityExperienceOrb -> com.volmit.wormholes.src.M:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:double getX() -> getX
    98:99:void setX(double) -> setX
    109:109:double getY() -> getY
    118:119:void setY(double) -> setY
    129:129:double getZ() -> getZ
    138:139:void setZ(double) -> setZ
    149:149:int getCount() -> getCount
    158:159:void setCount(int) -> setCount
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityLiving -> com.volmit.wormholes.src.N:
    com.comphenix.protocol.PacketType TYPE -> oe
    com.comphenix.protocol.injector.PacketConstructor entityConstructor -> oM
    41:43:void <init>() -> <init>
    46:47:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    50:51:void <init>(org.bukkit.entity.Entity) -> <init>
    55:59:com.comphenix.protocol.events.PacketContainer fromEntity(org.bukkit.entity.Entity) -> dictum
    68:68:int getEntityID() -> bE
    78:78:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    88:88:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    92:92:java.util.UUID getUniqueId() -> getUniqueId
    96:97:void setUniqueId(java.util.UUID) -> setUniqueId
    105:106:void setEntityID(int) -> eget
    115:115:org.bukkit.entity.EntityType getType() -> getType
    125:126:void setType(org.bukkit.entity.EntityType) -> ipsum
    136:136:double getX() -> getX
    145:146:void setX(double) -> setX
    156:156:double getY() -> getY
    165:166:void setY(double) -> setY
    176:176:double getZ() -> getZ
    185:186:void setZ(double) -> setZ
    194:194:float getYaw() -> getYaw
    203:204:void setYaw(float) -> setYaw
    212:212:float getPitch() -> getPitch
    221:222:void setPitch(float) -> setPitch
    230:230:float getHeadPitch() -> dK
    239:240:void setHeadPitch(float) -> euismod
    248:248:double getVelocityX() -> cD
    257:258:void setVelocityX(double) -> mi
    266:266:double getVelocityY() -> cE
    275:276:void setVelocityY(double) -> euismod
    284:284:double getVelocityZ() -> cF
    293:294:void setVelocityZ(double) -> Pellentesque
    304:304:com.comphenix.protocol.wrappers.WrappedDataWatcher getMetadata() -> cZ
    313:314:void setMetadata(com.comphenix.protocol.wrappers.WrappedDataWatcher) -> Lorem
    35:35:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityPainting -> com.volmit.wormholes.src.O:
    com.comphenix.protocol.PacketType TYPE -> oe
    35:37:void <init>() -> <init>
    40:41:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    51:51:int getEntityID() -> bE
    60:61:void setEntityID(int) -> eget
    70:70:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    80:80:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    91:91:java.lang.String getTitle() -> getTitle
    100:101:void setTitle(java.lang.String) -> setTitle
    111:111:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    120:121:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    124:124:com.comphenix.protocol.wrappers.EnumWrappers$Direction getDirection() -> bu
    128:129:void setDirection(com.comphenix.protocol.wrappers.EnumWrappers$Direction) -> Lorem
    31:31:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnEntityWeather -> com.volmit.wormholes.src.P:
    com.comphenix.protocol.PacketType TYPE -> oe
    33:35:void <init>() -> <init>
    38:39:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getEntityID() -> bE
    58:59:void setEntityID(int) -> eget
    68:68:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    78:78:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    89:89:int getType() -> getType
    98:99:void setType(int) -> setType
    109:109:double getX() -> getX
    118:119:void setX(double) -> setX
    129:129:double getY() -> getY
    138:139:void setY(double) -> setY
    149:149:double getZ() -> getZ
    158:159:void setZ(double) -> setZ
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerSpawnPosition -> com.volmit.wormholes.src.Q:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerStatistic -> com.volmit.wormholes.src.R:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    40:40:java.util.Map getStatistics() -> getStatistics
    44:45:void setStatistics(java.util.Map) -> ipsum
    28:28:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTabComplete -> com.volmit.wormholes.src.S:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getCount() -> getCount
    56:56:java.lang.String[] getMatches() -> dL
    65:66:void setMatches(java.lang.String[]) -> purus
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTileEntityData -> com.volmit.wormholes.src.T:
    com.comphenix.protocol.PacketType TYPE -> oe
    31:33:void <init>() -> <init>
    36:37:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    54:55:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    65:65:int getAction() -> getAction
    74:75:void setAction(int) -> setAction
    85:85:com.comphenix.protocol.wrappers.nbt.NbtBase getNbtData() -> dM
    94:95:void setNbtData(com.comphenix.protocol.wrappers.nbt.NbtBase) -> Lorem
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTitle -> com.volmit.wormholes.src.U:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$TitleAction getAction() -> dN
    53:54:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$TitleAction) -> Lorem
    64:64:com.comphenix.protocol.wrappers.WrappedChatComponent getTitle() -> dO
    73:74:void setTitle(com.comphenix.protocol.wrappers.WrappedChatComponent) -> adipiscing
    84:84:int getFadeIn() -> getFadeIn
    93:94:void setFadeIn(int) -> setFadeIn
    102:102:int getStay() -> getStay
    111:112:void setStay(int) -> setStay
    120:120:int getFadeOut() -> getFadeOut
    129:130:void setFadeOut(int) -> setFadeOut
    27:27:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerTransaction -> com.volmit.wormholes.src.V:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(int) -> Duis
    65:65:short getActionNumber() -> bW
    74:75:void setActionNumber(short) -> ipsum
    85:85:boolean getAccepted() -> bX
    94:95:void setAccepted(boolean) -> Proin
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUnloadChunk -> com.volmit.wormholes.src.W:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getChunkX() -> getChunkX
    54:55:void setChunkX(int) -> mollis
    65:65:int getChunkZ() -> getChunkZ
    74:75:void setChunkZ(int) -> convallis
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateAttributes -> com.volmit.wormholes.src.X:
    com.comphenix.protocol.PacketType TYPE -> oe
    36:38:void <init>() -> <init>
    41:42:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    52:52:int getEntityID() -> bE
    61:62:void setEntityID(int) -> eget
    71:71:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> dolor
    81:81:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> Lorem
    90:90:java.util.List getAttributes() -> getAttributes
    99:100:void setAttributes(java.util.List) -> setAttributes
    32:32:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateHealth -> com.volmit.wormholes.src.Y:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:float getHealth() -> getHealth
    53:54:void setHealth(float) -> setHealth
    64:64:int getFood() -> dP
    73:74:void setFood(int) -> velit
    84:84:float getFoodSaturation() -> dQ
    93:94:void setFoodSaturation(float) -> Pellentesque
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerUpdateTime -> com.volmit.wormholes.src.Z:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getAgeOfTheWorld() -> dR
    53:54:void setAgeOfTheWorld(long) -> Pellentesque
    65:65:long getTimeOfDay() -> getTimeOfDay
    74:75:void setTimeOfDay(long) -> setTimeOfDay
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerVehicleMove -> com.volmit.wormholes.src.aa:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:double getX() -> getX
    54:55:void setX(double) -> setX
    65:65:double getY() -> getY
    74:75:void setY(double) -> setY
    85:85:double getZ() -> getZ
    94:95:void setZ(double) -> setZ
    105:105:float getYaw() -> getYaw
    114:115:void setYaw(float) -> setYaw
    125:125:float getPitch() -> getPitch
    134:135:void setPitch(float) -> setPitch
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWindowData -> com.volmit.wormholes.src.ab:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:int getWindowId() -> bA
    53:54:void setWindowId(int) -> Duis
    64:64:int getProperty() -> dS
    73:74:void setProperty(int) -> Donec
    84:84:int getValue() -> getValue
    93:94:void setValue(int) -> setValue
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWindowItems -> com.volmit.wormholes.src.ae:
    com.comphenix.protocol.PacketType TYPE -> oe
    32:34:void <init>() -> <init>
    37:38:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    49:49:int getWindowId() -> bA
    58:59:void setWindowId(int) -> Duis
    67:67:java.util.List getSlotData() -> dT
    76:77:void setSlotData(java.util.List) -> Morbi
    29:29:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldBorder -> com.volmit.wormholes.src.af:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    38:38:com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction getAction() -> dU
    42:43:void setAction(com.comphenix.protocol.wrappers.EnumWrappers$WorldBorderAction) -> Lorem
    46:46:int getPortalTeleportBoundary() -> dV
    50:51:void setPortalTeleportBoundary(int) -> quam
    54:54:double getCenterX() -> getCenterX
    58:59:void setCenterX(double) -> posuere
    62:62:double getCenterZ() -> getCenterZ
    66:67:void setCenterZ(double) -> molestie
    70:70:double getOldRadius() -> dW
    74:75:void setOldRadius(double) -> odio
    78:78:double getRadius() -> dX
    82:83:void setRadius(double) -> a
    86:86:long getSpeed() -> dY
    90:91:void setSpeed(long) -> at
    94:94:int getWarningTime() -> getWarningTime
    98:99:void setWarningTime(int) -> setWarningTime
    102:102:int getWarningDistance() -> getWarningDistance
    106:107:void setWarningDistance(int) -> setWarningDistance
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldEvent -> com.volmit.wormholes.src.ag:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:int getEffectId() -> getEffectId
    54:55:void setEffectId(int) -> malesuada
    65:65:com.comphenix.protocol.wrappers.BlockPosition getLocation() -> bt
    74:75:void setLocation(com.comphenix.protocol.wrappers.BlockPosition) -> Lorem
    85:85:int getData() -> getData
    94:95:void setData(int) -> setData
    105:105:boolean getDisableRelativeVolume() -> dZ
    114:115:void setDisableRelativeVolume(boolean) -> molestie
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperPlayServerWorldParticles -> com.volmit.wormholes.src.ah:
    com.comphenix.protocol.PacketType TYPE -> oe
    30:32:void <init>() -> <init>
    35:36:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:com.comphenix.protocol.wrappers.EnumWrappers$Particle getParticleType() -> ea
    53:54:void setParticleType(com.comphenix.protocol.wrappers.EnumWrappers$Particle) -> Lorem
    64:64:float getX() -> getX
    73:74:void setX(float) -> at
    84:84:float getY() -> getY
    93:94:void setY(float) -> iaculis
    104:104:float getZ() -> getZ
    113:114:void setZ(float) -> urna
    125:125:float getOffsetX() -> eb
    134:135:void setOffsetX(float) -> Proin
    146:146:float getOffsetY() -> ec
    155:156:void setOffsetY(float) -> ac
    167:167:float getOffsetZ() -> ed
    176:177:void setOffsetZ(float) -> enim
    187:187:float getParticleData() -> ee
    196:197:void setParticleData(float) -> posuere
    207:207:int getNumberOfParticles() -> ef
    216:217:void setNumberOfParticles(int) -> quis
    227:227:boolean getLongDistance() -> eg
    236:237:void setLongDistance(boolean) -> odio
    249:249:int[] getData() -> getData
    258:259:void setData(int[]) -> dolor
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusClientPing -> com.volmit.wormholes.src.ai:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    42:42:long getTime() -> getTime
    51:52:void setTime(long) -> setTime
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusClientStart -> com.volmit.wormholes.src.aj:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusServerPong -> com.volmit.wormholes.src.ak:
    com.comphenix.protocol.PacketType TYPE -> oe
    28:30:void <init>() -> <init>
    33:34:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    44:44:long getTime() -> getTime
    53:54:void setTime(long) -> setTime
    25:25:void <clinit>() -> <clinit>
com.volmit.wormholes.util.WrapperStatusServerServerInfo -> com.volmit.wormholes.src.al:
    com.comphenix.protocol.PacketType TYPE -> oe
    29:31:void <init>() -> <init>
    34:35:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    45:45:com.comphenix.protocol.wrappers.WrappedServerPing getJsonResponse() -> eh
    54:55:void setJsonResponse(com.comphenix.protocol.wrappers.WrappedServerPing) -> Lorem
    26:26:void <clinit>() -> <clinit>
com.volmit.wormholes.util.XML -> com.volmit.wormholes.src.am:
    java.lang.Character AMP -> pn
    java.lang.Character APOS -> po
    java.lang.Character BANG -> pp
    java.lang.Character EQ -> pq
    java.lang.Character GT -> pr
    java.lang.Character LT -> ps
    java.lang.Character QUEST -> pt
    java.lang.Character QUOT -> pu
    java.lang.Character SLASH -> pv
    35:35:void <init>() -> <init>
    76:99:java.lang.String escape(java.lang.String) -> escape
    109:119:void noSpace(java.lang.String) -> quam
    133:286:boolean parse(com.volmit.wormholes.util.XMLTokener,com.volmit.wormholes.util.JSONObject,java.lang.String) -> Lorem
    303:333:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    352:357:com.volmit.wormholes.util.JSONObject toJSONObject(java.lang.String) -> tempus
    368:368:java.lang.String toString(java.lang.Object) -> toString
    381:485:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    38:62:void <clinit>() -> <clinit>
com.volmit.wormholes.util.XMLTokener -> com.volmit.wormholes.src.an:
    java.util.HashMap entity -> pw
    55:56:void <init>(java.lang.String) -> <init>
    66:77:java.lang.String nextCDATA() -> ei
    96:115:java.lang.Object nextContent() -> ej
    128:141:java.lang.Object nextEntity(char) -> pulvinar
    158:204:java.lang.Object nextMeta() -> ek
    224:288:java.lang.Object nextToken() -> el
    306:361:boolean skipPast(java.lang.String) -> malesuada
    42:48:void <clinit>() -> <clinit>
com.volmit.wormholes.util.YAMLDataInput -> com.volmit.wormholes.src.ao:
    14:14:void <init>() -> <init>
    19:65:void load(com.volmit.wormholes.util.DataCluster,java.io.File) -> ipsum
com.volmit.wormholes.util.YAMLDataOutput -> com.volmit.wormholes.src.ap:
    13:13:void <init>() -> <init>
    18:28:void save(com.volmit.wormholes.util.DataCluster,java.io.File) -> Lorem
com.volmit.wormholes.util.ZipArchive -> com.volmit.wormholes.src.aq:
    com.volmit.wormholes.util.GMap fileSet -> px
    17:19:void <init>() -> <init>
    24:25:void add(java.io.File,java.io.File) -> Lorem
    30:37:void remove(java.io.File) -> remove
    42:43:void compress(java.io.File) -> ipsum
    48:48:com.volmit.wormholes.util.ArchiveType getType() -> magnis
com.volmit.wormholes.util.package-info -> com.volmit.wormholes.src.ar:
com.volmit.wormholes.wormhole.BaseWormhole -> com.volmit.wormholes.src.as:
    com.volmit.wormholes.portal.LocalPortal source -> py
    com.volmit.wormholes.portal.Portal destination -> pz
    com.volmit.wormholes.util.GList filters -> nw
    16:20:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    25:25:com.volmit.wormholes.portal.LocalPortal getSource() -> em
    31:31:com.volmit.wormholes.portal.Portal getDestination() -> en
    37:37:com.volmit.wormholes.util.GList getFilters() -> eo
    43:54:void push(org.bukkit.entity.Entity) -> Vestibulum
    void onPush(org.bukkit.entity.Entity) -> in
com.volmit.wormholes.wormhole.FilterMode -> com.volmit.wormholes.src.au:
    com.volmit.wormholes.wormhole.FilterMode WHITELIST -> pA
    com.volmit.wormholes.wormhole.FilterMode BLACKLIST -> pB
    com.volmit.wormholes.wormhole.FilterMode[] $VALUES -> pC
    3:3:com.volmit.wormholes.wormhole.FilterMode[] values() -> values
    3:3:com.volmit.wormholes.wormhole.FilterMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.wormholes.wormhole.FilterPolicy -> com.volmit.wormholes.src.av:
    com.volmit.wormholes.wormhole.FilterPolicy MUTEX -> pD
    com.volmit.wormholes.wormhole.FilterPolicy LOCAL -> pE
    com.volmit.wormholes.wormhole.FilterPolicy BOTH -> pF
    com.volmit.wormholes.wormhole.FilterPolicy[] $VALUES -> pG
    3:3:com.volmit.wormholes.wormhole.FilterPolicy[] values() -> values
    3:3:com.volmit.wormholes.wormhole.FilterPolicy valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
com.volmit.wormholes.wormhole.LocalWormhole -> com.volmit.wormholes.src.aw:
    20:26:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    31:52:void onPush(org.bukkit.entity.Entity) -> in
com.volmit.wormholes.wormhole.MutexWormhole -> com.volmit.wormholes.src.ax:
    17:20:void <init>(com.volmit.wormholes.portal.LocalPortal,com.volmit.wormholes.portal.Portal) -> <init>
    25:31:void onPush(org.bukkit.entity.Entity) -> in
com.volmit.wormholes.wormhole.Wormhole -> com.volmit.wormholes.src.ay:
    com.volmit.wormholes.portal.LocalPortal getSource() -> em
    com.volmit.wormholes.portal.Portal getDestination() -> en
    void push(org.bukkit.entity.Entity) -> Vestibulum
    com.volmit.wormholes.util.GList getFilters() -> eo
com.volmit.wormholes.wormhole.WormholeEntityFilter -> com.volmit.wormholes.src.az:
    com.volmit.wormholes.wormhole.FilterPolicy policy -> pH
    com.volmit.wormholes.wormhole.FilterMode mode -> pI
    com.volmit.wormholes.util.GList entities -> bi
    14:18:void <init>(com.volmit.wormholes.wormhole.FilterPolicy,com.volmit.wormholes.wormhole.FilterMode,com.volmit.wormholes.util.GList) -> <init>
    22:23:void <init>(com.volmit.wormholes.wormhole.FilterPolicy,com.volmit.wormholes.wormhole.FilterMode,org.bukkit.entity.EntityType[]) -> <init>
    28:88:boolean onFilter(com.volmit.wormholes.wormhole.Wormhole,org.bukkit.entity.Entity) -> Lorem
    94:94:com.volmit.wormholes.wormhole.FilterPolicy getFilterPolicy() -> ep
    100:100:com.volmit.wormholes.wormhole.FilterMode getFilterMode() -> eq
    105:105:com.volmit.wormholes.wormhole.FilterPolicy getPolicy() -> er
    110:110:com.volmit.wormholes.wormhole.FilterMode getMode() -> es
    115:115:com.volmit.wormholes.util.GList getEntities() -> Aenean
com.volmit.wormholes.wormhole.WormholeEntityFilter$1 -> com.volmit.wormholes.src.az$1:
    int[] $SwitchMap$com$volmit$wormholes$wormhole$FilterMode -> pJ
    int[] $SwitchMap$com$volmit$wormholes$wormhole$FilterPolicy -> pK
    28:31:void <clinit>() -> <clinit>
com.volmit.wormholes.wormhole.WormholeFilter -> com.volmit.wormholes.src.aA:
    boolean onFilter(com.volmit.wormholes.wormhole.Wormhole,org.bukkit.entity.Entity) -> Lorem
    com.volmit.wormholes.wormhole.FilterPolicy getFilterPolicy() -> ep
    com.volmit.wormholes.wormhole.FilterMode getFilterMode() -> eq
